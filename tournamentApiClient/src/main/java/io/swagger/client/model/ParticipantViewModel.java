/*
 * Tournament Core API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import com.google.gson.annotations.SerializedName;

import org.joda.time.DateTime;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
import java.util.UUID;

import io.swagger.annotations.ApiModelProperty;

/**
 * ParticipantViewModel
 */

public class ParticipantViewModel
{
	@SerializedName("id")
	private UUID id = null;

	@SerializedName("name")
	private String name = null;

	@SerializedName("avatar")
	private String avatar = null;

	@SerializedName("regDate")
	private DateTime regDate = null;

	@SerializedName("login")
	private Long login = null;

	@SerializedName("ipfsHash")
	private String ipfsHash = null;

	@SerializedName("ordersCount")
	private Integer ordersCount = null;

	@SerializedName("totalProfit")
	private Double totalProfit = null;

	@SerializedName("totalProfitInPercent")
	private Double totalProfitInPercent = null;

	@SerializedName("chart")
	private List<Double> chart = null;

	@SerializedName("place")
	private Integer place = null;

	public ParticipantViewModel id(UUID id) {
		this.id = id;
		return this;
	}

	/**
	 * Get id
	 *
	 * @return id
	 **/
	@ApiModelProperty(value = "")
	public UUID getId() {
		return id;
	}

	public void setId(UUID id) {
		this.id = id;
	}

	public ParticipantViewModel name(String name) {
		this.name = name;
		return this;
	}

	/**
	 * Get name
	 *
	 * @return name
	 **/
	@ApiModelProperty(value = "")
	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public ParticipantViewModel avatar(String avatar) {
		this.avatar = avatar;
		return this;
	}

	/**
	 * Get avatar
	 *
	 * @return avatar
	 **/
	@ApiModelProperty(value = "")
	public String getAvatar() {
		return avatar;
	}

	public void setAvatar(String avatar) {
		this.avatar = avatar;
	}

	public ParticipantViewModel regDate(DateTime regDate) {
		this.regDate = regDate;
		return this;
	}

	/**
	 * Get regDate
	 *
	 * @return regDate
	 **/
	@ApiModelProperty(value = "")
	public DateTime getRegDate() {
		return regDate;
	}

	public void setRegDate(DateTime regDate) {
		this.regDate = regDate;
	}

	public ParticipantViewModel login(Long login) {
		this.login = login;
		return this;
	}

	/**
	 * Get login
	 *
	 * @return login
	 **/
	@ApiModelProperty(value = "")
	public Long getLogin() {
		return login;
	}

	public void setLogin(Long login) {
		this.login = login;
	}

	public ParticipantViewModel ipfsHash(String ipfsHash) {
		this.ipfsHash = ipfsHash;
		return this;
	}

	/**
	 * Get ipfsHash
	 *
	 * @return ipfsHash
	 **/
	@ApiModelProperty(value = "")
	public String getIpfsHash() {
		return ipfsHash;
	}

	public void setIpfsHash(String ipfsHash) {
		this.ipfsHash = ipfsHash;
	}

	public ParticipantViewModel ordersCount(Integer ordersCount) {
		this.ordersCount = ordersCount;
		return this;
	}

	/**
	 * Get ordersCount
	 *
	 * @return ordersCount
	 **/
	@ApiModelProperty(value = "")
	public Integer getOrdersCount() {
		return ordersCount;
	}

	public void setOrdersCount(Integer ordersCount) {
		this.ordersCount = ordersCount;
	}

	public ParticipantViewModel totalProfit(Double totalProfit) {
		this.totalProfit = totalProfit;
		return this;
	}

	/**
	 * Get totalProfit
	 *
	 * @return totalProfit
	 **/
	@ApiModelProperty(value = "")
	public Double getTotalProfit() {
		return totalProfit;
	}

	public void setTotalProfit(Double totalProfit) {
		this.totalProfit = totalProfit;
	}

	public ParticipantViewModel totalProfitInPercent(Double totalProfitInPercent) {
		this.totalProfitInPercent = totalProfitInPercent;
		return this;
	}

	/**
	 * Get totalProfitInPercent
	 *
	 * @return totalProfitInPercent
	 **/
	@ApiModelProperty(value = "")
	public Double getTotalProfitInPercent() {
		return totalProfitInPercent;
	}

	public void setTotalProfitInPercent(Double totalProfitInPercent) {
		this.totalProfitInPercent = totalProfitInPercent;
	}

	public ParticipantViewModel chart(List<Double> chart) {
		this.chart = chart;
		return this;
	}

	public ParticipantViewModel addChartItem(Double chartItem) {
		if (this.chart == null) {
			this.chart = new ArrayList<Double>();
		}
		this.chart.add(chartItem);
		return this;
	}

	/**
	 * Get chart
	 *
	 * @return chart
	 **/
	@ApiModelProperty(value = "")
	public List<Double> getChart() {
		return chart;
	}

	public void setChart(List<Double> chart) {
		this.chart = chart;
	}

	public ParticipantViewModel place(Integer place) {
		this.place = place;
		return this;
	}

	/**
	 * Get place
	 *
	 * @return place
	 **/
	@ApiModelProperty(value = "")
	public Integer getPlace() {
		return place;
	}

	public void setPlace(Integer place) {
		this.place = place;
	}


	@Override
	public boolean equals(java.lang.Object o) {
		if (this == o) {
			return true;
		}
		if (o == null || getClass() != o.getClass()) {
			return false;
		}
		ParticipantViewModel participantViewModel = (ParticipantViewModel) o;
		return Objects.equals(this.id, participantViewModel.id) &&
				Objects.equals(this.name, participantViewModel.name) &&
				Objects.equals(this.avatar, participantViewModel.avatar) &&
				Objects.equals(this.regDate, participantViewModel.regDate) &&
				Objects.equals(this.login, participantViewModel.login) &&
				Objects.equals(this.ipfsHash, participantViewModel.ipfsHash) &&
				Objects.equals(this.ordersCount, participantViewModel.ordersCount) &&
				Objects.equals(this.totalProfit, participantViewModel.totalProfit) &&
				Objects.equals(this.totalProfitInPercent, participantViewModel.totalProfitInPercent) &&
				Objects.equals(this.chart, participantViewModel.chart) &&
				Objects.equals(this.place, participantViewModel.place);
	}

	@Override
	public int hashCode() {
		return Objects.hash(id, name, avatar, regDate, login, ipfsHash, ordersCount, totalProfit, totalProfitInPercent, chart, place);
	}


	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class ParticipantViewModel {\n");

		sb.append("    id: ").append(toIndentedString(id)).append("\n");
		sb.append("    name: ").append(toIndentedString(name)).append("\n");
		sb.append("    avatar: ").append(toIndentedString(avatar)).append("\n");
		sb.append("    regDate: ").append(toIndentedString(regDate)).append("\n");
		sb.append("    login: ").append(toIndentedString(login)).append("\n");
		sb.append("    ipfsHash: ").append(toIndentedString(ipfsHash)).append("\n");
		sb.append("    ordersCount: ").append(toIndentedString(ordersCount)).append("\n");
		sb.append("    totalProfit: ").append(toIndentedString(totalProfit)).append("\n");
		sb.append("    totalProfitInPercent: ").append(toIndentedString(totalProfitInPercent)).append("\n");
		sb.append("    chart: ").append(toIndentedString(chart)).append("\n");
		sb.append("    place: ").append(toIndentedString(place)).append("\n");
		sb.append("}");
		return sb.toString();
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private String toIndentedString(java.lang.Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n    ");
	}

}

