/*
 * Tournament Core API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import com.google.gson.annotations.SerializedName;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import io.swagger.annotations.ApiModelProperty;

/**
 * TradeServerViewModel
 */

public class TradeServerViewModel
{
	@SerializedName("tournament")
	private Tournament tournament = null;

	@SerializedName("participantRequest")
	private List<ParticipantRequest> participantRequest = null;

	@SerializedName("tradeAccounts")
	private List<TradeAccount> tradeAccounts = null;

	public TradeServerViewModel tournament(Tournament tournament) {
		this.tournament = tournament;
		return this;
	}

	/**
	 * Get tournament
	 *
	 * @return tournament
	 **/
	@ApiModelProperty(value = "")
	public Tournament getTournament() {
		return tournament;
	}

	public void setTournament(Tournament tournament) {
		this.tournament = tournament;
	}

	public TradeServerViewModel participantRequest(List<ParticipantRequest> participantRequest) {
		this.participantRequest = participantRequest;
		return this;
	}

	public TradeServerViewModel addParticipantRequestItem(ParticipantRequest participantRequestItem) {
		if (this.participantRequest == null) {
			this.participantRequest = new ArrayList<ParticipantRequest>();
		}
		this.participantRequest.add(participantRequestItem);
		return this;
	}

	/**
	 * Get participantRequest
	 *
	 * @return participantRequest
	 **/
	@ApiModelProperty(value = "")
	public List<ParticipantRequest> getParticipantRequest() {
		return participantRequest;
	}

	public void setParticipantRequest(List<ParticipantRequest> participantRequest) {
		this.participantRequest = participantRequest;
	}

	public TradeServerViewModel tradeAccounts(List<TradeAccount> tradeAccounts) {
		this.tradeAccounts = tradeAccounts;
		return this;
	}

	public TradeServerViewModel addTradeAccountsItem(TradeAccount tradeAccountsItem) {
		if (this.tradeAccounts == null) {
			this.tradeAccounts = new ArrayList<TradeAccount>();
		}
		this.tradeAccounts.add(tradeAccountsItem);
		return this;
	}

	/**
	 * Get tradeAccounts
	 *
	 * @return tradeAccounts
	 **/
	@ApiModelProperty(value = "")
	public List<TradeAccount> getTradeAccounts() {
		return tradeAccounts;
	}

	public void setTradeAccounts(List<TradeAccount> tradeAccounts) {
		this.tradeAccounts = tradeAccounts;
	}


	@Override
	public boolean equals(java.lang.Object o) {
		if (this == o) {
			return true;
		}
		if (o == null || getClass() != o.getClass()) {
			return false;
		}
		TradeServerViewModel tradeServerViewModel = (TradeServerViewModel) o;
		return Objects.equals(this.tournament, tradeServerViewModel.tournament) &&
				Objects.equals(this.participantRequest, tradeServerViewModel.participantRequest) &&
				Objects.equals(this.tradeAccounts, tradeServerViewModel.tradeAccounts);
	}

	@Override
	public int hashCode() {
		return Objects.hash(tournament, participantRequest, tradeAccounts);
	}


	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class TradeServerViewModel {\n");

		sb.append("    tournament: ").append(toIndentedString(tournament)).append("\n");
		sb.append("    participantRequest: ").append(toIndentedString(participantRequest)).append("\n");
		sb.append("    tradeAccounts: ").append(toIndentedString(tradeAccounts)).append("\n");
		sb.append("}");
		return sb.toString();
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private String toIndentedString(java.lang.Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n    ");
	}

}

