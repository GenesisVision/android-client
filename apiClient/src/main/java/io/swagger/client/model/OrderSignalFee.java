/*
 * Core API v2.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.Currency;
import io.swagger.client.model.FeeType;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import android.os.Parcelable;
import android.os.Parcel;
/**
 * OrderSignalFee
 */


public class OrderSignalFee implements Parcelable {
  @SerializedName("amount")
  private Double amount = null;

  @SerializedName("currency")
  private Currency currency = null;

  @SerializedName("type")
  private FeeType type = null;

  public OrderSignalFee() {
  }
  public OrderSignalFee amount(Double amount) {
    this.amount = amount;
    return this;
  }

   /**
   * Get amount
   * @return amount
  **/
  @Schema(description = "")
  public Double getAmount() {
    return amount;
  }

  public void setAmount(Double amount) {
    this.amount = amount;
  }

  public OrderSignalFee currency(Currency currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @Schema(description = "")
  public Currency getCurrency() {
    return currency;
  }

  public void setCurrency(Currency currency) {
    this.currency = currency;
  }

  public OrderSignalFee type(FeeType type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(description = "")
  public FeeType getType() {
    return type;
  }

  public void setType(FeeType type) {
    this.type = type;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrderSignalFee orderSignalFee = (OrderSignalFee) o;
    return Objects.equals(this.amount, orderSignalFee.amount) &&
        Objects.equals(this.currency, orderSignalFee.currency) &&
        Objects.equals(this.type, orderSignalFee.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(amount, currency, type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrderSignalFee {\n");
    
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public void writeToParcel(Parcel out, int flags) {
    out.writeValue(amount);
    out.writeValue(currency);
    out.writeValue(type);
  }

  OrderSignalFee(Parcel in) {
    amount = (Double)in.readValue(null);
    currency = (Currency)in.readValue(Currency.class.getClassLoader());
    type = (FeeType)in.readValue(FeeType.class.getClassLoader());
  }

  public int describeContents() {
    return 0;
  }

  public static final Parcelable.Creator<OrderSignalFee> CREATOR = new Parcelable.Creator<OrderSignalFee>() {
    public OrderSignalFee createFromParcel(Parcel in) {
      return new OrderSignalFee(in);
    }
    public OrderSignalFee[] newArray(int size) {
      return new OrderSignalFee[size];
    }
  };
}
