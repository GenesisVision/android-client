/*
 * Core API v1.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

import java.io.IOException;
import java.util.Objects;
import java.util.UUID;

import io.swagger.annotations.ApiModelProperty;

/**
 * NotificationSettingViewModel
 */

public class NotificationSettingViewModel
{
	@SerializedName("id")
	private UUID id = null;

	@SerializedName("isEnabled")
	private Boolean isEnabled = null;

	@SerializedName("programId")
	private UUID programId = null;

	@SerializedName("managerId")
	private UUID managerId = null;

	@SerializedName("type")
	private TypeEnum type = null;

	@SerializedName("conditionType")
	private ConditionTypeEnum conditionType = null;

	@SerializedName("conditionAmount")
	private Double conditionAmount = null;

	public NotificationSettingViewModel id(UUID id) {
		this.id = id;
		return this;
	}

	/**
	 * Get id
	 *
	 * @return id
	 **/
	@ApiModelProperty(value = "")
	public UUID getId() {
		return id;
	}

	public void setId(UUID id) {
		this.id = id;
	}

	public NotificationSettingViewModel isEnabled(Boolean isEnabled) {
		this.isEnabled = isEnabled;
		return this;
	}

	/**
	 * Get isEnabled
	 *
	 * @return isEnabled
	 **/
	@ApiModelProperty(value = "")
	public Boolean isIsEnabled() {
		return isEnabled;
	}

	public void setIsEnabled(Boolean isEnabled) {
		this.isEnabled = isEnabled;
	}

	public NotificationSettingViewModel programId(UUID programId) {
		this.programId = programId;
		return this;
	}

	/**
	 * Get programId
	 *
	 * @return programId
	 **/
	@ApiModelProperty(value = "")
	public UUID getProgramId() {
		return programId;
	}

	public void setProgramId(UUID programId) {
		this.programId = programId;
	}

	public NotificationSettingViewModel managerId(UUID managerId) {
		this.managerId = managerId;
		return this;
	}

	/**
	 * Get managerId
	 *
	 * @return managerId
	 **/
	@ApiModelProperty(value = "")
	public UUID getManagerId() {
		return managerId;
	}

	public void setManagerId(UUID managerId) {
		this.managerId = managerId;
	}

	public NotificationSettingViewModel type(TypeEnum type) {
		this.type = type;
		return this;
	}

	/**
	 * Get type
	 *
	 * @return type
	 **/
	@ApiModelProperty(value = "")
	public TypeEnum getType() {
		return type;
	}

	public void setType(TypeEnum type) {
		this.type = type;
	}

	public NotificationSettingViewModel conditionType(ConditionTypeEnum conditionType) {
		this.conditionType = conditionType;
		return this;
	}

	/**
	 * Get conditionType
	 *
	 * @return conditionType
	 **/
	@ApiModelProperty(value = "")
	public ConditionTypeEnum getConditionType() {
		return conditionType;
	}

	public void setConditionType(ConditionTypeEnum conditionType) {
		this.conditionType = conditionType;
	}

	public NotificationSettingViewModel conditionAmount(Double conditionAmount) {
		this.conditionAmount = conditionAmount;
		return this;
	}

	/**
	 * Get conditionAmount
	 *
	 * @return conditionAmount
	 **/
	@ApiModelProperty(value = "")
	public Double getConditionAmount() {
		return conditionAmount;
	}

	public void setConditionAmount(Double conditionAmount) {
		this.conditionAmount = conditionAmount;
	}

	@Override
	public boolean equals(java.lang.Object o) {
		if (this == o) {
			return true;
		}
		if (o == null || getClass() != o.getClass()) {
			return false;
		}
		NotificationSettingViewModel notificationSettingViewModel = (NotificationSettingViewModel) o;
		return Objects.equals(this.id, notificationSettingViewModel.id) &&
				Objects.equals(this.isEnabled, notificationSettingViewModel.isEnabled) &&
				Objects.equals(this.programId, notificationSettingViewModel.programId) &&
				Objects.equals(this.managerId, notificationSettingViewModel.managerId) &&
				Objects.equals(this.type, notificationSettingViewModel.type) &&
				Objects.equals(this.conditionType, notificationSettingViewModel.conditionType) &&
				Objects.equals(this.conditionAmount, notificationSettingViewModel.conditionAmount);
	}

	@Override
	public int hashCode() {
		return Objects.hash(id, isEnabled, programId, managerId, type, conditionType, conditionAmount);
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class NotificationSettingViewModel {\n");

		sb.append("    id: ").append(toIndentedString(id)).append("\n");
		sb.append("    isEnabled: ").append(toIndentedString(isEnabled)).append("\n");
		sb.append("    programId: ").append(toIndentedString(programId)).append("\n");
		sb.append("    managerId: ").append(toIndentedString(managerId)).append("\n");
		sb.append("    type: ").append(toIndentedString(type)).append("\n");
		sb.append("    conditionType: ").append(toIndentedString(conditionType)).append("\n");
		sb.append("    conditionAmount: ").append(toIndentedString(conditionAmount)).append("\n");
		sb.append("}");
		return sb.toString();
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private String toIndentedString(java.lang.Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n    ");
	}


	/**
	 * Gets or Sets type
	 */
	@JsonAdapter(TypeEnum.Adapter.class)
	public enum TypeEnum
	{
		PLATFORMNEWSANDUPDATES("PlatformNewsAndUpdates"),

		PLATFORMEMERGENCY("PlatformEmergency"),

		PLATFORMOTHER("PlatformOther"),

		PROFILEUPDATED("ProfileUpdated"),

		PROFILEPWDUPDATED("ProfilePwdUpdated"),

		PROFILEVERIFICATION("ProfileVerification"),

		PROFILE2FA("Profile2FA"),

		PROFILESECURITY("ProfileSecurity"),

		PROGRAMNEWSANDUPDATES("ProgramNewsAndUpdates"),

		PROGRAMENDOFPERIOD("ProgramEndOfPeriod"),

		PROGRAMCONDITION("ProgramCondition"),

		MANAGERNEWPROGRAM("ManagerNewProgram");

		public static TypeEnum fromValue(String text) {
			for (TypeEnum b : TypeEnum.values()) {
				if (String.valueOf(b.value).equals(text)) {
					return b;
				}
			}
			return null;
		}

		private String value;

		TypeEnum(String value) {
			this.value = value;
		}

		public String getValue() {
			return value;
		}

		@Override
		public String toString() {
			return String.valueOf(value);
		}

		public static class Adapter extends TypeAdapter<TypeEnum>
		{
			@Override
			public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
				jsonWriter.value(enumeration.getValue());
			}

			@Override
			public TypeEnum read(final JsonReader jsonReader) throws IOException {
				String value = jsonReader.nextString();
				return TypeEnum.fromValue(String.valueOf(value));
			}
		}
	}

	/**
	 * Gets or Sets conditionType
	 */
	@JsonAdapter(ConditionTypeEnum.Adapter.class)
	public enum ConditionTypeEnum
	{
		EMPTY("Empty"),

		PROFIT("Profit"),

		LEVEL("Level");

		public static ConditionTypeEnum fromValue(String text) {
			for (ConditionTypeEnum b : ConditionTypeEnum.values()) {
				if (String.valueOf(b.value).equals(text)) {
					return b;
				}
			}
			return null;
		}

		private String value;

		ConditionTypeEnum(String value) {
			this.value = value;
		}

		public String getValue() {
			return value;
		}

		@Override
		public String toString() {
			return String.valueOf(value);
		}

		public static class Adapter extends TypeAdapter<ConditionTypeEnum>
		{
			@Override
			public void write(final JsonWriter jsonWriter, final ConditionTypeEnum enumeration) throws IOException {
				jsonWriter.value(enumeration.getValue());
			}

			@Override
			public ConditionTypeEnum read(final JsonReader jsonReader) throws IOException {
				String value = jsonReader.nextString();
				return ConditionTypeEnum.fromValue(String.valueOf(value));
			}
		}
	}

}

