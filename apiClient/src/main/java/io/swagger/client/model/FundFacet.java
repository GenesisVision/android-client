/*
 * Core API v1.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

import java.io.IOException;
import java.util.Objects;
import java.util.UUID;

import io.swagger.annotations.ApiModelProperty;

/**
 * FundFacet
 */

public class FundFacet
{
	@SerializedName("sorting")
	private SortingEnum sorting = null;

	@SerializedName("id")
	private UUID id = null;

	@SerializedName("title")
	private String title = null;

	@SerializedName("description")
	private String description = null;

	@SerializedName("logo")
	private String logo = null;

	@SerializedName("url")
	private String url = null;

	@SerializedName("sortType")
	private SortTypeEnum sortType = null;

	@SerializedName("timeframe")
	private TimeframeEnum timeframe = null;

	public FundFacet sorting(SortingEnum sorting) {
		this.sorting = sorting;
		return this;
	}

	/**
	 * Get sorting
	 *
	 * @return sorting
	 **/
	@ApiModelProperty(value = "")
	public SortingEnum getSorting() {
		return sorting;
	}

	public void setSorting(SortingEnum sorting) {
		this.sorting = sorting;
	}

	public FundFacet id(UUID id) {
		this.id = id;
		return this;
	}

	/**
	 * Get id
	 *
	 * @return id
	 **/
	@ApiModelProperty(value = "")
	public UUID getId() {
		return id;
	}

	public void setId(UUID id) {
		this.id = id;
	}

	public FundFacet title(String title) {
		this.title = title;
		return this;
	}

	/**
	 * Get title
	 *
	 * @return title
	 **/
	@ApiModelProperty(value = "")
	public String getTitle() {
		return title;
	}

	public void setTitle(String title) {
		this.title = title;
	}

	public FundFacet description(String description) {
		this.description = description;
		return this;
	}

	/**
	 * Get description
	 *
	 * @return description
	 **/
	@ApiModelProperty(value = "")
	public String getDescription() {
		return description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	public FundFacet logo(String logo) {
		this.logo = logo;
		return this;
	}

	/**
	 * Get logo
	 *
	 * @return logo
	 **/
	@ApiModelProperty(value = "")
	public String getLogo() {
		return logo;
	}

	public void setLogo(String logo) {
		this.logo = logo;
	}

	public FundFacet url(String url) {
		this.url = url;
		return this;
	}

	/**
	 * Get url
	 *
	 * @return url
	 **/
	@ApiModelProperty(value = "")
	public String getUrl() {
		return url;
	}

	public void setUrl(String url) {
		this.url = url;
	}

	public FundFacet sortType(SortTypeEnum sortType) {
		this.sortType = sortType;
		return this;
	}

	/**
	 * Get sortType
	 *
	 * @return sortType
	 **/
	@ApiModelProperty(value = "")
	public SortTypeEnum getSortType() {
		return sortType;
	}

	public void setSortType(SortTypeEnum sortType) {
		this.sortType = sortType;
	}

	public FundFacet timeframe(TimeframeEnum timeframe) {
		this.timeframe = timeframe;
		return this;
	}

	/**
	 * Get timeframe
	 *
	 * @return timeframe
	 **/
	@ApiModelProperty(value = "")
	public TimeframeEnum getTimeframe() {
		return timeframe;
	}

	public void setTimeframe(TimeframeEnum timeframe) {
		this.timeframe = timeframe;
	}

	@Override
	public boolean equals(java.lang.Object o) {
		if (this == o) {
			return true;
		}
		if (o == null || getClass() != o.getClass()) {
			return false;
		}
		FundFacet fundFacet = (FundFacet) o;
		return Objects.equals(this.sorting, fundFacet.sorting) &&
				Objects.equals(this.id, fundFacet.id) &&
				Objects.equals(this.title, fundFacet.title) &&
				Objects.equals(this.description, fundFacet.description) &&
				Objects.equals(this.logo, fundFacet.logo) &&
				Objects.equals(this.url, fundFacet.url) &&
				Objects.equals(this.sortType, fundFacet.sortType) &&
				Objects.equals(this.timeframe, fundFacet.timeframe);
	}

	@Override
	public int hashCode() {
		return Objects.hash(sorting, id, title, description, logo, url, sortType, timeframe);
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class FundFacet {\n");

		sb.append("    sorting: ").append(toIndentedString(sorting)).append("\n");
		sb.append("    id: ").append(toIndentedString(id)).append("\n");
		sb.append("    title: ").append(toIndentedString(title)).append("\n");
		sb.append("    description: ").append(toIndentedString(description)).append("\n");
		sb.append("    logo: ").append(toIndentedString(logo)).append("\n");
		sb.append("    url: ").append(toIndentedString(url)).append("\n");
		sb.append("    sortType: ").append(toIndentedString(sortType)).append("\n");
		sb.append("    timeframe: ").append(toIndentedString(timeframe)).append("\n");
		sb.append("}");
		return sb.toString();
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private String toIndentedString(java.lang.Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n    ");
	}

	/**
	 * Gets or Sets sorting
	 */
	@JsonAdapter(SortingEnum.Adapter.class)
	public enum SortingEnum
	{
		BYPROFITASC("ByProfitAsc"),

		BYPROFITDESC("ByProfitDesc"),

		BYDRAWDOWNASC("ByDrawdownAsc"),

		BYDRAWDOWNDESC("ByDrawdownDesc"),

		BYINVESTORSASC("ByInvestorsAsc"),

		BYINVESTORSDESC("ByInvestorsDesc"),

		BYNEWASC("ByNewAsc"),

		BYNEWDESC("ByNewDesc"),

		BYTITLEASC("ByTitleAsc"),

		BYTITLEDESC("ByTitleDesc"),

		BYBALANCEASC("ByBalanceAsc"),

		BYBALANCEDESC("ByBalanceDesc");

		public static SortingEnum fromValue(String text) {
			for (SortingEnum b : SortingEnum.values()) {
				if (String.valueOf(b.value).equals(text)) {
					return b;
				}
			}
			return null;
		}

		private String value;

		SortingEnum(String value) {
			this.value = value;
		}

		public String getValue() {
			return value;
		}

		@Override
		public String toString() {
			return String.valueOf(value);
		}

		public static class Adapter extends TypeAdapter<SortingEnum>
		{
			@Override
			public void write(final JsonWriter jsonWriter, final SortingEnum enumeration) throws IOException {
				jsonWriter.value(enumeration.getValue());
			}

			@Override
			public SortingEnum read(final JsonReader jsonReader) throws IOException {
				String value = jsonReader.nextString();
				return SortingEnum.fromValue(String.valueOf(value));
			}
		}
	}


	/**
	 * Gets or Sets sortType
	 */
	@JsonAdapter(SortTypeEnum.Adapter.class)
	public enum SortTypeEnum
	{
		NEW("New"),

		TOP("Top"),

		WEEKLYTOP("WeeklyTop"),

		POPULAR("Popular"),

		TOLEVELUP("ToLevelUp"),

		MOSTRELIABLE("MostReliable");

		public static SortTypeEnum fromValue(String text) {
			for (SortTypeEnum b : SortTypeEnum.values()) {
				if (String.valueOf(b.value).equals(text)) {
					return b;
				}
			}
			return null;
		}

		private String value;

		SortTypeEnum(String value) {
			this.value = value;
		}

		public String getValue() {
			return value;
		}

		@Override
		public String toString() {
			return String.valueOf(value);
		}

		public static class Adapter extends TypeAdapter<SortTypeEnum>
		{
			@Override
			public void write(final JsonWriter jsonWriter, final SortTypeEnum enumeration) throws IOException {
				jsonWriter.value(enumeration.getValue());
			}

			@Override
			public SortTypeEnum read(final JsonReader jsonReader) throws IOException {
				String value = jsonReader.nextString();
				return SortTypeEnum.fromValue(String.valueOf(value));
			}
		}
	}

	/**
	 * Gets or Sets timeframe
	 */
	@JsonAdapter(TimeframeEnum.Adapter.class)
	public enum TimeframeEnum
	{
		DAY("Day"),

		WEEK("Week"),

		MONTH("Month"),

		THREEMONTHS("ThreeMonths"),

		YEAR("Year"),

		ALLTIME("AllTime");

		public static TimeframeEnum fromValue(String text) {
			for (TimeframeEnum b : TimeframeEnum.values()) {
				if (String.valueOf(b.value).equals(text)) {
					return b;
				}
			}
			return null;
		}

		private String value;

		TimeframeEnum(String value) {
			this.value = value;
		}

		public String getValue() {
			return value;
		}

		@Override
		public String toString() {
			return String.valueOf(value);
		}

		public static class Adapter extends TypeAdapter<TimeframeEnum>
		{
			@Override
			public void write(final JsonWriter jsonWriter, final TimeframeEnum enumeration) throws IOException {
				jsonWriter.value(enumeration.getValue());
			}

			@Override
			public TimeframeEnum read(final JsonReader jsonReader) throws IOException {
				String value = jsonReader.nextString();
				return TimeframeEnum.fromValue(String.valueOf(value));
			}
		}
	}

}

