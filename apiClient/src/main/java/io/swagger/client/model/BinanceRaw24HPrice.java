/*
 * Core API v2.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import android.os.Parcel;
import android.os.Parcelable;

import com.google.gson.annotations.SerializedName;

import org.joda.time.DateTime;

import java.util.Objects;

import io.swagger.v3.oas.annotations.media.Schema;

/**
 * BinanceRaw24HPrice
 */


public class BinanceRaw24HPrice implements Parcelable
{
	@SerializedName("symbol")
	private String symbol = null;

	@SerializedName("priceChange")
	private Double priceChange = null;

	@SerializedName("priceChangePercent")
	private Double priceChangePercent = null;

	@SerializedName("weightedAveragePrice")
	private Double weightedAveragePrice = null;

	@SerializedName("lastPrice")
	private Double lastPrice = null;

	@SerializedName("lastQuantity")
	private Double lastQuantity = null;

	@SerializedName("openPrice")
	private Double openPrice = null;

	@SerializedName("highPrice")
	private Double highPrice = null;

	@SerializedName("lowPrice")
	private Double lowPrice = null;

	@SerializedName("baseVolume")
	private Double baseVolume = null;

	@SerializedName("quoteVolume")
	private Double quoteVolume = null;

	@SerializedName("openTime")
	private DateTime openTime = null;

	@SerializedName("closeTime")
	private DateTime closeTime = null;

	@SerializedName("firstTradeId")
	private Long firstTradeId = null;

	@SerializedName("lastTradeId")
	private Long lastTradeId = null;

	@SerializedName("totalTrades")
	private Long totalTrades = null;

	@SerializedName("prevDayClosePrice")
	private Double prevDayClosePrice = null;

	@SerializedName("bidPrice")
	private Double bidPrice = null;

	@SerializedName("bidQuantity")
	private Double bidQuantity = null;

	@SerializedName("askPrice")
	private Double askPrice = null;

	@SerializedName("askQuantity")
	private Double askQuantity = null;

	public BinanceRaw24HPrice() {
	}

	public BinanceRaw24HPrice symbol(String symbol) {
		this.symbol = symbol;
		return this;
	}

	/**
	 * Get symbol
	 *
	 * @return symbol
	 **/
	@Schema(description = "")
	public String getSymbol() {
		return symbol;
	}

	public void setSymbol(String symbol) {
		this.symbol = symbol;
	}

	public BinanceRaw24HPrice priceChange(Double priceChange) {
		this.priceChange = priceChange;
		return this;
	}

	/**
	 * Get priceChange
	 *
	 * @return priceChange
	 **/
	@Schema(description = "")
	public Double getPriceChange() {
		return priceChange;
	}

	public void setPriceChange(Double priceChange) {
		this.priceChange = priceChange;
	}

	public BinanceRaw24HPrice priceChangePercent(Double priceChangePercent) {
		this.priceChangePercent = priceChangePercent;
		return this;
	}

	/**
	 * Get priceChangePercent
	 *
	 * @return priceChangePercent
	 **/
	@Schema(description = "")
	public Double getPriceChangePercent() {
		return priceChangePercent;
	}

	public void setPriceChangePercent(Double priceChangePercent) {
		this.priceChangePercent = priceChangePercent;
	}

	public BinanceRaw24HPrice weightedAveragePrice(Double weightedAveragePrice) {
		this.weightedAveragePrice = weightedAveragePrice;
		return this;
	}

	/**
	 * Get weightedAveragePrice
	 *
	 * @return weightedAveragePrice
	 **/
	@Schema(description = "")
	public Double getWeightedAveragePrice() {
		return weightedAveragePrice;
	}

	public void setWeightedAveragePrice(Double weightedAveragePrice) {
		this.weightedAveragePrice = weightedAveragePrice;
	}

	public BinanceRaw24HPrice lastPrice(Double lastPrice) {
		this.lastPrice = lastPrice;
		return this;
	}

	/**
	 * Get lastPrice
	 *
	 * @return lastPrice
	 **/
	@Schema(description = "")
	public Double getLastPrice() {
		return lastPrice;
	}

	public void setLastPrice(Double lastPrice) {
		this.lastPrice = lastPrice;
	}

	public BinanceRaw24HPrice lastQuantity(Double lastQuantity) {
		this.lastQuantity = lastQuantity;
		return this;
	}

	/**
	 * Get lastQuantity
	 *
	 * @return lastQuantity
	 **/
	@Schema(description = "")
	public Double getLastQuantity() {
		return lastQuantity;
	}

	public void setLastQuantity(Double lastQuantity) {
		this.lastQuantity = lastQuantity;
	}

	public BinanceRaw24HPrice openPrice(Double openPrice) {
		this.openPrice = openPrice;
		return this;
	}

	/**
	 * Get openPrice
	 *
	 * @return openPrice
	 **/
	@Schema(description = "")
	public Double getOpenPrice() {
		return openPrice;
	}

	public void setOpenPrice(Double openPrice) {
		this.openPrice = openPrice;
	}

	public BinanceRaw24HPrice highPrice(Double highPrice) {
		this.highPrice = highPrice;
		return this;
	}

	/**
	 * Get highPrice
	 *
	 * @return highPrice
	 **/
	@Schema(description = "")
	public Double getHighPrice() {
		return highPrice;
	}

	public void setHighPrice(Double highPrice) {
		this.highPrice = highPrice;
	}

	public BinanceRaw24HPrice lowPrice(Double lowPrice) {
		this.lowPrice = lowPrice;
		return this;
	}

	/**
	 * Get lowPrice
	 *
	 * @return lowPrice
	 **/
	@Schema(description = "")
	public Double getLowPrice() {
		return lowPrice;
	}

	public void setLowPrice(Double lowPrice) {
		this.lowPrice = lowPrice;
	}

	public BinanceRaw24HPrice baseVolume(Double baseVolume) {
		this.baseVolume = baseVolume;
		return this;
	}

	/**
	 * Get baseVolume
	 *
	 * @return baseVolume
	 **/
	@Schema(description = "")
	public Double getBaseVolume() {
		return baseVolume;
	}

	public void setBaseVolume(Double baseVolume) {
		this.baseVolume = baseVolume;
	}

	public BinanceRaw24HPrice quoteVolume(Double quoteVolume) {
		this.quoteVolume = quoteVolume;
		return this;
	}

	/**
	 * Get quoteVolume
	 *
	 * @return quoteVolume
	 **/
	@Schema(description = "")
	public Double getQuoteVolume() {
		return quoteVolume;
	}

	public void setQuoteVolume(Double quoteVolume) {
		this.quoteVolume = quoteVolume;
	}

	public BinanceRaw24HPrice openTime(DateTime openTime) {
		this.openTime = openTime;
		return this;
	}

	/**
	 * Get openTime
	 *
	 * @return openTime
	 **/
	@Schema(description = "")
	public DateTime getOpenTime() {
		return openTime;
	}

	public void setOpenTime(DateTime openTime) {
		this.openTime = openTime;
	}

	public BinanceRaw24HPrice closeTime(DateTime closeTime) {
		this.closeTime = closeTime;
		return this;
	}

	/**
	 * Get closeTime
	 *
	 * @return closeTime
	 **/
	@Schema(description = "")
	public DateTime getCloseTime() {
		return closeTime;
	}

	public void setCloseTime(DateTime closeTime) {
		this.closeTime = closeTime;
	}

	public BinanceRaw24HPrice firstTradeId(Long firstTradeId) {
		this.firstTradeId = firstTradeId;
		return this;
	}

	/**
	 * Get firstTradeId
	 *
	 * @return firstTradeId
	 **/
	@Schema(description = "")
	public Long getFirstTradeId() {
		return firstTradeId;
	}

	public void setFirstTradeId(Long firstTradeId) {
		this.firstTradeId = firstTradeId;
	}

	public BinanceRaw24HPrice lastTradeId(Long lastTradeId) {
		this.lastTradeId = lastTradeId;
		return this;
	}

	/**
	 * Get lastTradeId
	 *
	 * @return lastTradeId
	 **/
	@Schema(description = "")
	public Long getLastTradeId() {
		return lastTradeId;
	}

	public void setLastTradeId(Long lastTradeId) {
		this.lastTradeId = lastTradeId;
	}

	public BinanceRaw24HPrice totalTrades(Long totalTrades) {
		this.totalTrades = totalTrades;
		return this;
	}

	/**
	 * Get totalTrades
	 *
	 * @return totalTrades
	 **/
	@Schema(description = "")
	public Long getTotalTrades() {
		return totalTrades;
	}

	public void setTotalTrades(Long totalTrades) {
		this.totalTrades = totalTrades;
	}

	public BinanceRaw24HPrice prevDayClosePrice(Double prevDayClosePrice) {
		this.prevDayClosePrice = prevDayClosePrice;
		return this;
	}

	/**
	 * Get prevDayClosePrice
	 *
	 * @return prevDayClosePrice
	 **/
	@Schema(description = "")
	public Double getPrevDayClosePrice() {
		return prevDayClosePrice;
	}

	public void setPrevDayClosePrice(Double prevDayClosePrice) {
		this.prevDayClosePrice = prevDayClosePrice;
	}

	public BinanceRaw24HPrice bidPrice(Double bidPrice) {
		this.bidPrice = bidPrice;
		return this;
	}

	/**
	 * Get bidPrice
	 *
	 * @return bidPrice
	 **/
	@Schema(description = "")
	public Double getBidPrice() {
		return bidPrice;
	}

	public void setBidPrice(Double bidPrice) {
		this.bidPrice = bidPrice;
	}

	public BinanceRaw24HPrice bidQuantity(Double bidQuantity) {
		this.bidQuantity = bidQuantity;
		return this;
	}

	/**
	 * Get bidQuantity
	 *
	 * @return bidQuantity
	 **/
	@Schema(description = "")
	public Double getBidQuantity() {
		return bidQuantity;
	}

	public void setBidQuantity(Double bidQuantity) {
		this.bidQuantity = bidQuantity;
	}

	public BinanceRaw24HPrice askPrice(Double askPrice) {
		this.askPrice = askPrice;
		return this;
	}

	/**
	 * Get askPrice
	 *
	 * @return askPrice
	 **/
	@Schema(description = "")
	public Double getAskPrice() {
		return askPrice;
	}

	public void setAskPrice(Double askPrice) {
		this.askPrice = askPrice;
	}

	public BinanceRaw24HPrice askQuantity(Double askQuantity) {
		this.askQuantity = askQuantity;
		return this;
	}

	/**
	 * Get askQuantity
	 *
	 * @return askQuantity
	 **/
	@Schema(description = "")
	public Double getAskQuantity() {
		return askQuantity;
	}

	public void setAskQuantity(Double askQuantity) {
		this.askQuantity = askQuantity;
	}


	@Override
	public boolean equals(java.lang.Object o) {
		if (this == o) {
			return true;
		}
		if (o == null || getClass() != o.getClass()) {
			return false;
		}
		BinanceRaw24HPrice binanceRaw24HPrice = (BinanceRaw24HPrice) o;
		return Objects.equals(this.symbol, binanceRaw24HPrice.symbol) &&
				Objects.equals(this.priceChange, binanceRaw24HPrice.priceChange) &&
				Objects.equals(this.priceChangePercent, binanceRaw24HPrice.priceChangePercent) &&
				Objects.equals(this.weightedAveragePrice, binanceRaw24HPrice.weightedAveragePrice) &&
				Objects.equals(this.lastPrice, binanceRaw24HPrice.lastPrice) &&
				Objects.equals(this.lastQuantity, binanceRaw24HPrice.lastQuantity) &&
				Objects.equals(this.openPrice, binanceRaw24HPrice.openPrice) &&
				Objects.equals(this.highPrice, binanceRaw24HPrice.highPrice) &&
				Objects.equals(this.lowPrice, binanceRaw24HPrice.lowPrice) &&
				Objects.equals(this.baseVolume, binanceRaw24HPrice.baseVolume) &&
				Objects.equals(this.quoteVolume, binanceRaw24HPrice.quoteVolume) &&
				Objects.equals(this.openTime, binanceRaw24HPrice.openTime) &&
				Objects.equals(this.closeTime, binanceRaw24HPrice.closeTime) &&
				Objects.equals(this.firstTradeId, binanceRaw24HPrice.firstTradeId) &&
				Objects.equals(this.lastTradeId, binanceRaw24HPrice.lastTradeId) &&
				Objects.equals(this.totalTrades, binanceRaw24HPrice.totalTrades) &&
				Objects.equals(this.prevDayClosePrice, binanceRaw24HPrice.prevDayClosePrice) &&
				Objects.equals(this.bidPrice, binanceRaw24HPrice.bidPrice) &&
				Objects.equals(this.bidQuantity, binanceRaw24HPrice.bidQuantity) &&
				Objects.equals(this.askPrice, binanceRaw24HPrice.askPrice) &&
				Objects.equals(this.askQuantity, binanceRaw24HPrice.askQuantity);
	}

	@Override
	public int hashCode() {
		return Objects.hash(symbol, priceChange, priceChangePercent, weightedAveragePrice, lastPrice, lastQuantity, openPrice, highPrice, lowPrice, baseVolume, quoteVolume, openTime, closeTime, firstTradeId, lastTradeId, totalTrades, prevDayClosePrice, bidPrice, bidQuantity, askPrice, askQuantity);
	}


	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class BinanceRaw24HPrice {\n");

		sb.append("    symbol: ").append(toIndentedString(symbol)).append("\n");
		sb.append("    priceChange: ").append(toIndentedString(priceChange)).append("\n");
		sb.append("    priceChangePercent: ").append(toIndentedString(priceChangePercent)).append("\n");
		sb.append("    weightedAveragePrice: ").append(toIndentedString(weightedAveragePrice)).append("\n");
		sb.append("    lastPrice: ").append(toIndentedString(lastPrice)).append("\n");
		sb.append("    lastQuantity: ").append(toIndentedString(lastQuantity)).append("\n");
		sb.append("    openPrice: ").append(toIndentedString(openPrice)).append("\n");
		sb.append("    highPrice: ").append(toIndentedString(highPrice)).append("\n");
		sb.append("    lowPrice: ").append(toIndentedString(lowPrice)).append("\n");
		sb.append("    baseVolume: ").append(toIndentedString(baseVolume)).append("\n");
		sb.append("    quoteVolume: ").append(toIndentedString(quoteVolume)).append("\n");
		sb.append("    openTime: ").append(toIndentedString(openTime)).append("\n");
		sb.append("    closeTime: ").append(toIndentedString(closeTime)).append("\n");
		sb.append("    firstTradeId: ").append(toIndentedString(firstTradeId)).append("\n");
		sb.append("    lastTradeId: ").append(toIndentedString(lastTradeId)).append("\n");
		sb.append("    totalTrades: ").append(toIndentedString(totalTrades)).append("\n");
		sb.append("    prevDayClosePrice: ").append(toIndentedString(prevDayClosePrice)).append("\n");
		sb.append("    bidPrice: ").append(toIndentedString(bidPrice)).append("\n");
		sb.append("    bidQuantity: ").append(toIndentedString(bidQuantity)).append("\n");
		sb.append("    askPrice: ").append(toIndentedString(askPrice)).append("\n");
		sb.append("    askQuantity: ").append(toIndentedString(askQuantity)).append("\n");
		sb.append("}");
		return sb.toString();
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private String toIndentedString(java.lang.Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n    ");
	}


	public void writeToParcel(Parcel out, int flags) {
		out.writeValue(symbol);
		out.writeValue(priceChange);
		out.writeValue(priceChangePercent);
		out.writeValue(weightedAveragePrice);
		out.writeValue(lastPrice);
		out.writeValue(lastQuantity);
		out.writeValue(openPrice);
		out.writeValue(highPrice);
		out.writeValue(lowPrice);
		out.writeValue(baseVolume);
		out.writeValue(quoteVolume);
		out.writeValue(openTime);
		out.writeValue(closeTime);
		out.writeValue(firstTradeId);
		out.writeValue(lastTradeId);
		out.writeValue(totalTrades);
		out.writeValue(prevDayClosePrice);
		out.writeValue(bidPrice);
		out.writeValue(bidQuantity);
		out.writeValue(askPrice);
		out.writeValue(askQuantity);
	}

	public static final Parcelable.Creator<BinanceRaw24HPrice> CREATOR = new Parcelable.Creator<BinanceRaw24HPrice>()
	{
		public BinanceRaw24HPrice createFromParcel(Parcel in) {
			return new BinanceRaw24HPrice(in);
		}

		public BinanceRaw24HPrice[] newArray(int size) {
			return new BinanceRaw24HPrice[size];
		}
	};

	public int describeContents() {
		return 0;
	}

	BinanceRaw24HPrice(Parcel in) {
		symbol = (String) in.readValue(null);
		priceChange = (Double) in.readValue(null);
		priceChangePercent = (Double) in.readValue(null);
		weightedAveragePrice = (Double) in.readValue(null);
		lastPrice = (Double) in.readValue(null);
		lastQuantity = (Double) in.readValue(null);
		openPrice = (Double) in.readValue(null);
		highPrice = (Double) in.readValue(null);
		lowPrice = (Double) in.readValue(null);
		baseVolume = (Double) in.readValue(null);
		quoteVolume = (Double) in.readValue(null);
		openTime = (DateTime) in.readValue(DateTime.class.getClassLoader());
		closeTime = (DateTime) in.readValue(DateTime.class.getClassLoader());
		firstTradeId = (Long) in.readValue(null);
		lastTradeId = (Long) in.readValue(null);
		totalTrades = (Long) in.readValue(null);
		prevDayClosePrice = (Double) in.readValue(null);
		bidPrice = (Double) in.readValue(null);
		bidQuantity = (Double) in.readValue(null);
		askPrice = (Double) in.readValue(null);
		askQuantity = (Double) in.readValue(null);
	}
}
