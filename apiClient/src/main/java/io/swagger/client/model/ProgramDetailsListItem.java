/*
 * Core API v2.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import android.os.Parcel;
import android.os.Parcelable;

import com.google.gson.annotations.SerializedName;

import org.joda.time.DateTime;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
import java.util.UUID;

import io.swagger.v3.oas.annotations.media.Schema;

/**
 * ProgramDetailsListItem
 */


public class ProgramDetailsListItem implements Parcelable
{
  public static final Parcelable.Creator<ProgramDetailsListItem> CREATOR = new Parcelable.Creator<ProgramDetailsListItem>()
  {
    public ProgramDetailsListItem createFromParcel(Parcel in) {
      return new ProgramDetailsListItem(in);
    }

    public ProgramDetailsListItem[] newArray(int size) {
      return new ProgramDetailsListItem[size];
    }
  };

  @SerializedName("id")
  private UUID id = null;

  @SerializedName("type")
  private ProgramType type = null;

  @SerializedName("logoUrl")
  private String logoUrl = null;

  @SerializedName("url")
  private String url = null;

  @SerializedName("index")
  private Integer index = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("color")
  private String color = null;

  @SerializedName("title")
  private String title = null;

  @SerializedName("creationDate")
  private DateTime creationDate = null;

  @SerializedName("currency")
  private Currency currency = null;

  @SerializedName("level")
  private Integer level = null;

  @SerializedName("levelProgress")
  private Double levelProgress = null;

  @SerializedName("periodDuration")
  private Integer periodDuration = null;

  @SerializedName("availableToInvest")
  private Double availableToInvest = null;

  @SerializedName("investorsCount")
  private Integer investorsCount = null;

  @SerializedName("periodStarts")
  private DateTime periodStarts = null;

  @SerializedName("periodEnds")
  private DateTime periodEnds = null;

  @SerializedName("status")
  private String status = null;

  @SerializedName("entryFeeSelected")
  private Double entryFeeSelected = null;

  @SerializedName("entryFeeCurrent")
  private Double entryFeeCurrent = null;

  @SerializedName("brokerId")
  private UUID brokerId = null;

  @SerializedName("owner")
  private ProfilePublicShort owner = null;

  @SerializedName("personalDetails")
  private PersonalProgramDetailsList personalDetails = null;

  @SerializedName("tags")
  private List<Tag> tags = null;

  @SerializedName("statistic")
  private ProfitChart statistic = null;

  @SerializedName("balance")
  private AmountWithCurrency balance = null;

  public ProgramDetailsListItem() {
  }

  ProgramDetailsListItem(Parcel in) {
    id = (UUID) in.readValue(UUID.class.getClassLoader());
    type = (ProgramType) in.readValue(ProgramType.class.getClassLoader());
    logoUrl = (String) in.readValue(null);
    url = (String) in.readValue(null);
    index = (Integer) in.readValue(null);
    description = (String) in.readValue(null);
    color = (String) in.readValue(null);
    title = (String) in.readValue(null);
    creationDate = (DateTime) in.readValue(DateTime.class.getClassLoader());
    currency = (Currency) in.readValue(Currency.class.getClassLoader());
    level = (Integer) in.readValue(null);
    levelProgress = (Double) in.readValue(null);
    periodDuration = (Integer) in.readValue(null);
    availableToInvest = (Double) in.readValue(null);
    investorsCount = (Integer) in.readValue(null);
    periodStarts = (DateTime) in.readValue(DateTime.class.getClassLoader());
    periodEnds = (DateTime) in.readValue(DateTime.class.getClassLoader());
    status = (String) in.readValue(null);
    entryFeeSelected = (Double) in.readValue(null);
    entryFeeCurrent = (Double) in.readValue(null);
    brokerId = (UUID) in.readValue(UUID.class.getClassLoader());
    owner = (ProfilePublicShort) in.readValue(ProfilePublicShort.class.getClassLoader());
    personalDetails = (PersonalProgramDetailsList) in.readValue(PersonalProgramDetailsList.class.getClassLoader());
    tags = (List<Tag>) in.readValue(Tag.class.getClassLoader());
    statistic = (ProfitChart) in.readValue(ProfitChart.class.getClassLoader());
    balance = (AmountWithCurrency) in.readValue(AmountWithCurrency.class.getClassLoader());
  }

  public ProgramDetailsListItem id(UUID id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   *
   * @return id
   **/
  @Schema(description = "")
  public UUID getId() {
    return id;
  }

  public void setId(UUID id) {
    this.id = id;
  }

  public ProgramDetailsListItem type(ProgramType type) {
    this.type = type;
    return this;
  }

  /**
   * Get type
   *
   * @return type
   **/
  @Schema(description = "")
  public ProgramType getType() {
    return type;
  }

  public void setType(ProgramType type) {
    this.type = type;
  }

  public ProgramDetailsListItem logoUrl(String logoUrl) {
    this.logoUrl = logoUrl;
    return this;
  }

  /**
   * Get logoUrl
   *
   * @return logoUrl
   **/
  @Schema(description = "")
  public String getLogoUrl() {
    return logoUrl;
  }

  public void setLogoUrl(String logoUrl) {
    this.logoUrl = logoUrl;
  }

  public ProgramDetailsListItem url(String url) {
    this.url = url;
    return this;
  }

  /**
   * Get url
   *
   * @return url
   **/
  @Schema(description = "")
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }

  public ProgramDetailsListItem index(Integer index) {
    this.index = index;
    return this;
  }

  /**
   * Get index
   *
   * @return index
   **/
  @Schema(description = "")
  public Integer getIndex() {
    return index;
  }

  public void setIndex(Integer index) {
    this.index = index;
  }

  public ProgramDetailsListItem description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   *
   * @return description
   **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public ProgramDetailsListItem color(String color) {
    this.color = color;
    return this;
  }

  /**
   * Get color
   *
   * @return color
   **/
  @Schema(description = "")
  public String getColor() {
    return color;
  }

  public void setColor(String color) {
    this.color = color;
  }

  public ProgramDetailsListItem title(String title) {
    this.title = title;
    return this;
  }

  /**
   * Get title
   *
   * @return title
   **/
  @Schema(description = "")
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public ProgramDetailsListItem creationDate(DateTime creationDate) {
    this.creationDate = creationDate;
    return this;
  }

  /**
   * Get creationDate
   *
   * @return creationDate
   **/
  @Schema(description = "")
  public DateTime getCreationDate() {
    return creationDate;
  }

  public void setCreationDate(DateTime creationDate) {
    this.creationDate = creationDate;
  }

  public ProgramDetailsListItem currency(Currency currency) {
    this.currency = currency;
    return this;
  }

  /**
   * Get currency
   *
   * @return currency
   **/
  @Schema(description = "")
  public Currency getCurrency() {
    return currency;
  }

  public void setCurrency(Currency currency) {
    this.currency = currency;
  }

  public ProgramDetailsListItem level(Integer level) {
    this.level = level;
    return this;
  }

  /**
   * Get level
   *
   * @return level
   **/
  @Schema(description = "")
  public Integer getLevel() {
    return level;
  }

  public void setLevel(Integer level) {
    this.level = level;
  }

  public ProgramDetailsListItem levelProgress(Double levelProgress) {
    this.levelProgress = levelProgress;
    return this;
  }

  /**
   * Get levelProgress
   *
   * @return levelProgress
   **/
  @Schema(description = "")
  public Double getLevelProgress() {
    return levelProgress;
  }

  public void setLevelProgress(Double levelProgress) {
    this.levelProgress = levelProgress;
  }

  public ProgramDetailsListItem periodDuration(Integer periodDuration) {
    this.periodDuration = periodDuration;
    return this;
  }

  /**
   * Get periodDuration
   *
   * @return periodDuration
   **/
  @Schema(description = "")
  public Integer getPeriodDuration() {
    return periodDuration;
  }

  public void setPeriodDuration(Integer periodDuration) {
    this.periodDuration = periodDuration;
  }

  public ProgramDetailsListItem availableToInvest(Double availableToInvest) {
    this.availableToInvest = availableToInvest;
    return this;
  }

  /**
   * Get availableToInvest
   *
   * @return availableToInvest
   **/
  @Schema(description = "")
  public Double getAvailableToInvest() {
    return availableToInvest;
  }

  public void setAvailableToInvest(Double availableToInvest) {
    this.availableToInvest = availableToInvest;
  }

  public ProgramDetailsListItem investorsCount(Integer investorsCount) {
    this.investorsCount = investorsCount;
    return this;
  }

  /**
   * Get investorsCount
   *
   * @return investorsCount
   **/
  @Schema(description = "")
  public Integer getInvestorsCount() {
    return investorsCount;
  }

  public void setInvestorsCount(Integer investorsCount) {
    this.investorsCount = investorsCount;
  }

  public ProgramDetailsListItem periodStarts(DateTime periodStarts) {
    this.periodStarts = periodStarts;
    return this;
  }

  /**
   * Get periodStarts
   *
   * @return periodStarts
   **/
  @Schema(description = "")
  public DateTime getPeriodStarts() {
    return periodStarts;
  }

  public void setPeriodStarts(DateTime periodStarts) {
    this.periodStarts = periodStarts;
  }

  public ProgramDetailsListItem periodEnds(DateTime periodEnds) {
    this.periodEnds = periodEnds;
    return this;
  }

  /**
   * Get periodEnds
   *
   * @return periodEnds
   **/
  @Schema(description = "")
  public DateTime getPeriodEnds() {
    return periodEnds;
  }

  public void setPeriodEnds(DateTime periodEnds) {
    this.periodEnds = periodEnds;
  }

  public ProgramDetailsListItem status(String status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   *
   * @return status
   **/
  @Schema(description = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public ProgramDetailsListItem entryFeeSelected(Double entryFeeSelected) {
    this.entryFeeSelected = entryFeeSelected;
    return this;
  }

  /**
   * Get entryFeeSelected
   *
   * @return entryFeeSelected
   **/
  @Schema(description = "")
  public Double getEntryFeeSelected() {
    return entryFeeSelected;
  }

  public void setEntryFeeSelected(Double entryFeeSelected) {
    this.entryFeeSelected = entryFeeSelected;
  }

  public ProgramDetailsListItem entryFeeCurrent(Double entryFeeCurrent) {
    this.entryFeeCurrent = entryFeeCurrent;
    return this;
  }

  /**
   * Get entryFeeCurrent
   *
   * @return entryFeeCurrent
   **/
  @Schema(description = "")
  public Double getEntryFeeCurrent() {
    return entryFeeCurrent;
  }

  public void setEntryFeeCurrent(Double entryFeeCurrent) {
    this.entryFeeCurrent = entryFeeCurrent;
  }

  public ProgramDetailsListItem brokerId(UUID brokerId) {
    this.brokerId = brokerId;
    return this;
  }

  /**
   * Get brokerId
   *
   * @return brokerId
   **/
  @Schema(description = "")
  public UUID getBrokerId() {
    return brokerId;
  }

  public void setBrokerId(UUID brokerId) {
    this.brokerId = brokerId;
  }

  public ProgramDetailsListItem owner(ProfilePublicShort owner) {
    this.owner = owner;
    return this;
  }

  /**
   * Get owner
   *
   * @return owner
   **/
  @Schema(description = "")
  public ProfilePublicShort getOwner() {
    return owner;
  }

  public void setOwner(ProfilePublicShort owner) {
    this.owner = owner;
  }

  public ProgramDetailsListItem personalDetails(PersonalProgramDetailsList personalDetails) {
    this.personalDetails = personalDetails;
    return this;
  }

  /**
   * Get personalDetails
   *
   * @return personalDetails
   **/
  @Schema(description = "")
  public PersonalProgramDetailsList getPersonalDetails() {
    return personalDetails;
  }

  public void setPersonalDetails(PersonalProgramDetailsList personalDetails) {
    this.personalDetails = personalDetails;
  }

  public ProgramDetailsListItem tags(List<Tag> tags) {
    this.tags = tags;
    return this;
  }

  public ProgramDetailsListItem addTagsItem(Tag tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<Tag>();
    }
    this.tags.add(tagsItem);
    return this;
  }

  /**
   * Get tags
   *
   * @return tags
   **/
  @Schema(description = "")
  public List<Tag> getTags() {
    return tags;
  }

  public void setTags(List<Tag> tags) {
    this.tags = tags;
  }

  public ProgramDetailsListItem statistic(ProfitChart statistic) {
    this.statistic = statistic;
    return this;
  }

  /**
   * Get statistic
   *
   * @return statistic
   **/
  @Schema(description = "")
  public ProfitChart getStatistic() {
    return statistic;
  }

  public void setStatistic(ProfitChart statistic) {
    this.statistic = statistic;
  }

  public ProgramDetailsListItem balance(AmountWithCurrency balance) {
    this.balance = balance;
    return this;
  }

  /**
   * Get balance
   *
   * @return balance
   **/
  @Schema(description = "")
  public AmountWithCurrency getBalance() {
    return balance;
  }

  public void setBalance(AmountWithCurrency balance) {
    this.balance = balance;
  }

  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProgramDetailsListItem programDetailsListItem = (ProgramDetailsListItem) o;
    return Objects.equals(this.id, programDetailsListItem.id) &&
            Objects.equals(this.type, programDetailsListItem.type) &&
            Objects.equals(this.logoUrl, programDetailsListItem.logoUrl) &&
            Objects.equals(this.url, programDetailsListItem.url) &&
            Objects.equals(this.index, programDetailsListItem.index) &&
            Objects.equals(this.description, programDetailsListItem.description) &&
            Objects.equals(this.color, programDetailsListItem.color) &&
            Objects.equals(this.title, programDetailsListItem.title) &&
            Objects.equals(this.creationDate, programDetailsListItem.creationDate) &&
            Objects.equals(this.currency, programDetailsListItem.currency) &&
            Objects.equals(this.level, programDetailsListItem.level) &&
            Objects.equals(this.levelProgress, programDetailsListItem.levelProgress) &&
            Objects.equals(this.periodDuration, programDetailsListItem.periodDuration) &&
            Objects.equals(this.availableToInvest, programDetailsListItem.availableToInvest) &&
            Objects.equals(this.investorsCount, programDetailsListItem.investorsCount) &&
            Objects.equals(this.periodStarts, programDetailsListItem.periodStarts) &&
            Objects.equals(this.periodEnds, programDetailsListItem.periodEnds) &&
            Objects.equals(this.status, programDetailsListItem.status) &&
            Objects.equals(this.entryFeeSelected, programDetailsListItem.entryFeeSelected) &&
            Objects.equals(this.entryFeeCurrent, programDetailsListItem.entryFeeCurrent) &&
            Objects.equals(this.brokerId, programDetailsListItem.brokerId) &&
            Objects.equals(this.owner, programDetailsListItem.owner) &&
            Objects.equals(this.personalDetails, programDetailsListItem.personalDetails) &&
            Objects.equals(this.tags, programDetailsListItem.tags) &&
            Objects.equals(this.statistic, programDetailsListItem.statistic) &&
            Objects.equals(this.balance, programDetailsListItem.balance);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, type, logoUrl, url, index, description, color, title, creationDate, currency, level, levelProgress, periodDuration, availableToInvest, investorsCount, periodStarts, periodEnds, status, entryFeeSelected, entryFeeCurrent, brokerId, owner, personalDetails, tags, statistic, balance);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProgramDetailsListItem {\n");

    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    logoUrl: ").append(toIndentedString(logoUrl)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    index: ").append(toIndentedString(index)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    color: ").append(toIndentedString(color)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    level: ").append(toIndentedString(level)).append("\n");
    sb.append("    levelProgress: ").append(toIndentedString(levelProgress)).append("\n");
    sb.append("    periodDuration: ").append(toIndentedString(periodDuration)).append("\n");
    sb.append("    availableToInvest: ").append(toIndentedString(availableToInvest)).append("\n");
    sb.append("    investorsCount: ").append(toIndentedString(investorsCount)).append("\n");
    sb.append("    periodStarts: ").append(toIndentedString(periodStarts)).append("\n");
    sb.append("    periodEnds: ").append(toIndentedString(periodEnds)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    entryFeeSelected: ").append(toIndentedString(entryFeeSelected)).append("\n");
    sb.append("    entryFeeCurrent: ").append(toIndentedString(entryFeeCurrent)).append("\n");
    sb.append("    brokerId: ").append(toIndentedString(brokerId)).append("\n");
    sb.append("    owner: ").append(toIndentedString(owner)).append("\n");
    sb.append("    personalDetails: ").append(toIndentedString(personalDetails)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    statistic: ").append(toIndentedString(statistic)).append("\n");
    sb.append("    balance: ").append(toIndentedString(balance)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  public void writeToParcel(Parcel out, int flags) {
    out.writeValue(id);
    out.writeValue(type);
    out.writeValue(logoUrl);
    out.writeValue(url);
    out.writeValue(index);
    out.writeValue(description);
    out.writeValue(color);
    out.writeValue(title);
    out.writeValue(creationDate);
    out.writeValue(currency);
    out.writeValue(level);
    out.writeValue(levelProgress);
    out.writeValue(periodDuration);
    out.writeValue(availableToInvest);
    out.writeValue(investorsCount);
    out.writeValue(periodStarts);
    out.writeValue(periodEnds);
    out.writeValue(status);
    out.writeValue(entryFeeSelected);
    out.writeValue(entryFeeCurrent);
    out.writeValue(brokerId);
    out.writeValue(owner);
    out.writeValue(personalDetails);
    out.writeValue(tags);
    out.writeValue(statistic);
    out.writeValue(balance);
  }

  public int describeContents() {
    return 0;
  }
}
