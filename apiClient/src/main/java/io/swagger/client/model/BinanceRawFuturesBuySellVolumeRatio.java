/*
 * Core API v2.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import android.os.Parcel;
import android.os.Parcelable;

import com.google.gson.annotations.SerializedName;

import org.joda.time.DateTime;

import java.util.Objects;

import io.swagger.v3.oas.annotations.media.Schema;
/**
 * BinanceRawFuturesBuySellVolumeRatio
 */


public class BinanceRawFuturesBuySellVolumeRatio implements Parcelable {
  @SerializedName("buySellRatio")
  private Double buySellRatio = null;

  @SerializedName("buyVolume")
  private Double buyVolume = null;

  @SerializedName("sellVolume")
  private Double sellVolume = null;

  @SerializedName("timestamp")
  private DateTime timestamp = null;

  public BinanceRawFuturesBuySellVolumeRatio() {
  }
  public BinanceRawFuturesBuySellVolumeRatio buySellRatio(Double buySellRatio) {
    this.buySellRatio = buySellRatio;
    return this;
  }

   /**
   * Get buySellRatio
   * @return buySellRatio
  **/
  @Schema(description = "")
  public Double getBuySellRatio() {
    return buySellRatio;
  }

  public void setBuySellRatio(Double buySellRatio) {
    this.buySellRatio = buySellRatio;
  }

  public BinanceRawFuturesBuySellVolumeRatio buyVolume(Double buyVolume) {
    this.buyVolume = buyVolume;
    return this;
  }

   /**
   * Get buyVolume
   * @return buyVolume
  **/
  @Schema(description = "")
  public Double getBuyVolume() {
    return buyVolume;
  }

  public void setBuyVolume(Double buyVolume) {
    this.buyVolume = buyVolume;
  }

  public BinanceRawFuturesBuySellVolumeRatio sellVolume(Double sellVolume) {
    this.sellVolume = sellVolume;
    return this;
  }

   /**
   * Get sellVolume
   * @return sellVolume
  **/
  @Schema(description = "")
  public Double getSellVolume() {
    return sellVolume;
  }

  public void setSellVolume(Double sellVolume) {
    this.sellVolume = sellVolume;
  }

  public BinanceRawFuturesBuySellVolumeRatio timestamp(DateTime timestamp) {
    this.timestamp = timestamp;
    return this;
  }

   /**
   * Get timestamp
   * @return timestamp
  **/
  @Schema(description = "")
  public DateTime getTimestamp() {
    return timestamp;
  }

  public void setTimestamp(DateTime timestamp) {
    this.timestamp = timestamp;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BinanceRawFuturesBuySellVolumeRatio binanceRawFuturesBuySellVolumeRatio = (BinanceRawFuturesBuySellVolumeRatio) o;
    return Objects.equals(this.buySellRatio, binanceRawFuturesBuySellVolumeRatio.buySellRatio) &&
        Objects.equals(this.buyVolume, binanceRawFuturesBuySellVolumeRatio.buyVolume) &&
        Objects.equals(this.sellVolume, binanceRawFuturesBuySellVolumeRatio.sellVolume) &&
        Objects.equals(this.timestamp, binanceRawFuturesBuySellVolumeRatio.timestamp);
  }

  @Override
  public int hashCode() {
    return Objects.hash(buySellRatio, buyVolume, sellVolume, timestamp);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BinanceRawFuturesBuySellVolumeRatio {\n");
    
    sb.append("    buySellRatio: ").append(toIndentedString(buySellRatio)).append("\n");
    sb.append("    buyVolume: ").append(toIndentedString(buyVolume)).append("\n");
    sb.append("    sellVolume: ").append(toIndentedString(sellVolume)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public void writeToParcel(Parcel out, int flags) {
    out.writeValue(buySellRatio);
    out.writeValue(buyVolume);
    out.writeValue(sellVolume);
    out.writeValue(timestamp);
  }

  BinanceRawFuturesBuySellVolumeRatio(Parcel in) {
    buySellRatio = (Double)in.readValue(null);
    buyVolume = (Double)in.readValue(null);
    sellVolume = (Double)in.readValue(null);
    timestamp = (DateTime)in.readValue(DateTime.class.getClassLoader());
  }

  public int describeContents() {
    return 0;
  }

  public static final Parcelable.Creator<BinanceRawFuturesBuySellVolumeRatio> CREATOR = new Parcelable.Creator<BinanceRawFuturesBuySellVolumeRatio>() {
    public BinanceRawFuturesBuySellVolumeRatio createFromParcel(Parcel in) {
      return new BinanceRawFuturesBuySellVolumeRatio(in);
    }
    public BinanceRawFuturesBuySellVolumeRatio[] newArray(int size) {
      return new BinanceRawFuturesBuySellVolumeRatio[size];
    }
  };
}
