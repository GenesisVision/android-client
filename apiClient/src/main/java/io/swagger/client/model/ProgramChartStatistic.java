/*
 * Core API v2.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import android.os.Parcel;
import android.os.Parcelable;

import com.google.gson.annotations.SerializedName;

import org.joda.time.DateTime;

import java.util.Objects;

import io.swagger.v3.oas.annotations.media.Schema;
/**
 * ProgramChartStatistic
 */


public class ProgramChartStatistic implements Parcelable
{
	public static final Parcelable.Creator<ProgramChartStatistic> CREATOR = new Parcelable.Creator<ProgramChartStatistic>()
	{
		public ProgramChartStatistic createFromParcel(Parcel in) {
			return new ProgramChartStatistic(in);
		}

		public ProgramChartStatistic[] newArray(int size) {
			return new ProgramChartStatistic[size];
		}
	};

	@SerializedName("investors")
	private Integer investors = null;

	@SerializedName("profit")
	private Double profit = null;

	@SerializedName("tradingVolume")
	private Double tradingVolume = null;

	@SerializedName("trades")
	private Integer trades = null;

	@SerializedName("successTradesPercent")
	private Double successTradesPercent = null;

	@SerializedName("profitFactor")
	private Double profitFactor = null;

	@SerializedName("lastPeriodStarts")
	private DateTime lastPeriodStarts = null;

	@SerializedName("lastPeriodEnds")
	private DateTime lastPeriodEnds = null;

	@SerializedName("balance")
	private Double balance = null;

	@SerializedName("sharpeRatio")
	private Double sharpeRatio = null;

	@SerializedName("sortinoRatio")
	private Double sortinoRatio = null;

	@SerializedName("calmarRatio")
	private Double calmarRatio = null;

	@SerializedName("maxDrawdown")
	private Double maxDrawdown = null;

	public ProgramChartStatistic() {
	}

	ProgramChartStatistic(Parcel in) {
		investors = (Integer) in.readValue(null);
		profit = (Double) in.readValue(null);
		tradingVolume = (Double) in.readValue(null);
		trades = (Integer) in.readValue(null);
		successTradesPercent = (Double) in.readValue(null);
		profitFactor = (Double) in.readValue(null);
		lastPeriodStarts = (DateTime) in.readValue(DateTime.class.getClassLoader());
		lastPeriodEnds = (DateTime) in.readValue(DateTime.class.getClassLoader());
		balance = (Double) in.readValue(null);
		sharpeRatio = (Double) in.readValue(null);
		sortinoRatio = (Double) in.readValue(null);
		calmarRatio = (Double) in.readValue(null);
		maxDrawdown = (Double) in.readValue(null);
	}

	public ProgramChartStatistic investors(Integer investors) {
		this.investors = investors;
		return this;
	}

	/**
	 * Get investors
	 *
	 * @return investors
	 **/
	@Schema(description = "")
	public Integer getInvestors() {
		return investors;
	}

	public void setInvestors(Integer investors) {
		this.investors = investors;
	}

	public ProgramChartStatistic profit(Double profit) {
		this.profit = profit;
		return this;
	}

	/**
	 * Get profit
	 *
	 * @return profit
	 **/
	@Schema(description = "")
	public Double getProfit() {
		return profit;
	}

	public void setProfit(Double profit) {
		this.profit = profit;
	}

	public ProgramChartStatistic tradingVolume(Double tradingVolume) {
		this.tradingVolume = tradingVolume;
		return this;
	}

	/**
	 * Get tradingVolume
	 *
	 * @return tradingVolume
	 **/
	@Schema(description = "")
	public Double getTradingVolume() {
		return tradingVolume;
	}

	public void setTradingVolume(Double tradingVolume) {
		this.tradingVolume = tradingVolume;
	}

	public ProgramChartStatistic trades(Integer trades) {
		this.trades = trades;
		return this;
	}

	/**
	 * Get trades
	 *
	 * @return trades
	 **/
	@Schema(description = "")
	public Integer getTrades() {
		return trades;
	}

	public void setTrades(Integer trades) {
		this.trades = trades;
	}

	public ProgramChartStatistic successTradesPercent(Double successTradesPercent) {
		this.successTradesPercent = successTradesPercent;
		return this;
	}

	/**
	 * Get successTradesPercent
	 *
	 * @return successTradesPercent
	 **/
	@Schema(description = "")
	public Double getSuccessTradesPercent() {
		return successTradesPercent;
	}

	public void setSuccessTradesPercent(Double successTradesPercent) {
		this.successTradesPercent = successTradesPercent;
	}

	public ProgramChartStatistic profitFactor(Double profitFactor) {
		this.profitFactor = profitFactor;
		return this;
	}

	/**
	 * Get profitFactor
	 *
	 * @return profitFactor
	 **/
	@Schema(description = "")
	public Double getProfitFactor() {
		return profitFactor;
	}

	public void setProfitFactor(Double profitFactor) {
		this.profitFactor = profitFactor;
	}

	public ProgramChartStatistic lastPeriodStarts(DateTime lastPeriodStarts) {
		this.lastPeriodStarts = lastPeriodStarts;
		return this;
	}

	/**
	 * Get lastPeriodStarts
	 *
	 * @return lastPeriodStarts
	 **/
	@Schema(description = "")
	public DateTime getLastPeriodStarts() {
		return lastPeriodStarts;
	}

	public void setLastPeriodStarts(DateTime lastPeriodStarts) {
		this.lastPeriodStarts = lastPeriodStarts;
	}

	public ProgramChartStatistic lastPeriodEnds(DateTime lastPeriodEnds) {
		this.lastPeriodEnds = lastPeriodEnds;
		return this;
	}

	/**
	 * Get lastPeriodEnds
	 *
	 * @return lastPeriodEnds
	 **/
	@Schema(description = "")
	public DateTime getLastPeriodEnds() {
		return lastPeriodEnds;
	}

	public void setLastPeriodEnds(DateTime lastPeriodEnds) {
		this.lastPeriodEnds = lastPeriodEnds;
	}

	public ProgramChartStatistic balance(Double balance) {
		this.balance = balance;
		return this;
	}

	/**
	 * Get balance
	 *
	 * @return balance
	 **/
	@Schema(description = "")
	public Double getBalance() {
		return balance;
	}

	public void setBalance(Double balance) {
		this.balance = balance;
	}

	public ProgramChartStatistic sharpeRatio(Double sharpeRatio) {
		this.sharpeRatio = sharpeRatio;
		return this;
	}

	/**
	 * Get sharpeRatio
	 *
	 * @return sharpeRatio
	 **/
	@Schema(description = "")
	public Double getSharpeRatio() {
		return sharpeRatio;
	}

	public void setSharpeRatio(Double sharpeRatio) {
		this.sharpeRatio = sharpeRatio;
	}

	public ProgramChartStatistic sortinoRatio(Double sortinoRatio) {
		this.sortinoRatio = sortinoRatio;
		return this;
	}

	/**
	 * Get sortinoRatio
	 *
	 * @return sortinoRatio
	 **/
	@Schema(description = "")
	public Double getSortinoRatio() {
		return sortinoRatio;
	}

	public void setSortinoRatio(Double sortinoRatio) {
		this.sortinoRatio = sortinoRatio;
	}

	public ProgramChartStatistic calmarRatio(Double calmarRatio) {
		this.calmarRatio = calmarRatio;
		return this;
	}

	/**
	 * Get calmarRatio
	 *
	 * @return calmarRatio
	 **/
	@Schema(description = "")
	public Double getCalmarRatio() {
		return calmarRatio;
	}

	public void setCalmarRatio(Double calmarRatio) {
		this.calmarRatio = calmarRatio;
	}

	public ProgramChartStatistic maxDrawdown(Double maxDrawdown) {
		this.maxDrawdown = maxDrawdown;
		return this;
	}

	/**
	 * Get maxDrawdown
	 *
	 * @return maxDrawdown
	 **/
	@Schema(description = "")
	public Double getMaxDrawdown() {
		return maxDrawdown;
	}

	public void setMaxDrawdown(Double maxDrawdown) {
		this.maxDrawdown = maxDrawdown;
	}

	@Override
	public boolean equals(java.lang.Object o) {
		if (this == o) {
			return true;
		}
		if (o == null || getClass() != o.getClass()) {
			return false;
		}
		ProgramChartStatistic programChartStatistic = (ProgramChartStatistic) o;
		return Objects.equals(this.investors, programChartStatistic.investors) &&
				Objects.equals(this.profit, programChartStatistic.profit) &&
				Objects.equals(this.tradingVolume, programChartStatistic.tradingVolume) &&
				Objects.equals(this.trades, programChartStatistic.trades) &&
				Objects.equals(this.successTradesPercent, programChartStatistic.successTradesPercent) &&
				Objects.equals(this.profitFactor, programChartStatistic.profitFactor) &&
				Objects.equals(this.lastPeriodStarts, programChartStatistic.lastPeriodStarts) &&
				Objects.equals(this.lastPeriodEnds, programChartStatistic.lastPeriodEnds) &&
				Objects.equals(this.balance, programChartStatistic.balance) &&
				Objects.equals(this.sharpeRatio, programChartStatistic.sharpeRatio) &&
				Objects.equals(this.sortinoRatio, programChartStatistic.sortinoRatio) &&
				Objects.equals(this.calmarRatio, programChartStatistic.calmarRatio) &&
				Objects.equals(this.maxDrawdown, programChartStatistic.maxDrawdown);
	}

	@Override
	public int hashCode() {
		return Objects.hash(investors, profit, tradingVolume, trades, successTradesPercent, profitFactor, lastPeriodStarts, lastPeriodEnds, balance, sharpeRatio, sortinoRatio, calmarRatio, maxDrawdown);
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class ProgramChartStatistic {\n");

		sb.append("    investors: ").append(toIndentedString(investors)).append("\n");
		sb.append("    profit: ").append(toIndentedString(profit)).append("\n");
		sb.append("    tradingVolume: ").append(toIndentedString(tradingVolume)).append("\n");
		sb.append("    trades: ").append(toIndentedString(trades)).append("\n");
		sb.append("    successTradesPercent: ").append(toIndentedString(successTradesPercent)).append("\n");
		sb.append("    profitFactor: ").append(toIndentedString(profitFactor)).append("\n");
		sb.append("    lastPeriodStarts: ").append(toIndentedString(lastPeriodStarts)).append("\n");
		sb.append("    lastPeriodEnds: ").append(toIndentedString(lastPeriodEnds)).append("\n");
		sb.append("    balance: ").append(toIndentedString(balance)).append("\n");
		sb.append("    sharpeRatio: ").append(toIndentedString(sharpeRatio)).append("\n");
		sb.append("    sortinoRatio: ").append(toIndentedString(sortinoRatio)).append("\n");
		sb.append("    calmarRatio: ").append(toIndentedString(calmarRatio)).append("\n");
		sb.append("    maxDrawdown: ").append(toIndentedString(maxDrawdown)).append("\n");
		sb.append("}");
		return sb.toString();
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private String toIndentedString(java.lang.Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n    ");
	}

	public void writeToParcel(Parcel out, int flags) {
		out.writeValue(investors);
		out.writeValue(profit);
		out.writeValue(tradingVolume);
		out.writeValue(trades);
		out.writeValue(successTradesPercent);
		out.writeValue(profitFactor);
		out.writeValue(lastPeriodStarts);
		out.writeValue(lastPeriodEnds);
		out.writeValue(balance);
		out.writeValue(sharpeRatio);
		out.writeValue(sortinoRatio);
		out.writeValue(calmarRatio);
		out.writeValue(maxDrawdown);
	}

	public int describeContents() {
		return 0;
	}
}
