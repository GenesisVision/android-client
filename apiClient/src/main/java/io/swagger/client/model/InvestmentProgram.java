/*
 * Core API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

import org.joda.time.DateTime;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
import java.util.UUID;

import io.swagger.annotations.ApiModelProperty;

/**
 * InvestmentProgram
 */

public class InvestmentProgram
{
	@SerializedName("id")
	private UUID id = null;

	@SerializedName("title")
	private String title = null;

	@SerializedName("description")
	private String description = null;

	@SerializedName("level")
	private Integer level = null;

	@SerializedName("logo")
	private String logo = null;

	@SerializedName("isEnabled")
	private Boolean isEnabled = null;

	@SerializedName("balance")
	private Double balance = null;

	@SerializedName("currency")
	private CurrencyEnum currency = null;

	@SerializedName("tradesCount")
	private Integer tradesCount = null;

	@SerializedName("investorsCount")
	private Integer investorsCount = null;

	@SerializedName("periodDuration")
	private Integer periodDuration = null;

	@SerializedName("startOfPeriod")
	private DateTime startOfPeriod = null;

	@SerializedName("endOfPeriod")
	private DateTime endOfPeriod = null;

	@SerializedName("profitAvg")
	private Double profitAvg = null;

	@SerializedName("profitTotal")
	private Double profitTotal = null;

	@SerializedName("profitAvgPercent")
	private Double profitAvgPercent = null;

	@SerializedName("profitTotalPercent")
	private Double profitTotalPercent = null;

	@SerializedName("profitTotalChange")
	private ProfitTotalChangeEnum profitTotalChange = null;

	@SerializedName("availableInvestment")
	private Double availableInvestment = null;

	@SerializedName("feeSuccess")
	private Double feeSuccess = null;

	@SerializedName("feeManagement")
	private Double feeManagement = null;

	@SerializedName("chart")
	private List<Chart> chart = null;

	@SerializedName("manager")
	private ProfilePublicViewModel manager = null;

	@SerializedName("freeTokens")
	private FreeTokens freeTokens = null;

	@SerializedName("hasNewRequests")
	private Boolean hasNewRequests = null;

	@SerializedName("isInvestEnable")
	private Boolean isInvestEnable = null;

	@SerializedName("isOwnProgram")
	private Boolean isOwnProgram = null;

	@SerializedName("canCloseProgram")
	private Boolean canCloseProgram = null;

	public InvestmentProgram id(UUID id) {
		this.id = id;
		return this;
	}

	/**
	 * Get id
	 *
	 * @return id
	 **/
	@ApiModelProperty(value = "")
	public UUID getId() {
		return id;
	}

	public void setId(UUID id) {
		this.id = id;
	}

	public InvestmentProgram title(String title) {
		this.title = title;
		return this;
	}

	/**
	 * Get title
	 *
	 * @return title
	 **/
	@ApiModelProperty(value = "")
	public String getTitle() {
		return title;
	}

	public void setTitle(String title) {
		this.title = title;
	}

	public InvestmentProgram description(String description) {
		this.description = description;
		return this;
	}

	/**
	 * Get description
	 *
	 * @return description
	 **/
	@ApiModelProperty(value = "")
	public String getDescription() {
		return description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	public InvestmentProgram level(Integer level) {
		this.level = level;
		return this;
	}

	/**
	 * Get level
	 *
	 * @return level
	 **/
	@ApiModelProperty(value = "")
	public Integer getLevel() {
		return level;
	}

	public void setLevel(Integer level) {
		this.level = level;
	}

	public InvestmentProgram logo(String logo) {
		this.logo = logo;
		return this;
	}

	/**
	 * Get logo
	 *
	 * @return logo
	 **/
	@ApiModelProperty(value = "")
	public String getLogo() {
		return logo;
	}

	public void setLogo(String logo) {
		this.logo = logo;
	}

	public InvestmentProgram isEnabled(Boolean isEnabled) {
		this.isEnabled = isEnabled;
		return this;
	}

	/**
	 * Get isEnabled
	 *
	 * @return isEnabled
	 **/
	@ApiModelProperty(value = "")
	public Boolean isIsEnabled() {
		return isEnabled;
	}

	public void setIsEnabled(Boolean isEnabled) {
		this.isEnabled = isEnabled;
	}

	public InvestmentProgram balance(Double balance) {
		this.balance = balance;
		return this;
	}

	/**
	 * Get balance
	 *
	 * @return balance
	 **/
	@ApiModelProperty(value = "")
	public Double getBalance() {
		return balance;
	}

	public void setBalance(Double balance) {
		this.balance = balance;
	}

	public InvestmentProgram currency(CurrencyEnum currency) {
		this.currency = currency;
		return this;
	}

	/**
	 * Get currency
	 *
	 * @return currency
	 **/
	@ApiModelProperty(value = "")
	public CurrencyEnum getCurrency() {
		return currency;
	}

	public void setCurrency(CurrencyEnum currency) {
		this.currency = currency;
	}

	public InvestmentProgram tradesCount(Integer tradesCount) {
		this.tradesCount = tradesCount;
		return this;
	}

	/**
	 * Get tradesCount
	 *
	 * @return tradesCount
	 **/
	@ApiModelProperty(value = "")
	public Integer getTradesCount() {
		return tradesCount;
	}

	public void setTradesCount(Integer tradesCount) {
		this.tradesCount = tradesCount;
	}

	public InvestmentProgram investorsCount(Integer investorsCount) {
		this.investorsCount = investorsCount;
		return this;
	}

	/**
	 * Get investorsCount
	 *
	 * @return investorsCount
	 **/
	@ApiModelProperty(value = "")
	public Integer getInvestorsCount() {
		return investorsCount;
	}

	public void setInvestorsCount(Integer investorsCount) {
		this.investorsCount = investorsCount;
	}

	public InvestmentProgram periodDuration(Integer periodDuration) {
		this.periodDuration = periodDuration;
		return this;
	}

	/**
	 * Get periodDuration
	 *
	 * @return periodDuration
	 **/
	@ApiModelProperty(value = "")
	public Integer getPeriodDuration() {
		return periodDuration;
	}

	public void setPeriodDuration(Integer periodDuration) {
		this.periodDuration = periodDuration;
	}

	public InvestmentProgram startOfPeriod(DateTime startOfPeriod) {
		this.startOfPeriod = startOfPeriod;
		return this;
	}

	/**
	 * Get startOfPeriod
	 *
	 * @return startOfPeriod
	 **/
	@ApiModelProperty(value = "")
	public DateTime getStartOfPeriod() {
		return startOfPeriod;
	}

	public void setStartOfPeriod(DateTime startOfPeriod) {
		this.startOfPeriod = startOfPeriod;
	}

	public InvestmentProgram endOfPeriod(DateTime endOfPeriod) {
		this.endOfPeriod = endOfPeriod;
		return this;
	}

	/**
	 * Get endOfPeriod
	 *
	 * @return endOfPeriod
	 **/
	@ApiModelProperty(value = "")
	public DateTime getEndOfPeriod() {
		return endOfPeriod;
	}

	public void setEndOfPeriod(DateTime endOfPeriod) {
		this.endOfPeriod = endOfPeriod;
	}

	public InvestmentProgram profitAvg(Double profitAvg) {
		this.profitAvg = profitAvg;
		return this;
	}

	/**
	 * Get profitAvg
	 *
	 * @return profitAvg
	 **/
	@ApiModelProperty(value = "")
	public Double getProfitAvg() {
		return profitAvg;
	}

	public void setProfitAvg(Double profitAvg) {
		this.profitAvg = profitAvg;
	}

	public InvestmentProgram profitTotal(Double profitTotal) {
		this.profitTotal = profitTotal;
		return this;
	}

	/**
	 * Get profitTotal
	 *
	 * @return profitTotal
	 **/
	@ApiModelProperty(value = "")
	public Double getProfitTotal() {
		return profitTotal;
	}

	public void setProfitTotal(Double profitTotal) {
		this.profitTotal = profitTotal;
	}

	public InvestmentProgram profitAvgPercent(Double profitAvgPercent) {
		this.profitAvgPercent = profitAvgPercent;
		return this;
	}

	/**
	 * Get profitAvgPercent
	 *
	 * @return profitAvgPercent
	 **/
	@ApiModelProperty(value = "")
	public Double getProfitAvgPercent() {
		return profitAvgPercent;
	}

	public void setProfitAvgPercent(Double profitAvgPercent) {
		this.profitAvgPercent = profitAvgPercent;
	}

	public InvestmentProgram profitTotalPercent(Double profitTotalPercent) {
		this.profitTotalPercent = profitTotalPercent;
		return this;
	}

	/**
	 * Get profitTotalPercent
	 *
	 * @return profitTotalPercent
	 **/
	@ApiModelProperty(value = "")
	public Double getProfitTotalPercent() {
		return profitTotalPercent;
	}

	public void setProfitTotalPercent(Double profitTotalPercent) {
		this.profitTotalPercent = profitTotalPercent;
	}

	public InvestmentProgram profitTotalChange(ProfitTotalChangeEnum profitTotalChange) {
		this.profitTotalChange = profitTotalChange;
		return this;
	}

	/**
	 * Get profitTotalChange
	 *
	 * @return profitTotalChange
	 **/
	@ApiModelProperty(value = "")
	public ProfitTotalChangeEnum getProfitTotalChange() {
		return profitTotalChange;
	}

	public void setProfitTotalChange(ProfitTotalChangeEnum profitTotalChange) {
		this.profitTotalChange = profitTotalChange;
	}

	public InvestmentProgram availableInvestment(Double availableInvestment) {
		this.availableInvestment = availableInvestment;
		return this;
	}

	/**
	 * Get availableInvestment
	 *
	 * @return availableInvestment
	 **/
	@ApiModelProperty(value = "")
	public Double getAvailableInvestment() {
		return availableInvestment;
	}

	public void setAvailableInvestment(Double availableInvestment) {
		this.availableInvestment = availableInvestment;
	}

	public InvestmentProgram feeSuccess(Double feeSuccess) {
		this.feeSuccess = feeSuccess;
		return this;
	}

	/**
	 * Get feeSuccess
	 *
	 * @return feeSuccess
	 **/
	@ApiModelProperty(value = "")
	public Double getFeeSuccess() {
		return feeSuccess;
	}

	public void setFeeSuccess(Double feeSuccess) {
		this.feeSuccess = feeSuccess;
	}

	public InvestmentProgram feeManagement(Double feeManagement) {
		this.feeManagement = feeManagement;
		return this;
	}

	/**
	 * Get feeManagement
	 *
	 * @return feeManagement
	 **/
	@ApiModelProperty(value = "")
	public Double getFeeManagement() {
		return feeManagement;
	}

	public void setFeeManagement(Double feeManagement) {
		this.feeManagement = feeManagement;
	}

	public InvestmentProgram chart(List<Chart> chart) {
		this.chart = chart;
		return this;
	}

	public InvestmentProgram addChartItem(Chart chartItem) {
		if (this.chart == null) {
			this.chart = new ArrayList<Chart>();
		}
		this.chart.add(chartItem);
		return this;
	}

	/**
	 * Get chart
	 *
	 * @return chart
	 **/
	@ApiModelProperty(value = "")
	public List<Chart> getChart() {
		return chart;
	}

	public void setChart(List<Chart> chart) {
		this.chart = chart;
	}

	public InvestmentProgram manager(ProfilePublicViewModel manager) {
		this.manager = manager;
		return this;
	}

	/**
	 * Get manager
	 *
	 * @return manager
	 **/
	@ApiModelProperty(value = "")
	public ProfilePublicViewModel getManager() {
		return manager;
	}

	public void setManager(ProfilePublicViewModel manager) {
		this.manager = manager;
	}

	public InvestmentProgram freeTokens(FreeTokens freeTokens) {
		this.freeTokens = freeTokens;
		return this;
	}

	/**
	 * Get freeTokens
	 *
	 * @return freeTokens
	 **/
	@ApiModelProperty(value = "")
	public FreeTokens getFreeTokens() {
		return freeTokens;
	}

	public void setFreeTokens(FreeTokens freeTokens) {
		this.freeTokens = freeTokens;
	}

	public InvestmentProgram hasNewRequests(Boolean hasNewRequests) {
		this.hasNewRequests = hasNewRequests;
		return this;
	}

	/**
	 * Get hasNewRequests
	 *
	 * @return hasNewRequests
	 **/
	@ApiModelProperty(value = "")
	public Boolean isHasNewRequests() {
		return hasNewRequests;
	}

	public void setHasNewRequests(Boolean hasNewRequests) {
		this.hasNewRequests = hasNewRequests;
	}

	public InvestmentProgram isInvestEnable(Boolean isInvestEnable) {
		this.isInvestEnable = isInvestEnable;
		return this;
	}

	/**
	 * Get isInvestEnable
	 *
	 * @return isInvestEnable
	 **/
	@ApiModelProperty(value = "")
	public Boolean isIsInvestEnable() {
		return isInvestEnable;
	}

	public void setIsInvestEnable(Boolean isInvestEnable) {
		this.isInvestEnable = isInvestEnable;
	}

	public InvestmentProgram isOwnProgram(Boolean isOwnProgram) {
		this.isOwnProgram = isOwnProgram;
		return this;
	}

	/**
	 * Get isOwnProgram
	 *
	 * @return isOwnProgram
	 **/
	@ApiModelProperty(value = "")
	public Boolean isIsOwnProgram() {
		return isOwnProgram;
	}

	public void setIsOwnProgram(Boolean isOwnProgram) {
		this.isOwnProgram = isOwnProgram;
	}

	public InvestmentProgram canCloseProgram(Boolean canCloseProgram) {
		this.canCloseProgram = canCloseProgram;
		return this;
	}

	/**
	 * Get canCloseProgram
	 *
	 * @return canCloseProgram
	 **/
	@ApiModelProperty(value = "")
	public Boolean isCanCloseProgram() {
		return canCloseProgram;
	}

	public void setCanCloseProgram(Boolean canCloseProgram) {
		this.canCloseProgram = canCloseProgram;
	}

	@Override
	public boolean equals(java.lang.Object o) {
		if (this == o) {
			return true;
		}
		if (o == null || getClass() != o.getClass()) {
			return false;
		}
		InvestmentProgram investmentProgram = (InvestmentProgram) o;
		return Objects.equals(this.id, investmentProgram.id) &&
				Objects.equals(this.title, investmentProgram.title) &&
				Objects.equals(this.description, investmentProgram.description) &&
				Objects.equals(this.level, investmentProgram.level) &&
				Objects.equals(this.logo, investmentProgram.logo) &&
				Objects.equals(this.isEnabled, investmentProgram.isEnabled) &&
				Objects.equals(this.balance, investmentProgram.balance) &&
				Objects.equals(this.currency, investmentProgram.currency) &&
				Objects.equals(this.tradesCount, investmentProgram.tradesCount) &&
				Objects.equals(this.investorsCount, investmentProgram.investorsCount) &&
				Objects.equals(this.periodDuration, investmentProgram.periodDuration) &&
				Objects.equals(this.startOfPeriod, investmentProgram.startOfPeriod) &&
				Objects.equals(this.endOfPeriod, investmentProgram.endOfPeriod) &&
				Objects.equals(this.profitAvg, investmentProgram.profitAvg) &&
				Objects.equals(this.profitTotal, investmentProgram.profitTotal) &&
				Objects.equals(this.profitAvgPercent, investmentProgram.profitAvgPercent) &&
				Objects.equals(this.profitTotalPercent, investmentProgram.profitTotalPercent) &&
				Objects.equals(this.profitTotalChange, investmentProgram.profitTotalChange) &&
				Objects.equals(this.availableInvestment, investmentProgram.availableInvestment) &&
				Objects.equals(this.feeSuccess, investmentProgram.feeSuccess) &&
				Objects.equals(this.feeManagement, investmentProgram.feeManagement) &&
				Objects.equals(this.chart, investmentProgram.chart) &&
				Objects.equals(this.manager, investmentProgram.manager) &&
				Objects.equals(this.freeTokens, investmentProgram.freeTokens) &&
				Objects.equals(this.hasNewRequests, investmentProgram.hasNewRequests) &&
				Objects.equals(this.isInvestEnable, investmentProgram.isInvestEnable) &&
				Objects.equals(this.isOwnProgram, investmentProgram.isOwnProgram) &&
				Objects.equals(this.canCloseProgram, investmentProgram.canCloseProgram);
	}

	@Override
	public int hashCode() {
		return Objects.hash(id, title, description, level, logo, isEnabled, balance, currency, tradesCount, investorsCount, periodDuration, startOfPeriod, endOfPeriod, profitAvg, profitTotal, profitAvgPercent, profitTotalPercent, profitTotalChange, availableInvestment, feeSuccess, feeManagement, chart, manager, freeTokens, hasNewRequests, isInvestEnable, isOwnProgram, canCloseProgram);
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class InvestmentProgram {\n");

		sb.append("    id: ").append(toIndentedString(id)).append("\n");
		sb.append("    title: ").append(toIndentedString(title)).append("\n");
		sb.append("    description: ").append(toIndentedString(description)).append("\n");
		sb.append("    level: ").append(toIndentedString(level)).append("\n");
		sb.append("    logo: ").append(toIndentedString(logo)).append("\n");
		sb.append("    isEnabled: ").append(toIndentedString(isEnabled)).append("\n");
		sb.append("    balance: ").append(toIndentedString(balance)).append("\n");
		sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
		sb.append("    tradesCount: ").append(toIndentedString(tradesCount)).append("\n");
		sb.append("    investorsCount: ").append(toIndentedString(investorsCount)).append("\n");
		sb.append("    periodDuration: ").append(toIndentedString(periodDuration)).append("\n");
		sb.append("    startOfPeriod: ").append(toIndentedString(startOfPeriod)).append("\n");
		sb.append("    endOfPeriod: ").append(toIndentedString(endOfPeriod)).append("\n");
		sb.append("    profitAvg: ").append(toIndentedString(profitAvg)).append("\n");
		sb.append("    profitTotal: ").append(toIndentedString(profitTotal)).append("\n");
		sb.append("    profitAvgPercent: ").append(toIndentedString(profitAvgPercent)).append("\n");
		sb.append("    profitTotalPercent: ").append(toIndentedString(profitTotalPercent)).append("\n");
		sb.append("    profitTotalChange: ").append(toIndentedString(profitTotalChange)).append("\n");
		sb.append("    availableInvestment: ").append(toIndentedString(availableInvestment)).append("\n");
		sb.append("    feeSuccess: ").append(toIndentedString(feeSuccess)).append("\n");
		sb.append("    feeManagement: ").append(toIndentedString(feeManagement)).append("\n");
		sb.append("    chart: ").append(toIndentedString(chart)).append("\n");
		sb.append("    manager: ").append(toIndentedString(manager)).append("\n");
		sb.append("    freeTokens: ").append(toIndentedString(freeTokens)).append("\n");
		sb.append("    hasNewRequests: ").append(toIndentedString(hasNewRequests)).append("\n");
		sb.append("    isInvestEnable: ").append(toIndentedString(isInvestEnable)).append("\n");
		sb.append("    isOwnProgram: ").append(toIndentedString(isOwnProgram)).append("\n");
		sb.append("    canCloseProgram: ").append(toIndentedString(canCloseProgram)).append("\n");
		sb.append("}");
		return sb.toString();
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private String toIndentedString(java.lang.Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n    ");
	}


	/**
	 * Gets or Sets currency
	 */
	@JsonAdapter(CurrencyEnum.Adapter.class)
	public enum CurrencyEnum
	{
		UNDEFINED("Undefined"),

		GVT("GVT"),

		ETH("ETH"),

		BTC("BTC"),

		USD("USD"),

		EUR("EUR");

		public static CurrencyEnum fromValue(String text) {
			for (CurrencyEnum b : CurrencyEnum.values()) {
				if (String.valueOf(b.value).equals(text)) {
					return b;
				}
			}
			return null;
		}

		private String value;

		CurrencyEnum(String value) {
			this.value = value;
		}

		public String getValue() {
			return value;
		}

		@Override
		public String toString() {
			return String.valueOf(value);
		}

		public static class Adapter extends TypeAdapter<CurrencyEnum>
		{
			@Override
			public void write(final JsonWriter jsonWriter, final CurrencyEnum enumeration) throws IOException {
				jsonWriter.value(enumeration.getValue());
			}

			@Override
			public CurrencyEnum read(final JsonReader jsonReader) throws IOException {
				String value = jsonReader.nextString();
				return CurrencyEnum.fromValue(String.valueOf(value));
			}
		}
	}

	/**
	 * Gets or Sets profitTotalChange
	 */
	@JsonAdapter(ProfitTotalChangeEnum.Adapter.class)
	public enum ProfitTotalChangeEnum
	{
		UNCHANGED("Unchanged"),

		UP("Up"),

		DOWN("Down");

		public static ProfitTotalChangeEnum fromValue(String text) {
			for (ProfitTotalChangeEnum b : ProfitTotalChangeEnum.values()) {
				if (String.valueOf(b.value).equals(text)) {
					return b;
				}
			}
			return null;
		}

		private String value;

		ProfitTotalChangeEnum(String value) {
			this.value = value;
		}

		public String getValue() {
			return value;
		}

		@Override
		public String toString() {
			return String.valueOf(value);
		}

		public static class Adapter extends TypeAdapter<ProfitTotalChangeEnum>
		{
			@Override
			public void write(final JsonWriter jsonWriter, final ProfitTotalChangeEnum enumeration) throws IOException {
				jsonWriter.value(enumeration.getValue());
			}

			@Override
			public ProfitTotalChangeEnum read(final JsonReader jsonReader) throws IOException {
				String value = jsonReader.nextString();
				return ProfitTotalChangeEnum.fromValue(String.valueOf(value));
			}
		}
	}

}

