/*
 * Core API v2.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import android.os.Parcel;
import android.os.Parcelable;

import com.google.gson.annotations.SerializedName;

import java.io.File;
import java.util.Objects;

import io.swagger.v3.oas.annotations.media.Schema;

/**
 * Body
 */


public class Body implements Parcelable
{
	@SerializedName("uploadedFile")
	private File uploadedFile = null;

	public Body() {
	}

	public Body uploadedFile(File uploadedFile) {
		this.uploadedFile = uploadedFile;
		return this;
	}

	/**
	 * Get uploadedFile
	 *
	 * @return uploadedFile
	 **/
	@Schema(description = "")
	public File getUploadedFile() {
		return uploadedFile;
	}

	public void setUploadedFile(File uploadedFile) {
		this.uploadedFile = uploadedFile;
	}


	@Override
	public boolean equals(java.lang.Object o) {
		if (this == o) {
			return true;
		}
		if (o == null || getClass() != o.getClass()) {
			return false;
		}
		Body body = (Body) o;
		return Objects.equals(this.uploadedFile, body.uploadedFile);
	}

	@Override
	public int hashCode() {
		return Objects.hash(Objects.hashCode(uploadedFile));
	}


	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class Body {\n");

		sb.append("    uploadedFile: ").append(toIndentedString(uploadedFile)).append("\n");
		sb.append("}");
		return sb.toString();
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private String toIndentedString(java.lang.Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n    ");
	}


	public void writeToParcel(Parcel out, int flags) {
		out.writeValue(uploadedFile);
	}

	public static final Parcelable.Creator<Body> CREATOR = new Parcelable.Creator<Body>()
	{
		public Body createFromParcel(Parcel in) {
			return new Body(in);
		}

		public Body[] newArray(int size) {
			return new Body[size];
		}
	};

	public int describeContents() {
		return 0;
	}

	Body(Parcel in) {
		uploadedFile = (File) in.readValue(File.class.getClassLoader());
	}
}
