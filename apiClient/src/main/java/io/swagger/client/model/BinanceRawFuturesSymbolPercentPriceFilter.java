/*
 * Core API v2.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import android.os.Parcel;
import android.os.Parcelable;

import com.google.gson.annotations.SerializedName;

import java.util.Objects;

import io.swagger.v3.oas.annotations.media.Schema;

/**
 * BinanceRawFuturesSymbolPercentPriceFilter
 */


public class BinanceRawFuturesSymbolPercentPriceFilter implements Parcelable
{
	@SerializedName("filterType")
	private BinanceSymbolFilterType filterType = null;

	@SerializedName("multiplierUp")
	private Double multiplierUp = null;

	@SerializedName("multiplierDown")
	private Double multiplierDown = null;

	@SerializedName("multiplierDecimal")
	private Integer multiplierDecimal = null;

	public BinanceRawFuturesSymbolPercentPriceFilter() {
	}

	public BinanceRawFuturesSymbolPercentPriceFilter filterType(BinanceSymbolFilterType filterType) {
		this.filterType = filterType;
		return this;
	}

	/**
	 * Get filterType
	 *
	 * @return filterType
	 **/
	@Schema(description = "")
	public BinanceSymbolFilterType getFilterType() {
		return filterType;
	}

	public void setFilterType(BinanceSymbolFilterType filterType) {
		this.filterType = filterType;
	}

	public BinanceRawFuturesSymbolPercentPriceFilter multiplierUp(Double multiplierUp) {
		this.multiplierUp = multiplierUp;
		return this;
	}

	/**
	 * Get multiplierUp
	 *
	 * @return multiplierUp
	 **/
	@Schema(description = "")
	public Double getMultiplierUp() {
		return multiplierUp;
	}

	public void setMultiplierUp(Double multiplierUp) {
		this.multiplierUp = multiplierUp;
	}

	public BinanceRawFuturesSymbolPercentPriceFilter multiplierDown(Double multiplierDown) {
		this.multiplierDown = multiplierDown;
		return this;
	}

	/**
	 * Get multiplierDown
	 *
	 * @return multiplierDown
	 **/
	@Schema(description = "")
	public Double getMultiplierDown() {
		return multiplierDown;
	}

	public void setMultiplierDown(Double multiplierDown) {
		this.multiplierDown = multiplierDown;
	}

	public BinanceRawFuturesSymbolPercentPriceFilter multiplierDecimal(Integer multiplierDecimal) {
		this.multiplierDecimal = multiplierDecimal;
		return this;
	}

	/**
	 * Get multiplierDecimal
	 *
	 * @return multiplierDecimal
	 **/
	@Schema(description = "")
	public Integer getMultiplierDecimal() {
		return multiplierDecimal;
	}

	public void setMultiplierDecimal(Integer multiplierDecimal) {
		this.multiplierDecimal = multiplierDecimal;
	}


	@Override
	public boolean equals(java.lang.Object o) {
		if (this == o) {
			return true;
		}
		if (o == null || getClass() != o.getClass()) {
			return false;
		}
		BinanceRawFuturesSymbolPercentPriceFilter binanceRawFuturesSymbolPercentPriceFilter = (BinanceRawFuturesSymbolPercentPriceFilter) o;
		return Objects.equals(this.filterType, binanceRawFuturesSymbolPercentPriceFilter.filterType) &&
				Objects.equals(this.multiplierUp, binanceRawFuturesSymbolPercentPriceFilter.multiplierUp) &&
				Objects.equals(this.multiplierDown, binanceRawFuturesSymbolPercentPriceFilter.multiplierDown) &&
				Objects.equals(this.multiplierDecimal, binanceRawFuturesSymbolPercentPriceFilter.multiplierDecimal);
	}

	@Override
	public int hashCode() {
		return Objects.hash(filterType, multiplierUp, multiplierDown, multiplierDecimal);
	}


	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class BinanceRawFuturesSymbolPercentPriceFilter {\n");

		sb.append("    filterType: ").append(toIndentedString(filterType)).append("\n");
		sb.append("    multiplierUp: ").append(toIndentedString(multiplierUp)).append("\n");
		sb.append("    multiplierDown: ").append(toIndentedString(multiplierDown)).append("\n");
		sb.append("    multiplierDecimal: ").append(toIndentedString(multiplierDecimal)).append("\n");
		sb.append("}");
		return sb.toString();
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private String toIndentedString(java.lang.Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n    ");
	}


	public void writeToParcel(Parcel out, int flags) {
		out.writeValue(filterType);
		out.writeValue(multiplierUp);
		out.writeValue(multiplierDown);
		out.writeValue(multiplierDecimal);
	}

	public static final Parcelable.Creator<BinanceRawFuturesSymbolPercentPriceFilter> CREATOR = new Parcelable.Creator<BinanceRawFuturesSymbolPercentPriceFilter>()
	{
		public BinanceRawFuturesSymbolPercentPriceFilter createFromParcel(Parcel in) {
			return new BinanceRawFuturesSymbolPercentPriceFilter(in);
		}

		public BinanceRawFuturesSymbolPercentPriceFilter[] newArray(int size) {
			return new BinanceRawFuturesSymbolPercentPriceFilter[size];
		}
	};

	public int describeContents() {
		return 0;
	}

	BinanceRawFuturesSymbolPercentPriceFilter(Parcel in) {
		filterType = (BinanceSymbolFilterType) in.readValue(BinanceSymbolFilterType.class.getClassLoader());
		multiplierUp = (Double) in.readValue(null);
		multiplierDown = (Double) in.readValue(null);
		multiplierDecimal = (Integer) in.readValue(null);
	}
}
