/*
 * Core API v2.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.BinanceSymbolFilterType;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import android.os.Parcelable;
import android.os.Parcel;
/**
 * BinanceRawSymbolMaxPositionFilter
 */


public class BinanceRawSymbolMaxPositionFilter implements Parcelable {
  @SerializedName("filterType")
  private BinanceSymbolFilterType filterType = null;

  @SerializedName("maxPosition")
  private Double maxPosition = null;

  public BinanceRawSymbolMaxPositionFilter() {
  }
  public BinanceRawSymbolMaxPositionFilter filterType(BinanceSymbolFilterType filterType) {
    this.filterType = filterType;
    return this;
  }

   /**
   * Get filterType
   * @return filterType
  **/
  @Schema(description = "")
  public BinanceSymbolFilterType getFilterType() {
    return filterType;
  }

  public void setFilterType(BinanceSymbolFilterType filterType) {
    this.filterType = filterType;
  }

  public BinanceRawSymbolMaxPositionFilter maxPosition(Double maxPosition) {
    this.maxPosition = maxPosition;
    return this;
  }

   /**
   * Get maxPosition
   * @return maxPosition
  **/
  @Schema(description = "")
  public Double getMaxPosition() {
    return maxPosition;
  }

  public void setMaxPosition(Double maxPosition) {
    this.maxPosition = maxPosition;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BinanceRawSymbolMaxPositionFilter binanceRawSymbolMaxPositionFilter = (BinanceRawSymbolMaxPositionFilter) o;
    return Objects.equals(this.filterType, binanceRawSymbolMaxPositionFilter.filterType) &&
        Objects.equals(this.maxPosition, binanceRawSymbolMaxPositionFilter.maxPosition);
  }

  @Override
  public int hashCode() {
    return Objects.hash(filterType, maxPosition);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BinanceRawSymbolMaxPositionFilter {\n");
    
    sb.append("    filterType: ").append(toIndentedString(filterType)).append("\n");
    sb.append("    maxPosition: ").append(toIndentedString(maxPosition)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public void writeToParcel(Parcel out, int flags) {
    out.writeValue(filterType);
    out.writeValue(maxPosition);
  }

  BinanceRawSymbolMaxPositionFilter(Parcel in) {
    filterType = (BinanceSymbolFilterType)in.readValue(BinanceSymbolFilterType.class.getClassLoader());
    maxPosition = (Double)in.readValue(null);
  }

  public int describeContents() {
    return 0;
  }

  public static final Parcelable.Creator<BinanceRawSymbolMaxPositionFilter> CREATOR = new Parcelable.Creator<BinanceRawSymbolMaxPositionFilter>() {
    public BinanceRawSymbolMaxPositionFilter createFromParcel(Parcel in) {
      return new BinanceRawSymbolMaxPositionFilter(in);
    }
    public BinanceRawSymbolMaxPositionFilter[] newArray(int size) {
      return new BinanceRawSymbolMaxPositionFilter[size];
    }
  };
}
