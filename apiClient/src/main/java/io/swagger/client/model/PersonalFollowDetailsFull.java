/*
 * Core API v2.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.AssetGuestActions;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import android.os.Parcelable;
import android.os.Parcel;
/**
 * PersonalFollowDetailsFull
 */


public class PersonalFollowDetailsFull implements Parcelable {
  @SerializedName("isFavorite")
  private Boolean isFavorite = null;

  @SerializedName("guestActions")
  private AssetGuestActions guestActions = null;

  @SerializedName("hasNotifications")
  private Boolean hasNotifications = null;

  @SerializedName("subscribedAccounts")
  private Integer subscribedAccounts = null;

  public PersonalFollowDetailsFull() {
  }
  public PersonalFollowDetailsFull isFavorite(Boolean isFavorite) {
    this.isFavorite = isFavorite;
    return this;
  }

   /**
   * Get isFavorite
   * @return isFavorite
  **/
  @Schema(description = "")
  public Boolean isIsFavorite() {
    return isFavorite;
  }

  public void setIsFavorite(Boolean isFavorite) {
    this.isFavorite = isFavorite;
  }

  public PersonalFollowDetailsFull guestActions(AssetGuestActions guestActions) {
    this.guestActions = guestActions;
    return this;
  }

   /**
   * Get guestActions
   * @return guestActions
  **/
  @Schema(description = "")
  public AssetGuestActions getGuestActions() {
    return guestActions;
  }

  public void setGuestActions(AssetGuestActions guestActions) {
    this.guestActions = guestActions;
  }

  public PersonalFollowDetailsFull hasNotifications(Boolean hasNotifications) {
    this.hasNotifications = hasNotifications;
    return this;
  }

   /**
   * Get hasNotifications
   * @return hasNotifications
  **/
  @Schema(description = "")
  public Boolean isHasNotifications() {
    return hasNotifications;
  }

  public void setHasNotifications(Boolean hasNotifications) {
    this.hasNotifications = hasNotifications;
  }

  public PersonalFollowDetailsFull subscribedAccounts(Integer subscribedAccounts) {
    this.subscribedAccounts = subscribedAccounts;
    return this;
  }

   /**
   * Get subscribedAccounts
   * @return subscribedAccounts
  **/
  @Schema(description = "")
  public Integer getSubscribedAccounts() {
    return subscribedAccounts;
  }

  public void setSubscribedAccounts(Integer subscribedAccounts) {
    this.subscribedAccounts = subscribedAccounts;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PersonalFollowDetailsFull personalFollowDetailsFull = (PersonalFollowDetailsFull) o;
    return Objects.equals(this.isFavorite, personalFollowDetailsFull.isFavorite) &&
        Objects.equals(this.guestActions, personalFollowDetailsFull.guestActions) &&
        Objects.equals(this.hasNotifications, personalFollowDetailsFull.hasNotifications) &&
        Objects.equals(this.subscribedAccounts, personalFollowDetailsFull.subscribedAccounts);
  }

  @Override
  public int hashCode() {
    return Objects.hash(isFavorite, guestActions, hasNotifications, subscribedAccounts);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PersonalFollowDetailsFull {\n");
    
    sb.append("    isFavorite: ").append(toIndentedString(isFavorite)).append("\n");
    sb.append("    guestActions: ").append(toIndentedString(guestActions)).append("\n");
    sb.append("    hasNotifications: ").append(toIndentedString(hasNotifications)).append("\n");
    sb.append("    subscribedAccounts: ").append(toIndentedString(subscribedAccounts)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public void writeToParcel(Parcel out, int flags) {
    out.writeValue(isFavorite);
    out.writeValue(guestActions);
    out.writeValue(hasNotifications);
    out.writeValue(subscribedAccounts);
  }

  PersonalFollowDetailsFull(Parcel in) {
    isFavorite = (Boolean)in.readValue(null);
    guestActions = (AssetGuestActions)in.readValue(AssetGuestActions.class.getClassLoader());
    hasNotifications = (Boolean)in.readValue(null);
    subscribedAccounts = (Integer)in.readValue(null);
  }

  public int describeContents() {
    return 0;
  }

  public static final Parcelable.Creator<PersonalFollowDetailsFull> CREATOR = new Parcelable.Creator<PersonalFollowDetailsFull>() {
    public PersonalFollowDetailsFull createFromParcel(Parcel in) {
      return new PersonalFollowDetailsFull(in);
    }
    public PersonalFollowDetailsFull[] newArray(int size) {
      return new PersonalFollowDetailsFull[size];
    }
  };
}
