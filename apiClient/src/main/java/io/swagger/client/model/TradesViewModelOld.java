/*
 * Core API v2.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import android.os.Parcel;
import android.os.Parcelable;

import com.google.gson.annotations.SerializedName;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import io.swagger.v3.oas.annotations.media.Schema;

/**
 * TradesViewModelOld
 */


public class TradesViewModelOld implements Parcelable
{
	public static final Parcelable.Creator<TradesViewModelOld> CREATOR = new Parcelable.Creator<TradesViewModelOld>()
	{
		public TradesViewModelOld createFromParcel(Parcel in) {
			return new TradesViewModelOld(in);
		}

		public TradesViewModelOld[] newArray(int size) {
			return new TradesViewModelOld[size];
		}
	};

	@SerializedName("showSwaps")
	private Boolean showSwaps = null;

	@SerializedName("showTickets")
	private Boolean showTickets = null;

	@SerializedName("trades")
	private List<OrderModel> trades = null;

	@SerializedName("tradesDelay")
	private TradesDelay tradesDelay = null;

	@SerializedName("total")
	private Integer total = null;

	public TradesViewModelOld() {
	}

	TradesViewModelOld(Parcel in) {
		showSwaps = (Boolean) in.readValue(null);
		showTickets = (Boolean) in.readValue(null);
		trades = (List<OrderModel>) in.readValue(OrderModel.class.getClassLoader());
		tradesDelay = (TradesDelay) in.readValue(TradesDelay.class.getClassLoader());
		total = (Integer) in.readValue(null);
	}

	public TradesViewModelOld showSwaps(Boolean showSwaps) {
		this.showSwaps = showSwaps;
		return this;
	}

	/**
	 * Get showSwaps
	 *
	 * @return showSwaps
	 **/
	@Schema(description = "")
	public Boolean isShowSwaps() {
		return showSwaps;
	}

	public void setShowSwaps(Boolean showSwaps) {
		this.showSwaps = showSwaps;
	}

	public TradesViewModelOld showTickets(Boolean showTickets) {
		this.showTickets = showTickets;
		return this;
	}

	/**
	 * Get showTickets
	 *
	 * @return showTickets
	 **/
	@Schema(description = "")
	public Boolean isShowTickets() {
		return showTickets;
	}

	public void setShowTickets(Boolean showTickets) {
		this.showTickets = showTickets;
	}

	public TradesViewModelOld trades(List<OrderModel> trades) {
		this.trades = trades;
		return this;
	}

	public TradesViewModelOld addTradesItem(OrderModel tradesItem) {
		if (this.trades == null) {
			this.trades = new ArrayList<OrderModel>();
		}
		this.trades.add(tradesItem);
		return this;
	}

	/**
	 * Get trades
	 *
	 * @return trades
	 **/
	@Schema(description = "")
	public List<OrderModel> getTrades() {
		return trades;
	}

	public void setTrades(List<OrderModel> trades) {
		this.trades = trades;
	}

	public TradesViewModelOld tradesDelay(TradesDelay tradesDelay) {
		this.tradesDelay = tradesDelay;
		return this;
	}

	/**
	 * Get tradesDelay
	 *
	 * @return tradesDelay
	 **/
	@Schema(description = "")
	public TradesDelay getTradesDelay() {
		return tradesDelay;
	}

	public void setTradesDelay(TradesDelay tradesDelay) {
		this.tradesDelay = tradesDelay;
	}

	public TradesViewModelOld total(Integer total) {
		this.total = total;
		return this;
	}

	/**
	 * Get total
	 *
	 * @return total
	 **/
	@Schema(description = "")
	public Integer getTotal() {
		return total;
	}

	public void setTotal(Integer total) {
		this.total = total;
	}

	@Override
	public boolean equals(java.lang.Object o) {
		if (this == o) {
			return true;
		}
		if (o == null || getClass() != o.getClass()) {
			return false;
		}
		TradesViewModelOld tradesViewModelOld = (TradesViewModelOld) o;
		return Objects.equals(this.showSwaps, tradesViewModelOld.showSwaps) &&
				Objects.equals(this.showTickets, tradesViewModelOld.showTickets) &&
				Objects.equals(this.trades, tradesViewModelOld.trades) &&
				Objects.equals(this.tradesDelay, tradesViewModelOld.tradesDelay) &&
				Objects.equals(this.total, tradesViewModelOld.total);
	}

	@Override
	public int hashCode() {
		return Objects.hash(showSwaps, showTickets, trades, tradesDelay, total);
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class TradesViewModelOld {\n");

		sb.append("    showSwaps: ").append(toIndentedString(showSwaps)).append("\n");
		sb.append("    showTickets: ").append(toIndentedString(showTickets)).append("\n");
		sb.append("    trades: ").append(toIndentedString(trades)).append("\n");
		sb.append("    tradesDelay: ").append(toIndentedString(tradesDelay)).append("\n");
		sb.append("    total: ").append(toIndentedString(total)).append("\n");
		sb.append("}");
		return sb.toString();
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private String toIndentedString(java.lang.Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n    ");
	}

	public void writeToParcel(Parcel out, int flags) {
		out.writeValue(showSwaps);
		out.writeValue(showTickets);
		out.writeValue(trades);
		out.writeValue(tradesDelay);
		out.writeValue(total);
	}

	public int describeContents() {
		return 0;
	}
}
