/*
 * Core API v2.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.MoneyLocationType;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import android.os.Parcelable;
import android.os.Parcel;
/**
 * MoneyLocation
 */


public class MoneyLocation implements Parcelable {
  @SerializedName("name")
  private MoneyLocationType name = null;

  @SerializedName("percent")
  private Double percent = null;

  @SerializedName("color")
  private String color = null;

  public MoneyLocation() {
  }
  public MoneyLocation name(MoneyLocationType name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public MoneyLocationType getName() {
    return name;
  }

  public void setName(MoneyLocationType name) {
    this.name = name;
  }

  public MoneyLocation percent(Double percent) {
    this.percent = percent;
    return this;
  }

   /**
   * Get percent
   * @return percent
  **/
  @Schema(description = "")
  public Double getPercent() {
    return percent;
  }

  public void setPercent(Double percent) {
    this.percent = percent;
  }

  public MoneyLocation color(String color) {
    this.color = color;
    return this;
  }

   /**
   * Get color
   * @return color
  **/
  @Schema(description = "")
  public String getColor() {
    return color;
  }

  public void setColor(String color) {
    this.color = color;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MoneyLocation moneyLocation = (MoneyLocation) o;
    return Objects.equals(this.name, moneyLocation.name) &&
        Objects.equals(this.percent, moneyLocation.percent) &&
        Objects.equals(this.color, moneyLocation.color);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, percent, color);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MoneyLocation {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    percent: ").append(toIndentedString(percent)).append("\n");
    sb.append("    color: ").append(toIndentedString(color)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public void writeToParcel(Parcel out, int flags) {
    out.writeValue(name);
    out.writeValue(percent);
    out.writeValue(color);
  }

  MoneyLocation(Parcel in) {
    name = (MoneyLocationType)in.readValue(MoneyLocationType.class.getClassLoader());
    percent = (Double)in.readValue(null);
    color = (String)in.readValue(null);
  }

  public int describeContents() {
    return 0;
  }

  public static final Parcelable.Creator<MoneyLocation> CREATOR = new Parcelable.Creator<MoneyLocation>() {
    public MoneyLocation createFromParcel(Parcel in) {
      return new MoneyLocation(in);
    }
    public MoneyLocation[] newArray(int size) {
      return new MoneyLocation[size];
    }
  };
}
