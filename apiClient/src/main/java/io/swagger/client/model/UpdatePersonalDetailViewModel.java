/*
 * Core API v2.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import android.os.Parcel;
import android.os.Parcelable;

import com.google.gson.annotations.SerializedName;

import org.joda.time.DateTime;

import java.util.Objects;

import io.swagger.v3.oas.annotations.media.Schema;

/**
 * UpdatePersonalDetailViewModel
 */


public class UpdatePersonalDetailViewModel implements Parcelable
{
	public static final Parcelable.Creator<UpdatePersonalDetailViewModel> CREATOR = new Parcelable.Creator<UpdatePersonalDetailViewModel>()
	{
		public UpdatePersonalDetailViewModel createFromParcel(Parcel in) {
			return new UpdatePersonalDetailViewModel(in);
		}

		public UpdatePersonalDetailViewModel[] newArray(int size) {
			return new UpdatePersonalDetailViewModel[size];
		}
	};

	@SerializedName("firstName")
	private String firstName = null;

	@SerializedName("middleName")
	private String middleName = null;

	@SerializedName("lastName")
	private String lastName = null;

	@SerializedName("birthday")
	private DateTime birthday = null;

	@SerializedName("citizenship")
	private String citizenship = null;

	@SerializedName("gender")
	private Boolean gender = null;

	@SerializedName("documentId")
	private String documentId = null;

	@SerializedName("phoneNumber")
	private String phoneNumber = null;

	@SerializedName("country")
	private String country = null;

	@SerializedName("city")
	private String city = null;

	@SerializedName("address")
	private String address = null;

	@SerializedName("index")
	private String index = null;

	public UpdatePersonalDetailViewModel() {
	}

	UpdatePersonalDetailViewModel(Parcel in) {
		firstName = (String) in.readValue(null);
		middleName = (String) in.readValue(null);
		lastName = (String) in.readValue(null);
		birthday = (DateTime) in.readValue(DateTime.class.getClassLoader());
		citizenship = (String) in.readValue(null);
		gender = (Boolean) in.readValue(null);
		documentId = (String) in.readValue(null);
		phoneNumber = (String) in.readValue(null);
		country = (String) in.readValue(null);
		city = (String) in.readValue(null);
		address = (String) in.readValue(null);
		index = (String) in.readValue(null);
	}

	public UpdatePersonalDetailViewModel firstName(String firstName) {
		this.firstName = firstName;
		return this;
	}

	/**
	 * Get firstName
	 *
	 * @return firstName
	 **/
	@Schema(description = "")
	public String getFirstName() {
		return firstName;
	}

	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}

	public UpdatePersonalDetailViewModel middleName(String middleName) {
		this.middleName = middleName;
		return this;
	}

	/**
	 * Get middleName
	 *
	 * @return middleName
	 **/
	@Schema(description = "")
	public String getMiddleName() {
		return middleName;
	}

	public void setMiddleName(String middleName) {
		this.middleName = middleName;
	}

	public UpdatePersonalDetailViewModel lastName(String lastName) {
		this.lastName = lastName;
		return this;
	}

	/**
	 * Get lastName
	 *
	 * @return lastName
	 **/
	@Schema(description = "")
	public String getLastName() {
		return lastName;
	}

	public void setLastName(String lastName) {
		this.lastName = lastName;
	}

	public UpdatePersonalDetailViewModel birthday(DateTime birthday) {
		this.birthday = birthday;
		return this;
	}

	/**
	 * Get birthday
	 *
	 * @return birthday
	 **/
	@Schema(description = "")
	public DateTime getBirthday() {
		return birthday;
	}

	public void setBirthday(DateTime birthday) {
		this.birthday = birthday;
	}

	public UpdatePersonalDetailViewModel citizenship(String citizenship) {
		this.citizenship = citizenship;
		return this;
	}

	/**
	 * Get citizenship
	 *
	 * @return citizenship
	 **/
	@Schema(description = "")
	public String getCitizenship() {
		return citizenship;
	}

	public void setCitizenship(String citizenship) {
		this.citizenship = citizenship;
	}

	public UpdatePersonalDetailViewModel gender(Boolean gender) {
		this.gender = gender;
		return this;
	}

	/**
	 * Get gender
	 *
	 * @return gender
	 **/
	@Schema(description = "")
	public Boolean isGender() {
		return gender;
	}

	public void setGender(Boolean gender) {
		this.gender = gender;
	}

	public UpdatePersonalDetailViewModel documentId(String documentId) {
		this.documentId = documentId;
		return this;
	}

	/**
	 * Get documentId
	 *
	 * @return documentId
	 **/
	@Schema(description = "")
	public String getDocumentId() {
		return documentId;
	}

	public void setDocumentId(String documentId) {
		this.documentId = documentId;
	}

	public UpdatePersonalDetailViewModel phoneNumber(String phoneNumber) {
		this.phoneNumber = phoneNumber;
		return this;
	}

	/**
	 * Get phoneNumber
	 *
	 * @return phoneNumber
	 **/
	@Schema(description = "")
	public String getPhoneNumber() {
		return phoneNumber;
	}

	public void setPhoneNumber(String phoneNumber) {
		this.phoneNumber = phoneNumber;
	}

	public UpdatePersonalDetailViewModel country(String country) {
		this.country = country;
		return this;
	}

	/**
	 * Get country
	 *
	 * @return country
	 **/
	@Schema(description = "")
	public String getCountry() {
		return country;
	}

	public void setCountry(String country) {
		this.country = country;
	}

	public UpdatePersonalDetailViewModel city(String city) {
		this.city = city;
		return this;
	}

	/**
	 * Get city
	 *
	 * @return city
	 **/
	@Schema(description = "")
	public String getCity() {
		return city;
	}

	public void setCity(String city) {
		this.city = city;
	}

	public UpdatePersonalDetailViewModel address(String address) {
		this.address = address;
		return this;
	}

	/**
	 * Get address
	 *
	 * @return address
	 **/
	@Schema(description = "")
	public String getAddress() {
		return address;
	}

	public void setAddress(String address) {
		this.address = address;
	}

	public UpdatePersonalDetailViewModel index(String index) {
		this.index = index;
		return this;
	}

	/**
	 * Get index
	 *
	 * @return index
	 **/
	@Schema(description = "")
	public String getIndex() {
		return index;
	}

	public void setIndex(String index) {
		this.index = index;
	}

	@Override
	public boolean equals(java.lang.Object o) {
		if (this == o) {
			return true;
		}
		if (o == null || getClass() != o.getClass()) {
			return false;
		}
		UpdatePersonalDetailViewModel updatePersonalDetailViewModel = (UpdatePersonalDetailViewModel) o;
		return Objects.equals(this.firstName, updatePersonalDetailViewModel.firstName) &&
				Objects.equals(this.middleName, updatePersonalDetailViewModel.middleName) &&
				Objects.equals(this.lastName, updatePersonalDetailViewModel.lastName) &&
				Objects.equals(this.birthday, updatePersonalDetailViewModel.birthday) &&
				Objects.equals(this.citizenship, updatePersonalDetailViewModel.citizenship) &&
				Objects.equals(this.gender, updatePersonalDetailViewModel.gender) &&
				Objects.equals(this.documentId, updatePersonalDetailViewModel.documentId) &&
				Objects.equals(this.phoneNumber, updatePersonalDetailViewModel.phoneNumber) &&
				Objects.equals(this.country, updatePersonalDetailViewModel.country) &&
				Objects.equals(this.city, updatePersonalDetailViewModel.city) &&
				Objects.equals(this.address, updatePersonalDetailViewModel.address) &&
				Objects.equals(this.index, updatePersonalDetailViewModel.index);
	}

	@Override
	public int hashCode() {
		return Objects.hash(firstName, middleName, lastName, birthday, citizenship, gender, documentId, phoneNumber, country, city, address, index);
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class UpdatePersonalDetailViewModel {\n");

		sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
		sb.append("    middleName: ").append(toIndentedString(middleName)).append("\n");
		sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
		sb.append("    birthday: ").append(toIndentedString(birthday)).append("\n");
		sb.append("    citizenship: ").append(toIndentedString(citizenship)).append("\n");
		sb.append("    gender: ").append(toIndentedString(gender)).append("\n");
		sb.append("    documentId: ").append(toIndentedString(documentId)).append("\n");
		sb.append("    phoneNumber: ").append(toIndentedString(phoneNumber)).append("\n");
		sb.append("    country: ").append(toIndentedString(country)).append("\n");
		sb.append("    city: ").append(toIndentedString(city)).append("\n");
		sb.append("    address: ").append(toIndentedString(address)).append("\n");
		sb.append("    index: ").append(toIndentedString(index)).append("\n");
		sb.append("}");
		return sb.toString();
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private String toIndentedString(java.lang.Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n    ");
	}

	public void writeToParcel(Parcel out, int flags) {
		out.writeValue(firstName);
		out.writeValue(middleName);
		out.writeValue(lastName);
		out.writeValue(birthday);
		out.writeValue(citizenship);
		out.writeValue(gender);
		out.writeValue(documentId);
		out.writeValue(phoneNumber);
		out.writeValue(country);
		out.writeValue(city);
		out.writeValue(address);
		out.writeValue(index);
	}

	public int describeContents() {
		return 0;
	}
}
