/*
 * Core API v2.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import android.os.Parcel;
import android.os.Parcelable;

import com.google.gson.annotations.SerializedName;

import java.util.Objects;
import java.util.UUID;

import io.swagger.v3.oas.annotations.media.Schema;

/**
 * LoginSignViewModel
 */


public class LoginSignViewModel implements Parcelable
{
	public static final Parcelable.Creator<LoginSignViewModel> CREATOR = new Parcelable.Creator<LoginSignViewModel>()
	{
		public LoginSignViewModel createFromParcel(Parcel in) {
			return new LoginSignViewModel(in);
		}

		public LoginSignViewModel[] newArray(int size) {
			return new LoginSignViewModel[size];
		}
	};

	@SerializedName("address")
	private String address = null;

	@SerializedName("addressLowered")
	private String addressLowered = null;

	@SerializedName("messageId")
	private UUID messageId = null;

	@SerializedName("signature")
	private String signature = null;

	@SerializedName("client")
	private String client = null;

	@SerializedName("twoFactorCode")
	private String twoFactorCode = null;

	@SerializedName("recoveryCode")
	private String recoveryCode = null;

	public LoginSignViewModel() {
	}

	LoginSignViewModel(Parcel in) {
		address = (String) in.readValue(null);
		addressLowered = (String) in.readValue(null);
		messageId = (UUID) in.readValue(UUID.class.getClassLoader());
		signature = (String) in.readValue(null);
		client = (String) in.readValue(null);
		twoFactorCode = (String) in.readValue(null);
		recoveryCode = (String) in.readValue(null);
	}

	public LoginSignViewModel address(String address) {
		this.address = address;
		return this;
	}

	/**
	 * Get address
	 *
	 * @return address
	 **/
	@Schema(required = true, description = "")
	public String getAddress() {
		return address;
	}

	public void setAddress(String address) {
		this.address = address;
	}

	/**
	 * Get addressLowered
	 *
	 * @return addressLowered
	 **/
	@Schema(description = "")
	public String getAddressLowered() {
		return addressLowered;
	}

	public LoginSignViewModel messageId(UUID messageId) {
		this.messageId = messageId;
		return this;
	}

	/**
	 * Get messageId
	 *
	 * @return messageId
	 **/
	@Schema(required = true, description = "")
	public UUID getMessageId() {
		return messageId;
	}

	public void setMessageId(UUID messageId) {
		this.messageId = messageId;
	}

	public LoginSignViewModel signature(String signature) {
		this.signature = signature;
		return this;
	}

	/**
	 * Get signature
	 *
	 * @return signature
	 **/
	@Schema(required = true, description = "")
	public String getSignature() {
		return signature;
	}

	public void setSignature(String signature) {
		this.signature = signature;
	}

	public LoginSignViewModel client(String client) {
		this.client = client;
		return this;
	}

	/**
	 * Get client
	 *
	 * @return client
	 **/
	@Schema(description = "")
	public String getClient() {
		return client;
	}

	public void setClient(String client) {
		this.client = client;
	}

	public LoginSignViewModel twoFactorCode(String twoFactorCode) {
		this.twoFactorCode = twoFactorCode;
		return this;
	}

	/**
	 * Get twoFactorCode
	 *
	 * @return twoFactorCode
	 **/
	@Schema(description = "")
	public String getTwoFactorCode() {
		return twoFactorCode;
	}

	public void setTwoFactorCode(String twoFactorCode) {
		this.twoFactorCode = twoFactorCode;
	}

	public LoginSignViewModel recoveryCode(String recoveryCode) {
		this.recoveryCode = recoveryCode;
		return this;
	}

	/**
	 * Get recoveryCode
	 *
	 * @return recoveryCode
	 **/
	@Schema(description = "")
	public String getRecoveryCode() {
		return recoveryCode;
	}

	public void setRecoveryCode(String recoveryCode) {
		this.recoveryCode = recoveryCode;
	}

	@Override
	public boolean equals(java.lang.Object o) {
		if (this == o) {
			return true;
		}
		if (o == null || getClass() != o.getClass()) {
			return false;
		}
		LoginSignViewModel loginSignViewModel = (LoginSignViewModel) o;
		return Objects.equals(this.address, loginSignViewModel.address) &&
				Objects.equals(this.addressLowered, loginSignViewModel.addressLowered) &&
				Objects.equals(this.messageId, loginSignViewModel.messageId) &&
				Objects.equals(this.signature, loginSignViewModel.signature) &&
				Objects.equals(this.client, loginSignViewModel.client) &&
				Objects.equals(this.twoFactorCode, loginSignViewModel.twoFactorCode) &&
				Objects.equals(this.recoveryCode, loginSignViewModel.recoveryCode);
	}

	@Override
	public int hashCode() {
		return Objects.hash(address, addressLowered, messageId, signature, client, twoFactorCode, recoveryCode);
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class LoginSignViewModel {\n");

		sb.append("    address: ").append(toIndentedString(address)).append("\n");
		sb.append("    addressLowered: ").append(toIndentedString(addressLowered)).append("\n");
		sb.append("    messageId: ").append(toIndentedString(messageId)).append("\n");
		sb.append("    signature: ").append(toIndentedString(signature)).append("\n");
		sb.append("    client: ").append(toIndentedString(client)).append("\n");
		sb.append("    twoFactorCode: ").append(toIndentedString(twoFactorCode)).append("\n");
		sb.append("    recoveryCode: ").append(toIndentedString(recoveryCode)).append("\n");
		sb.append("}");
		return sb.toString();
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private String toIndentedString(java.lang.Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n    ");
	}

	public void writeToParcel(Parcel out, int flags) {
		out.writeValue(address);
		out.writeValue(addressLowered);
		out.writeValue(messageId);
		out.writeValue(signature);
		out.writeValue(client);
		out.writeValue(twoFactorCode);
		out.writeValue(recoveryCode);
	}

	public int describeContents() {
		return 0;
	}
}
