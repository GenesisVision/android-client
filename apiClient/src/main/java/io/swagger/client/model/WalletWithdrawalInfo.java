/*
 * Core API v2.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import android.os.Parcel;
import android.os.Parcelable;

import com.google.gson.annotations.SerializedName;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import io.swagger.v3.oas.annotations.media.Schema;

/**
 * WalletWithdrawalInfo
 */


public class WalletWithdrawalInfo implements Parcelable
{
  public static final Parcelable.Creator<WalletWithdrawalInfo> CREATOR = new Parcelable.Creator<WalletWithdrawalInfo>()
  {
    public WalletWithdrawalInfo createFromParcel(Parcel in) {
      return new WalletWithdrawalInfo(in);
    }

    public WalletWithdrawalInfo[] newArray(int size) {
      return new WalletWithdrawalInfo[size];
    }
  };

  @SerializedName("currency")
  private Currency currency = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("logoUrl")
  private String logoUrl = null;

  @SerializedName("commissions")
  private List<WalletWithdrawalCurrencyInfo> commissions = null;

  @SerializedName("rateToGvt")
  private Double rateToGvt = null;

  @SerializedName("availableToWithdrawal")
  private Double availableToWithdrawal = null;

  public WalletWithdrawalInfo() {
  }

  WalletWithdrawalInfo(Parcel in) {
    currency = (Currency) in.readValue(Currency.class.getClassLoader());
    description = (String) in.readValue(null);
    logoUrl = (String) in.readValue(null);
    commissions = (List<WalletWithdrawalCurrencyInfo>) in.readValue(WalletWithdrawalCurrencyInfo.class.getClassLoader());
    rateToGvt = (Double) in.readValue(null);
    availableToWithdrawal = (Double) in.readValue(null);
  }

  public WalletWithdrawalInfo currency(Currency currency) {
    this.currency = currency;
    return this;
  }

  /**
   * Get currency
   *
   * @return currency
   **/
  @Schema(description = "")
  public Currency getCurrency() {
    return currency;
  }

  public void setCurrency(Currency currency) {
    this.currency = currency;
  }

  public WalletWithdrawalInfo description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   *
   * @return description
   **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public WalletWithdrawalInfo logoUrl(String logoUrl) {
    this.logoUrl = logoUrl;
    return this;
  }

  /**
   * Get logoUrl
   *
   * @return logoUrl
   **/
  @Schema(description = "")
  public String getLogoUrl() {
    return logoUrl;
  }

  public void setLogoUrl(String logoUrl) {
    this.logoUrl = logoUrl;
  }

  public WalletWithdrawalInfo commissions(List<WalletWithdrawalCurrencyInfo> commissions) {
    this.commissions = commissions;
    return this;
  }

  public WalletWithdrawalInfo addCommissionsItem(WalletWithdrawalCurrencyInfo commissionsItem) {
    if (this.commissions == null) {
      this.commissions = new ArrayList<WalletWithdrawalCurrencyInfo>();
    }
    this.commissions.add(commissionsItem);
    return this;
  }

  /**
   * Get commissions
   *
   * @return commissions
   **/
  @Schema(description = "")
  public List<WalletWithdrawalCurrencyInfo> getCommissions() {
    return commissions;
  }

  public void setCommissions(List<WalletWithdrawalCurrencyInfo> commissions) {
    this.commissions = commissions;
  }

  public WalletWithdrawalInfo rateToGvt(Double rateToGvt) {
    this.rateToGvt = rateToGvt;
    return this;
  }

  /**
   * Get rateToGvt
   *
   * @return rateToGvt
   **/
  @Schema(description = "")
  public Double getRateToGvt() {
    return rateToGvt;
  }

  public void setRateToGvt(Double rateToGvt) {
    this.rateToGvt = rateToGvt;
  }

  public WalletWithdrawalInfo availableToWithdrawal(Double availableToWithdrawal) {
    this.availableToWithdrawal = availableToWithdrawal;
    return this;
  }

  /**
   * Get availableToWithdrawal
   *
   * @return availableToWithdrawal
   **/
  @Schema(description = "")
  public Double getAvailableToWithdrawal() {
    return availableToWithdrawal;
  }

  public void setAvailableToWithdrawal(Double availableToWithdrawal) {
    this.availableToWithdrawal = availableToWithdrawal;
  }

  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WalletWithdrawalInfo walletWithdrawalInfo = (WalletWithdrawalInfo) o;
    return Objects.equals(this.currency, walletWithdrawalInfo.currency) &&
            Objects.equals(this.description, walletWithdrawalInfo.description) &&
            Objects.equals(this.logoUrl, walletWithdrawalInfo.logoUrl) &&
            Objects.equals(this.commissions, walletWithdrawalInfo.commissions) &&
            Objects.equals(this.rateToGvt, walletWithdrawalInfo.rateToGvt) &&
            Objects.equals(this.availableToWithdrawal, walletWithdrawalInfo.availableToWithdrawal);
  }

  @Override
  public int hashCode() {
    return Objects.hash(currency, description, logoUrl, commissions, rateToGvt, availableToWithdrawal);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WalletWithdrawalInfo {\n");

    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    logoUrl: ").append(toIndentedString(logoUrl)).append("\n");
    sb.append("    commissions: ").append(toIndentedString(commissions)).append("\n");
    sb.append("    rateToGvt: ").append(toIndentedString(rateToGvt)).append("\n");
    sb.append("    availableToWithdrawal: ").append(toIndentedString(availableToWithdrawal)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  public void writeToParcel(Parcel out, int flags) {
    out.writeValue(currency);
    out.writeValue(description);
    out.writeValue(logoUrl);
    out.writeValue(commissions);
    out.writeValue(rateToGvt);
    out.writeValue(availableToWithdrawal);
  }

  public int describeContents() {
    return 0;
  }
}
