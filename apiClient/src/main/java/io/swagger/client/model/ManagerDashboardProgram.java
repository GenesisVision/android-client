/*
 * Core API v1.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import com.google.gson.annotations.SerializedName;

import org.joda.time.DateTime;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
import java.util.UUID;

import io.swagger.annotations.ApiModelProperty;

/**
 * ManagerDashboardProgram
 */

public class ManagerDashboardProgram
{
	@SerializedName("level")
	private Integer level = null;

	@SerializedName("periodStarts")
	private DateTime periodStarts = null;

	@SerializedName("periodEnds")
	private DateTime periodEnds = null;

	@SerializedName("id")
	private UUID id = null;

	@SerializedName("logo")
	private String logo = null;

	@SerializedName("url")
	private String url = null;

	@SerializedName("title")
	private String title = null;

	@SerializedName("share")
	private Double share = null;

	@SerializedName("investments")
	private Double investments = null;

	@SerializedName("investmentsCount")
	private Integer investmentsCount = null;

	@SerializedName("withdrawals")
	private Double withdrawals = null;

	@SerializedName("withdrawalsCount")
	private Integer withdrawalsCount = null;

	@SerializedName("balance")
	private Double balance = null;

	@SerializedName("investorsCount")
	private Integer investorsCount = null;

	@SerializedName("profit")
	private Double profit = null;

	@SerializedName("chart")
	private List<ChartSimple> chart = null;

	public ManagerDashboardProgram level(Integer level) {
		this.level = level;
		return this;
	}

	/**
	 * Get level
	 *
	 * @return level
	 **/
	@ApiModelProperty(value = "")
	public Integer getLevel() {
		return level;
	}

	public void setLevel(Integer level) {
		this.level = level;
	}

	public ManagerDashboardProgram periodStarts(DateTime periodStarts) {
		this.periodStarts = periodStarts;
		return this;
	}

	/**
	 * Get periodStarts
	 *
	 * @return periodStarts
	 **/
	@ApiModelProperty(value = "")
	public DateTime getPeriodStarts() {
		return periodStarts;
	}

	public void setPeriodStarts(DateTime periodStarts) {
		this.periodStarts = periodStarts;
	}

	public ManagerDashboardProgram periodEnds(DateTime periodEnds) {
		this.periodEnds = periodEnds;
		return this;
	}

	/**
	 * Get periodEnds
	 *
	 * @return periodEnds
	 **/
	@ApiModelProperty(value = "")
	public DateTime getPeriodEnds() {
		return periodEnds;
	}

	public void setPeriodEnds(DateTime periodEnds) {
		this.periodEnds = periodEnds;
	}

	public ManagerDashboardProgram id(UUID id) {
		this.id = id;
		return this;
	}

	/**
	 * Get id
	 *
	 * @return id
	 **/
	@ApiModelProperty(value = "")
	public UUID getId() {
		return id;
	}

	public void setId(UUID id) {
		this.id = id;
	}

	public ManagerDashboardProgram logo(String logo) {
		this.logo = logo;
		return this;
	}

	/**
	 * Get logo
	 *
	 * @return logo
	 **/
	@ApiModelProperty(value = "")
	public String getLogo() {
		return logo;
	}

	public void setLogo(String logo) {
		this.logo = logo;
	}

	public ManagerDashboardProgram url(String url) {
		this.url = url;
		return this;
	}

	/**
	 * Get url
	 *
	 * @return url
	 **/
	@ApiModelProperty(value = "")
	public String getUrl() {
		return url;
	}

	public void setUrl(String url) {
		this.url = url;
	}

	public ManagerDashboardProgram title(String title) {
		this.title = title;
		return this;
	}

	/**
	 * Get title
	 *
	 * @return title
	 **/
	@ApiModelProperty(value = "")
	public String getTitle() {
		return title;
	}

	public void setTitle(String title) {
		this.title = title;
	}

	public ManagerDashboardProgram share(Double share) {
		this.share = share;
		return this;
	}

	/**
	 * Get share
	 *
	 * @return share
	 **/
	@ApiModelProperty(value = "")
	public Double getShare() {
		return share;
	}

	public void setShare(Double share) {
		this.share = share;
	}

	public ManagerDashboardProgram investments(Double investments) {
		this.investments = investments;
		return this;
	}

	/**
	 * Get investments
	 *
	 * @return investments
	 **/
	@ApiModelProperty(value = "")
	public Double getInvestments() {
		return investments;
	}

	public void setInvestments(Double investments) {
		this.investments = investments;
	}

	public ManagerDashboardProgram investmentsCount(Integer investmentsCount) {
		this.investmentsCount = investmentsCount;
		return this;
	}

	/**
	 * Get investmentsCount
	 *
	 * @return investmentsCount
	 **/
	@ApiModelProperty(value = "")
	public Integer getInvestmentsCount() {
		return investmentsCount;
	}

	public void setInvestmentsCount(Integer investmentsCount) {
		this.investmentsCount = investmentsCount;
	}

	public ManagerDashboardProgram withdrawals(Double withdrawals) {
		this.withdrawals = withdrawals;
		return this;
	}

	/**
	 * Get withdrawals
	 *
	 * @return withdrawals
	 **/
	@ApiModelProperty(value = "")
	public Double getWithdrawals() {
		return withdrawals;
	}

	public void setWithdrawals(Double withdrawals) {
		this.withdrawals = withdrawals;
	}

	public ManagerDashboardProgram withdrawalsCount(Integer withdrawalsCount) {
		this.withdrawalsCount = withdrawalsCount;
		return this;
	}

	/**
	 * Get withdrawalsCount
	 *
	 * @return withdrawalsCount
	 **/
	@ApiModelProperty(value = "")
	public Integer getWithdrawalsCount() {
		return withdrawalsCount;
	}

	public void setWithdrawalsCount(Integer withdrawalsCount) {
		this.withdrawalsCount = withdrawalsCount;
	}

	public ManagerDashboardProgram balance(Double balance) {
		this.balance = balance;
		return this;
	}

	/**
	 * Get balance
	 *
	 * @return balance
	 **/
	@ApiModelProperty(value = "")
	public Double getBalance() {
		return balance;
	}

	public void setBalance(Double balance) {
		this.balance = balance;
	}

	public ManagerDashboardProgram investorsCount(Integer investorsCount) {
		this.investorsCount = investorsCount;
		return this;
	}

	/**
	 * Get investorsCount
	 *
	 * @return investorsCount
	 **/
	@ApiModelProperty(value = "")
	public Integer getInvestorsCount() {
		return investorsCount;
	}

	public void setInvestorsCount(Integer investorsCount) {
		this.investorsCount = investorsCount;
	}

	public ManagerDashboardProgram profit(Double profit) {
		this.profit = profit;
		return this;
	}

	/**
	 * Get profit
	 *
	 * @return profit
	 **/
	@ApiModelProperty(value = "")
	public Double getProfit() {
		return profit;
	}

	public void setProfit(Double profit) {
		this.profit = profit;
	}

	public ManagerDashboardProgram chart(List<ChartSimple> chart) {
		this.chart = chart;
		return this;
	}

	public ManagerDashboardProgram addChartItem(ChartSimple chartItem) {
		if (this.chart == null) {
			this.chart = new ArrayList<ChartSimple>();
		}
		this.chart.add(chartItem);
		return this;
	}

	/**
	 * Get chart
	 *
	 * @return chart
	 **/
	@ApiModelProperty(value = "")
	public List<ChartSimple> getChart() {
		return chart;
	}

	public void setChart(List<ChartSimple> chart) {
		this.chart = chart;
	}


	@Override
	public boolean equals(java.lang.Object o) {
		if (this == o) {
			return true;
		}
		if (o == null || getClass() != o.getClass()) {
			return false;
		}
		ManagerDashboardProgram managerDashboardProgram = (ManagerDashboardProgram) o;
		return Objects.equals(this.level, managerDashboardProgram.level) &&
				Objects.equals(this.periodStarts, managerDashboardProgram.periodStarts) &&
				Objects.equals(this.periodEnds, managerDashboardProgram.periodEnds) &&
				Objects.equals(this.id, managerDashboardProgram.id) &&
				Objects.equals(this.logo, managerDashboardProgram.logo) &&
				Objects.equals(this.url, managerDashboardProgram.url) &&
				Objects.equals(this.title, managerDashboardProgram.title) &&
				Objects.equals(this.share, managerDashboardProgram.share) &&
				Objects.equals(this.investments, managerDashboardProgram.investments) &&
				Objects.equals(this.investmentsCount, managerDashboardProgram.investmentsCount) &&
				Objects.equals(this.withdrawals, managerDashboardProgram.withdrawals) &&
				Objects.equals(this.withdrawalsCount, managerDashboardProgram.withdrawalsCount) &&
				Objects.equals(this.balance, managerDashboardProgram.balance) &&
				Objects.equals(this.investorsCount, managerDashboardProgram.investorsCount) &&
				Objects.equals(this.profit, managerDashboardProgram.profit) &&
				Objects.equals(this.chart, managerDashboardProgram.chart);
	}

	@Override
	public int hashCode() {
		return Objects.hash(level, periodStarts, periodEnds, id, logo, url, title, share, investments, investmentsCount, withdrawals, withdrawalsCount, balance, investorsCount, profit, chart);
	}


	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class ManagerDashboardProgram {\n");

		sb.append("    level: ").append(toIndentedString(level)).append("\n");
		sb.append("    periodStarts: ").append(toIndentedString(periodStarts)).append("\n");
		sb.append("    periodEnds: ").append(toIndentedString(periodEnds)).append("\n");
		sb.append("    id: ").append(toIndentedString(id)).append("\n");
		sb.append("    logo: ").append(toIndentedString(logo)).append("\n");
		sb.append("    url: ").append(toIndentedString(url)).append("\n");
		sb.append("    title: ").append(toIndentedString(title)).append("\n");
		sb.append("    share: ").append(toIndentedString(share)).append("\n");
		sb.append("    investments: ").append(toIndentedString(investments)).append("\n");
		sb.append("    investmentsCount: ").append(toIndentedString(investmentsCount)).append("\n");
		sb.append("    withdrawals: ").append(toIndentedString(withdrawals)).append("\n");
		sb.append("    withdrawalsCount: ").append(toIndentedString(withdrawalsCount)).append("\n");
		sb.append("    balance: ").append(toIndentedString(balance)).append("\n");
		sb.append("    investorsCount: ").append(toIndentedString(investorsCount)).append("\n");
		sb.append("    profit: ").append(toIndentedString(profit)).append("\n");
		sb.append("    chart: ").append(toIndentedString(chart)).append("\n");
		sb.append("}");
		return sb.toString();
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private String toIndentedString(java.lang.Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n    ");
	}

}

