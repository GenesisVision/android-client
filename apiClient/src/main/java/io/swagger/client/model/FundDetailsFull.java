/*
 * Core API v2.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import android.os.Parcel;
import android.os.Parcelable;

import com.google.gson.annotations.SerializedName;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
import java.util.UUID;

import io.swagger.v3.oas.annotations.media.Schema;

/**
 * FundDetailsFull
 */


public class FundDetailsFull implements Parcelable
{
	public static final Parcelable.Creator<FundDetailsFull> CREATOR = new Parcelable.Creator<FundDetailsFull>()
	{
		public FundDetailsFull createFromParcel(Parcel in) {
			return new FundDetailsFull(in);
		}

		public FundDetailsFull[] newArray(int size) {
			return new FundDetailsFull[size];
		}
	};

	@SerializedName("id")
	private UUID id = null;

	@SerializedName("publicInfo")
	private AssetPublicDetails publicInfo = null;

	@SerializedName("entryFeeSelected")
	private Double entryFeeSelected = null;

	@SerializedName("entryFeeCurrent")
	private Double entryFeeCurrent = null;

	@SerializedName("exitFeeSelected")
	private Double exitFeeSelected = null;

	@SerializedName("exitFeeCurrent")
	private Double exitFeeCurrent = null;

	@SerializedName("hasTradingSchedule")
	private Boolean hasTradingSchedule = null;

	@SerializedName("tradingSchedule")
	private List<TradingScheduleViewModel> tradingSchedule = null;

	@SerializedName("assetsStructure")
	private List<FundAssetInfo> assetsStructure = null;

	@SerializedName("personalDetails")
	private PersonalFundDetails personalDetails = null;

	@SerializedName("owner")
	private ProfilePublic owner = null;

	public FundDetailsFull() {
	}

	FundDetailsFull(Parcel in) {
		id = (UUID) in.readValue(UUID.class.getClassLoader());
		publicInfo = (AssetPublicDetails) in.readValue(AssetPublicDetails.class.getClassLoader());
		entryFeeSelected = (Double) in.readValue(null);
		entryFeeCurrent = (Double) in.readValue(null);
		exitFeeSelected = (Double) in.readValue(null);
		exitFeeCurrent = (Double) in.readValue(null);
		hasTradingSchedule = (Boolean) in.readValue(null);
		tradingSchedule = (List<TradingScheduleViewModel>) in.readValue(TradingScheduleViewModel.class.getClassLoader());
		assetsStructure = (List<FundAssetInfo>) in.readValue(FundAssetInfo.class.getClassLoader());
		personalDetails = (PersonalFundDetails) in.readValue(PersonalFundDetails.class.getClassLoader());
		owner = (ProfilePublic) in.readValue(ProfilePublic.class.getClassLoader());
	}

	public FundDetailsFull id(UUID id) {
		this.id = id;
		return this;
	}

	/**
	 * Get id
	 *
	 * @return id
	 **/
	@Schema(description = "")
	public UUID getId() {
		return id;
	}

	public void setId(UUID id) {
		this.id = id;
	}

	public FundDetailsFull publicInfo(AssetPublicDetails publicInfo) {
		this.publicInfo = publicInfo;
		return this;
	}

	/**
	 * Get publicInfo
	 *
	 * @return publicInfo
	 **/
	@Schema(description = "")
	public AssetPublicDetails getPublicInfo() {
		return publicInfo;
	}

	public void setPublicInfo(AssetPublicDetails publicInfo) {
		this.publicInfo = publicInfo;
	}

	public FundDetailsFull entryFeeSelected(Double entryFeeSelected) {
		this.entryFeeSelected = entryFeeSelected;
		return this;
	}

	/**
	 * Get entryFeeSelected
	 *
	 * @return entryFeeSelected
	 **/
	@Schema(description = "")
	public Double getEntryFeeSelected() {
		return entryFeeSelected;
	}

	public void setEntryFeeSelected(Double entryFeeSelected) {
		this.entryFeeSelected = entryFeeSelected;
	}

	public FundDetailsFull entryFeeCurrent(Double entryFeeCurrent) {
		this.entryFeeCurrent = entryFeeCurrent;
		return this;
	}

	/**
	 * Get entryFeeCurrent
	 *
	 * @return entryFeeCurrent
	 **/
	@Schema(description = "")
	public Double getEntryFeeCurrent() {
		return entryFeeCurrent;
	}

	public void setEntryFeeCurrent(Double entryFeeCurrent) {
		this.entryFeeCurrent = entryFeeCurrent;
	}

	public FundDetailsFull exitFeeSelected(Double exitFeeSelected) {
		this.exitFeeSelected = exitFeeSelected;
		return this;
	}

	/**
	 * Get exitFeeSelected
	 *
	 * @return exitFeeSelected
	 **/
	@Schema(description = "")
	public Double getExitFeeSelected() {
		return exitFeeSelected;
	}

	public void setExitFeeSelected(Double exitFeeSelected) {
		this.exitFeeSelected = exitFeeSelected;
	}

	public FundDetailsFull exitFeeCurrent(Double exitFeeCurrent) {
		this.exitFeeCurrent = exitFeeCurrent;
		return this;
	}

	/**
	 * Get exitFeeCurrent
	 *
	 * @return exitFeeCurrent
	 **/
	@Schema(description = "")
	public Double getExitFeeCurrent() {
		return exitFeeCurrent;
	}

	public void setExitFeeCurrent(Double exitFeeCurrent) {
		this.exitFeeCurrent = exitFeeCurrent;
	}

	public FundDetailsFull hasTradingSchedule(Boolean hasTradingSchedule) {
		this.hasTradingSchedule = hasTradingSchedule;
		return this;
	}

	/**
	 * Get hasTradingSchedule
	 *
	 * @return hasTradingSchedule
	 **/
	@Schema(description = "")
	public Boolean isHasTradingSchedule() {
		return hasTradingSchedule;
	}

	public void setHasTradingSchedule(Boolean hasTradingSchedule) {
		this.hasTradingSchedule = hasTradingSchedule;
	}

	public FundDetailsFull tradingSchedule(List<TradingScheduleViewModel> tradingSchedule) {
		this.tradingSchedule = tradingSchedule;
		return this;
	}

	public FundDetailsFull addTradingScheduleItem(TradingScheduleViewModel tradingScheduleItem) {
		if (this.tradingSchedule == null) {
			this.tradingSchedule = new ArrayList<TradingScheduleViewModel>();
		}
		this.tradingSchedule.add(tradingScheduleItem);
		return this;
	}

	/**
	 * Get tradingSchedule
	 *
	 * @return tradingSchedule
	 **/
	@Schema(description = "")
	public List<TradingScheduleViewModel> getTradingSchedule() {
		return tradingSchedule;
	}

	public void setTradingSchedule(List<TradingScheduleViewModel> tradingSchedule) {
		this.tradingSchedule = tradingSchedule;
	}

	public FundDetailsFull assetsStructure(List<FundAssetInfo> assetsStructure) {
		this.assetsStructure = assetsStructure;
		return this;
	}

	public FundDetailsFull addAssetsStructureItem(FundAssetInfo assetsStructureItem) {
		if (this.assetsStructure == null) {
			this.assetsStructure = new ArrayList<FundAssetInfo>();
		}
		this.assetsStructure.add(assetsStructureItem);
		return this;
	}

	/**
	 * Get assetsStructure
	 *
	 * @return assetsStructure
	 **/
	@Schema(description = "")
	public List<FundAssetInfo> getAssetsStructure() {
		return assetsStructure;
	}

	public void setAssetsStructure(List<FundAssetInfo> assetsStructure) {
		this.assetsStructure = assetsStructure;
	}

	public FundDetailsFull personalDetails(PersonalFundDetails personalDetails) {
		this.personalDetails = personalDetails;
		return this;
	}

	/**
	 * Get personalDetails
	 *
	 * @return personalDetails
	 **/
	@Schema(description = "")
	public PersonalFundDetails getPersonalDetails() {
		return personalDetails;
	}

	public void setPersonalDetails(PersonalFundDetails personalDetails) {
		this.personalDetails = personalDetails;
	}

	public FundDetailsFull owner(ProfilePublic owner) {
		this.owner = owner;
		return this;
	}

	/**
	 * Get owner
	 *
	 * @return owner
	 **/
	@Schema(description = "")
	public ProfilePublic getOwner() {
		return owner;
	}

	public void setOwner(ProfilePublic owner) {
		this.owner = owner;
	}

	@Override
	public boolean equals(java.lang.Object o) {
		if (this == o) {
			return true;
		}
		if (o == null || getClass() != o.getClass()) {
			return false;
		}
		FundDetailsFull fundDetailsFull = (FundDetailsFull) o;
		return Objects.equals(this.id, fundDetailsFull.id) &&
				Objects.equals(this.publicInfo, fundDetailsFull.publicInfo) &&
				Objects.equals(this.entryFeeSelected, fundDetailsFull.entryFeeSelected) &&
				Objects.equals(this.entryFeeCurrent, fundDetailsFull.entryFeeCurrent) &&
				Objects.equals(this.exitFeeSelected, fundDetailsFull.exitFeeSelected) &&
				Objects.equals(this.exitFeeCurrent, fundDetailsFull.exitFeeCurrent) &&
				Objects.equals(this.hasTradingSchedule, fundDetailsFull.hasTradingSchedule) &&
				Objects.equals(this.tradingSchedule, fundDetailsFull.tradingSchedule) &&
				Objects.equals(this.assetsStructure, fundDetailsFull.assetsStructure) &&
				Objects.equals(this.personalDetails, fundDetailsFull.personalDetails) &&
				Objects.equals(this.owner, fundDetailsFull.owner);
	}

	@Override
	public int hashCode() {
		return Objects.hash(id, publicInfo, entryFeeSelected, entryFeeCurrent, exitFeeSelected, exitFeeCurrent, hasTradingSchedule, tradingSchedule, assetsStructure, personalDetails, owner);
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class FundDetailsFull {\n");

		sb.append("    id: ").append(toIndentedString(id)).append("\n");
		sb.append("    publicInfo: ").append(toIndentedString(publicInfo)).append("\n");
		sb.append("    entryFeeSelected: ").append(toIndentedString(entryFeeSelected)).append("\n");
		sb.append("    entryFeeCurrent: ").append(toIndentedString(entryFeeCurrent)).append("\n");
		sb.append("    exitFeeSelected: ").append(toIndentedString(exitFeeSelected)).append("\n");
		sb.append("    exitFeeCurrent: ").append(toIndentedString(exitFeeCurrent)).append("\n");
		sb.append("    hasTradingSchedule: ").append(toIndentedString(hasTradingSchedule)).append("\n");
		sb.append("    tradingSchedule: ").append(toIndentedString(tradingSchedule)).append("\n");
		sb.append("    assetsStructure: ").append(toIndentedString(assetsStructure)).append("\n");
		sb.append("    personalDetails: ").append(toIndentedString(personalDetails)).append("\n");
		sb.append("    owner: ").append(toIndentedString(owner)).append("\n");
		sb.append("}");
		return sb.toString();
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private String toIndentedString(java.lang.Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n    ");
	}

	public void writeToParcel(Parcel out, int flags) {
		out.writeValue(id);
		out.writeValue(publicInfo);
		out.writeValue(entryFeeSelected);
		out.writeValue(entryFeeCurrent);
		out.writeValue(exitFeeSelected);
		out.writeValue(exitFeeCurrent);
		out.writeValue(hasTradingSchedule);
		out.writeValue(tradingSchedule);
		out.writeValue(assetsStructure);
		out.writeValue(personalDetails);
		out.writeValue(owner);
	}

	public int describeContents() {
		return 0;
	}
}
