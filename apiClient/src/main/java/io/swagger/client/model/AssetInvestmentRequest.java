/*
 * Core API v2.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import android.os.Parcel;
import android.os.Parcelable;

import com.google.gson.annotations.SerializedName;

import org.joda.time.DateTime;

import java.util.Objects;
import java.util.UUID;

import io.swagger.v3.oas.annotations.media.Schema;
/**
 * AssetInvestmentRequest
 */


public class AssetInvestmentRequest implements Parcelable {
  @SerializedName("id")
  private UUID id = null;

  @SerializedName("date")
  private DateTime date = null;

  @SerializedName("amount")
  private Double amount = null;

  @SerializedName("currency")
  private Currency currency = null;

  @SerializedName("type")
  private InvestmentRequestType type = null;

  @SerializedName("status")
  private InvestmentRequestStatus status = null;

  @SerializedName("canCancelRequest")
  private Boolean canCancelRequest = null;

  @SerializedName("assetDetails")
  private AssetRequestDetails assetDetails = null;

  public AssetInvestmentRequest() {
  }
  public AssetInvestmentRequest id(UUID id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public UUID getId() {
    return id;
  }

  public void setId(UUID id) {
    this.id = id;
  }

  public AssetInvestmentRequest date(DateTime date) {
    this.date = date;
    return this;
  }

   /**
   * Get date
   * @return date
  **/
  @Schema(description = "")
  public DateTime getDate() {
    return date;
  }

  public void setDate(DateTime date) {
    this.date = date;
  }

  public AssetInvestmentRequest amount(Double amount) {
    this.amount = amount;
    return this;
  }

   /**
   * Get amount
   * @return amount
  **/
  @Schema(description = "")
  public Double getAmount() {
    return amount;
  }

  public void setAmount(Double amount) {
    this.amount = amount;
  }

  public AssetInvestmentRequest currency(Currency currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @Schema(description = "")
  public Currency getCurrency() {
    return currency;
  }

  public void setCurrency(Currency currency) {
    this.currency = currency;
  }

  public AssetInvestmentRequest type(InvestmentRequestType type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(description = "")
  public InvestmentRequestType getType() {
    return type;
  }

  public void setType(InvestmentRequestType type) {
    this.type = type;
  }

  public AssetInvestmentRequest status(InvestmentRequestStatus status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public InvestmentRequestStatus getStatus() {
    return status;
  }

  public void setStatus(InvestmentRequestStatus status) {
    this.status = status;
  }

  public AssetInvestmentRequest canCancelRequest(Boolean canCancelRequest) {
    this.canCancelRequest = canCancelRequest;
    return this;
  }

   /**
   * Get canCancelRequest
   * @return canCancelRequest
  **/
  @Schema(description = "")
  public Boolean isCanCancelRequest() {
    return canCancelRequest;
  }

  public void setCanCancelRequest(Boolean canCancelRequest) {
    this.canCancelRequest = canCancelRequest;
  }

  public AssetInvestmentRequest assetDetails(AssetRequestDetails assetDetails) {
    this.assetDetails = assetDetails;
    return this;
  }

   /**
   * Get assetDetails
   * @return assetDetails
  **/
  @Schema(description = "")
  public AssetRequestDetails getAssetDetails() {
    return assetDetails;
  }

  public void setAssetDetails(AssetRequestDetails assetDetails) {
    this.assetDetails = assetDetails;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AssetInvestmentRequest assetInvestmentRequest = (AssetInvestmentRequest) o;
    return Objects.equals(this.id, assetInvestmentRequest.id) &&
        Objects.equals(this.date, assetInvestmentRequest.date) &&
        Objects.equals(this.amount, assetInvestmentRequest.amount) &&
        Objects.equals(this.currency, assetInvestmentRequest.currency) &&
        Objects.equals(this.type, assetInvestmentRequest.type) &&
        Objects.equals(this.status, assetInvestmentRequest.status) &&
        Objects.equals(this.canCancelRequest, assetInvestmentRequest.canCancelRequest) &&
        Objects.equals(this.assetDetails, assetInvestmentRequest.assetDetails);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, date, amount, currency, type, status, canCancelRequest, assetDetails);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AssetInvestmentRequest {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    canCancelRequest: ").append(toIndentedString(canCancelRequest)).append("\n");
    sb.append("    assetDetails: ").append(toIndentedString(assetDetails)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public void writeToParcel(Parcel out, int flags) {
    out.writeValue(id);
    out.writeValue(date);
    out.writeValue(amount);
    out.writeValue(currency);
    out.writeValue(type);
    out.writeValue(status);
    out.writeValue(canCancelRequest);
    out.writeValue(assetDetails);
  }

  AssetInvestmentRequest(Parcel in) {
    id = (UUID)in.readValue(UUID.class.getClassLoader());
    date = (DateTime)in.readValue(DateTime.class.getClassLoader());
    amount = (Double)in.readValue(null);
    currency = (Currency)in.readValue(Currency.class.getClassLoader());
    type = (InvestmentRequestType)in.readValue(InvestmentRequestType.class.getClassLoader());
    status = (InvestmentRequestStatus)in.readValue(InvestmentRequestStatus.class.getClassLoader());
    canCancelRequest = (Boolean)in.readValue(null);
    assetDetails = (AssetRequestDetails)in.readValue(AssetRequestDetails.class.getClassLoader());
  }

  public int describeContents() {
    return 0;
  }

  public static final Parcelable.Creator<AssetInvestmentRequest> CREATOR = new Parcelable.Creator<AssetInvestmentRequest>() {
    public AssetInvestmentRequest createFromParcel(Parcel in) {
      return new AssetInvestmentRequest(in);
    }
    public AssetInvestmentRequest[] newArray(int size) {
      return new AssetInvestmentRequest[size];
    }
  };
}
