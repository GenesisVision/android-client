/*
 * Core API v2.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import android.os.Parcel;
import android.os.Parcelable;

import com.google.gson.annotations.SerializedName;

import org.joda.time.DateTime;

import java.util.Objects;

import io.swagger.v3.oas.annotations.media.Schema;

/**
 * ProgramPeriodViewModel
 */


public class ProgramPeriodViewModel implements Parcelable
{
	public static final Parcelable.Creator<ProgramPeriodViewModel> CREATOR = new Parcelable.Creator<ProgramPeriodViewModel>()
	{
		public ProgramPeriodViewModel createFromParcel(Parcel in) {
			return new ProgramPeriodViewModel(in);
		}

		public ProgramPeriodViewModel[] newArray(int size) {
			return new ProgramPeriodViewModel[size];
		}
	};

	@SerializedName("dateFrom")
	private DateTime dateFrom = null;

	@SerializedName("dateTo")
	private DateTime dateTo = null;

	@SerializedName("periodLength")
	private Double periodLength = null;

  @SerializedName("number")
  private Integer number = null;

  @SerializedName("profit")
  private Double profit = null;

  @SerializedName("profitPercent")
  private Double profitPercent = null;

  @SerializedName("balance")
  private Double balance = null;

  @SerializedName("investors")
  private Integer investors = null;

  @SerializedName("managerDeposit")
  private Double managerDeposit = null;

  @SerializedName("managerWithdraw")
  private Double managerWithdraw = null;

  @SerializedName("managerCommissionRebate")
  private Double managerCommissionRebate = null;

  @SerializedName("investorsDeposit")
  private Double investorsDeposit = null;

  @SerializedName("investorsWithdraw")
  private Double investorsWithdraw = null;

  @SerializedName("investorsProfitWithdraw")
  private Double investorsProfitWithdraw = null;

  @SerializedName("platformSuccessFee")
  private Double platformSuccessFee = null;

  @SerializedName("managerStatistic")
  private ManagerFinancialStatistic managerStatistic = null;

  @SerializedName("investorStatistic")
  private InvestorFinancialStatistic investorStatistic = null;

  public ProgramPeriodViewModel() {
  }
  public ProgramPeriodViewModel dateFrom(DateTime dateFrom) {
    this.dateFrom = dateFrom;
    return this;
  }

	@SerializedName("status")
  private PeriodStatus status = null;

  public void setDateFrom(DateTime dateFrom) {
    this.dateFrom = dateFrom;
  }

  public ProgramPeriodViewModel dateTo(DateTime dateTo) {
    this.dateTo = dateTo;
    return this;
  }

	ProgramPeriodViewModel(Parcel in) {
		dateFrom = (DateTime) in.readValue(DateTime.class.getClassLoader());
		dateTo = (DateTime) in.readValue(DateTime.class.getClassLoader());
		periodLength = (Double) in.readValue(null);
		status = (PeriodStatus) in.readValue(PeriodStatus.class.getClassLoader());
		number = (Integer) in.readValue(null);
		profit = (Double) in.readValue(null);
		profitPercent = (Double) in.readValue(null);
		balance = (Double) in.readValue(null);
		investors = (Integer) in.readValue(null);
		managerDeposit = (Double) in.readValue(null);
		managerWithdraw = (Double) in.readValue(null);
		managerCommissionRebate = (Double) in.readValue(null);
		investorsDeposit = (Double) in.readValue(null);
		investorsWithdraw = (Double) in.readValue(null);
		investorsProfitWithdraw = (Double) in.readValue(null);
		platformSuccessFee = (Double) in.readValue(null);
		managerStatistic = (ManagerFinancialStatistic) in.readValue(ManagerFinancialStatistic.class.getClassLoader());
		investorStatistic = (InvestorFinancialStatistic) in.readValue(InvestorFinancialStatistic.class.getClassLoader());
	}

  public void setDateTo(DateTime dateTo) {
    this.dateTo = dateTo;
  }

  public ProgramPeriodViewModel periodLength(Double periodLength) {
    this.periodLength = periodLength;
    return this;
  }

	/**
	 * Get dateFrom
	 *
	 * @return dateFrom
	 **/
  @Schema(description = "")
  public DateTime getDateFrom() {
    return dateFrom;
  }

  public void setPeriodLength(Double periodLength) {
    this.periodLength = periodLength;
  }

  public ProgramPeriodViewModel status(PeriodStatus status) {
    this.status = status;
    return this;
  }

	/**
	 * Get dateTo
	 * @return dateTo
  **/
  @Schema(description = "")
  public DateTime getDateTo() {
    return dateTo;
  }

  public void setStatus(PeriodStatus status) {
    this.status = status;
  }

  public ProgramPeriodViewModel number(Integer number) {
    this.number = number;
    return this;
  }

	/**
	 * Get periodLength
	 * @return periodLength
  **/
  @Schema(description = "")
  public Double getPeriodLength() {
    return periodLength;
  }

  public void setNumber(Integer number) {
    this.number = number;
  }

  public ProgramPeriodViewModel profit(Double profit) {
    this.profit = profit;
    return this;
  }

	/**
	 * Get status
	 * @return status
  **/
  @Schema(description = "")
  public PeriodStatus getStatus() {
    return status;
  }

  public void setProfit(Double profit) {
    this.profit = profit;
  }

  public ProgramPeriodViewModel profitPercent(Double profitPercent) {
    this.profitPercent = profitPercent;
    return this;
  }

	/**
	 * Get number
	 * @return number
  **/
  @Schema(description = "")
  public Integer getNumber() {
    return number;
  }

  public void setProfitPercent(Double profitPercent) {
    this.profitPercent = profitPercent;
  }

  public ProgramPeriodViewModel balance(Double balance) {
    this.balance = balance;
    return this;
  }

	/**
	 * Get profit
	 * @return profit
  **/
  @Schema(description = "")
  public Double getProfit() {
    return profit;
  }

  public void setBalance(Double balance) {
    this.balance = balance;
  }

  public ProgramPeriodViewModel investors(Integer investors) {
    this.investors = investors;
    return this;
  }

	/**
	 * Get profitPercent
	 * @return profitPercent
  **/
  @Schema(description = "")
  public Double getProfitPercent() {
    return profitPercent;
  }

  public void setInvestors(Integer investors) {
    this.investors = investors;
  }

  public ProgramPeriodViewModel managerDeposit(Double managerDeposit) {
    this.managerDeposit = managerDeposit;
    return this;
  }

	/**
	 * Get balance
	 * @return balance
  **/
  @Schema(description = "")
  public Double getBalance() {
    return balance;
  }

  public void setManagerDeposit(Double managerDeposit) {
    this.managerDeposit = managerDeposit;
  }

  public ProgramPeriodViewModel managerWithdraw(Double managerWithdraw) {
    this.managerWithdraw = managerWithdraw;
    return this;
  }

	/**
	 * Get investors
	 * @return investors
  **/
  @Schema(description = "")
  public Integer getInvestors() {
    return investors;
  }

  public void setManagerWithdraw(Double managerWithdraw) {
    this.managerWithdraw = managerWithdraw;
  }

  public ProgramPeriodViewModel managerCommissionRebate(Double managerCommissionRebate) {
    this.managerCommissionRebate = managerCommissionRebate;
    return this;
  }

	/**
	 * Get managerDeposit
	 * @return managerDeposit
  **/
  @Schema(description = "")
  public Double getManagerDeposit() {
    return managerDeposit;
  }

  public void setManagerCommissionRebate(Double managerCommissionRebate) {
    this.managerCommissionRebate = managerCommissionRebate;
  }

  public ProgramPeriodViewModel investorsDeposit(Double investorsDeposit) {
    this.investorsDeposit = investorsDeposit;
    return this;
  }

	/**
	 * Get managerWithdraw
	 * @return managerWithdraw
  **/
  @Schema(description = "")
  public Double getManagerWithdraw() {
    return managerWithdraw;
  }

  public void setInvestorsDeposit(Double investorsDeposit) {
    this.investorsDeposit = investorsDeposit;
  }

  public ProgramPeriodViewModel investorsWithdraw(Double investorsWithdraw) {
    this.investorsWithdraw = investorsWithdraw;
    return this;
  }

	/**
	 * Get managerCommissionRebate
	 * @return managerCommissionRebate
  **/
  @Schema(description = "")
  public Double getManagerCommissionRebate() {
    return managerCommissionRebate;
  }

  public void setInvestorsWithdraw(Double investorsWithdraw) {
    this.investorsWithdraw = investorsWithdraw;
  }

  public ProgramPeriodViewModel investorsProfitWithdraw(Double investorsProfitWithdraw) {
    this.investorsProfitWithdraw = investorsProfitWithdraw;
    return this;
  }

	/**
	 * Get investorsDeposit
	 * @return investorsDeposit
  **/
  @Schema(description = "")
  public Double getInvestorsDeposit() {
    return investorsDeposit;
  }

  public void setInvestorsProfitWithdraw(Double investorsProfitWithdraw) {
    this.investorsProfitWithdraw = investorsProfitWithdraw;
  }

  public ProgramPeriodViewModel platformSuccessFee(Double platformSuccessFee) {
    this.platformSuccessFee = platformSuccessFee;
    return this;
  }

	/**
	 * Get investorsWithdraw
	 * @return investorsWithdraw
  **/
  @Schema(description = "")
  public Double getInvestorsWithdraw() {
    return investorsWithdraw;
  }

  public void setPlatformSuccessFee(Double platformSuccessFee) {
    this.platformSuccessFee = platformSuccessFee;
  }

  public ProgramPeriodViewModel managerStatistic(ManagerFinancialStatistic managerStatistic) {
    this.managerStatistic = managerStatistic;
    return this;
  }

	/**
	 * Get investorsProfitWithdraw
	 * @return investorsProfitWithdraw
  **/
  @Schema(description = "")
  public Double getInvestorsProfitWithdraw() {
    return investorsProfitWithdraw;
  }

  public void setManagerStatistic(ManagerFinancialStatistic managerStatistic) {
    this.managerStatistic = managerStatistic;
  }

  public ProgramPeriodViewModel investorStatistic(InvestorFinancialStatistic investorStatistic) {
    this.investorStatistic = investorStatistic;
    return this;
  }

	/**
	 * Get platformSuccessFee
	 * @return platformSuccessFee
  **/
  @Schema(description = "")
  public Double getPlatformSuccessFee() {
    return platformSuccessFee;
  }

  public void setInvestorStatistic(InvestorFinancialStatistic investorStatistic) {
    this.investorStatistic = investorStatistic;
  }

	/**
	 * Get managerStatistic
	 * @return managerStatistic
  **/
  @Schema(description = "")
  public ManagerFinancialStatistic getManagerStatistic() {
    return managerStatistic;
  }

  @Override
  public int hashCode() {
    return Objects.hash(dateFrom, dateTo, periodLength, status, number, profit, profitPercent, balance, investors, managerDeposit, managerWithdraw, managerCommissionRebate, investorsDeposit, investorsWithdraw, investorsProfitWithdraw, platformSuccessFee, managerStatistic, investorStatistic);
  }

	/**
	 * Get investorStatistic
	 * @return investorStatistic
  **/
  @Schema(description = "")
  public InvestorFinancialStatistic getInvestorStatistic() {
    return investorStatistic;
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProgramPeriodViewModel programPeriodViewModel = (ProgramPeriodViewModel) o;
	  return Objects.equals(this.dateFrom, programPeriodViewModel.dateFrom) &&
			  Objects.equals(this.dateTo, programPeriodViewModel.dateTo) &&
			  Objects.equals(this.periodLength, programPeriodViewModel.periodLength) &&
			  Objects.equals(this.status, programPeriodViewModel.status) &&
			  Objects.equals(this.number, programPeriodViewModel.number) &&
			  Objects.equals(this.profit, programPeriodViewModel.profit) &&
			  Objects.equals(this.profitPercent, programPeriodViewModel.profitPercent) &&
			  Objects.equals(this.balance, programPeriodViewModel.balance) &&
			  Objects.equals(this.investors, programPeriodViewModel.investors) &&
			  Objects.equals(this.managerDeposit, programPeriodViewModel.managerDeposit) &&
			  Objects.equals(this.managerWithdraw, programPeriodViewModel.managerWithdraw) &&
			  Objects.equals(this.managerCommissionRebate, programPeriodViewModel.managerCommissionRebate) &&
			  Objects.equals(this.investorsDeposit, programPeriodViewModel.investorsDeposit) &&
			  Objects.equals(this.investorsWithdraw, programPeriodViewModel.investorsWithdraw) &&
			  Objects.equals(this.investorsProfitWithdraw, programPeriodViewModel.investorsProfitWithdraw) &&
			  Objects.equals(this.platformSuccessFee, programPeriodViewModel.platformSuccessFee) &&
			  Objects.equals(this.managerStatistic, programPeriodViewModel.managerStatistic) &&
			  Objects.equals(this.investorStatistic, programPeriodViewModel.investorStatistic);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProgramPeriodViewModel {\n");

    sb.append("    dateFrom: ").append(toIndentedString(dateFrom)).append("\n");
    sb.append("    dateTo: ").append(toIndentedString(dateTo)).append("\n");
    sb.append("    periodLength: ").append(toIndentedString(periodLength)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    number: ").append(toIndentedString(number)).append("\n");
    sb.append("    profit: ").append(toIndentedString(profit)).append("\n");
    sb.append("    profitPercent: ").append(toIndentedString(profitPercent)).append("\n");
    sb.append("    balance: ").append(toIndentedString(balance)).append("\n");
    sb.append("    investors: ").append(toIndentedString(investors)).append("\n");
    sb.append("    managerDeposit: ").append(toIndentedString(managerDeposit)).append("\n");
    sb.append("    managerWithdraw: ").append(toIndentedString(managerWithdraw)).append("\n");
    sb.append("    managerCommissionRebate: ").append(toIndentedString(managerCommissionRebate)).append("\n");
    sb.append("    investorsDeposit: ").append(toIndentedString(investorsDeposit)).append("\n");
    sb.append("    investorsWithdraw: ").append(toIndentedString(investorsWithdraw)).append("\n");
    sb.append("    investorsProfitWithdraw: ").append(toIndentedString(investorsProfitWithdraw)).append("\n");
    sb.append("    platformSuccessFee: ").append(toIndentedString(platformSuccessFee)).append("\n");
    sb.append("    managerStatistic: ").append(toIndentedString(managerStatistic)).append("\n");
    sb.append("    investorStatistic: ").append(toIndentedString(investorStatistic)).append("\n");
    sb.append("}");
    return sb.toString();
  }

	public void writeToParcel(Parcel out, int flags) {
		out.writeValue(dateFrom);
		out.writeValue(dateTo);
		out.writeValue(periodLength);
		out.writeValue(status);
		out.writeValue(number);
		out.writeValue(profit);
		out.writeValue(profitPercent);
		out.writeValue(balance);
		out.writeValue(investors);
		out.writeValue(managerDeposit);
		out.writeValue(managerWithdraw);
		out.writeValue(managerCommissionRebate);
		out.writeValue(investorsDeposit);
		out.writeValue(investorsWithdraw);
		out.writeValue(investorsProfitWithdraw);
		out.writeValue(platformSuccessFee);
		out.writeValue(managerStatistic);
		out.writeValue(investorStatistic);
	}

	public int describeContents() {
		return 0;
	}
}
