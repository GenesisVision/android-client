/*
 * Core API v1.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import com.google.gson.annotations.SerializedName;

import java.util.Objects;

import io.swagger.annotations.ApiModelProperty;

/**
 * ProgramDetailsListStatistic
 */

public class ProgramDetailsListStatistic
{
	@SerializedName("balanceBase")
	private AmountWithCurrency balanceBase = null;

	@SerializedName("balanceGVT")
	private AmountWithCurrency balanceGVT = null;

	@SerializedName("balanceSecondary")
	private AmountWithCurrency balanceSecondary = null;

	@SerializedName("currentValue")
	private Double currentValue = null;

	@SerializedName("profitPercent")
	private Double profitPercent = null;

	@SerializedName("profitValue")
	private Double profitValue = null;

	@SerializedName("drawdownPercent")
	private Double drawdownPercent = null;

	@SerializedName("investorsCount")
	private Integer investorsCount = null;

	@SerializedName("tradesCount")
	private Integer tradesCount = null;

	public ProgramDetailsListStatistic balanceBase(AmountWithCurrency balanceBase) {
		this.balanceBase = balanceBase;
		return this;
	}

	/**
	 * Get balanceBase
	 *
	 * @return balanceBase
	 **/
	@ApiModelProperty(value = "")
	public AmountWithCurrency getBalanceBase() {
		return balanceBase;
	}

	public void setBalanceBase(AmountWithCurrency balanceBase) {
		this.balanceBase = balanceBase;
	}

	public ProgramDetailsListStatistic balanceGVT(AmountWithCurrency balanceGVT) {
		this.balanceGVT = balanceGVT;
		return this;
	}

	/**
	 * Get balanceGVT
	 *
	 * @return balanceGVT
	 **/
	@ApiModelProperty(value = "")
	public AmountWithCurrency getBalanceGVT() {
		return balanceGVT;
	}

	public void setBalanceGVT(AmountWithCurrency balanceGVT) {
		this.balanceGVT = balanceGVT;
	}

	public ProgramDetailsListStatistic balanceSecondary(AmountWithCurrency balanceSecondary) {
		this.balanceSecondary = balanceSecondary;
		return this;
	}

	/**
	 * Get balanceSecondary
	 *
	 * @return balanceSecondary
	 **/
	@ApiModelProperty(value = "")
	public AmountWithCurrency getBalanceSecondary() {
		return balanceSecondary;
	}

	public void setBalanceSecondary(AmountWithCurrency balanceSecondary) {
		this.balanceSecondary = balanceSecondary;
	}

	public ProgramDetailsListStatistic currentValue(Double currentValue) {
		this.currentValue = currentValue;
		return this;
	}

	/**
	 * Get currentValue
	 *
	 * @return currentValue
	 **/
	@ApiModelProperty(value = "")
	public Double getCurrentValue() {
		return currentValue;
	}

	public void setCurrentValue(Double currentValue) {
		this.currentValue = currentValue;
	}

	public ProgramDetailsListStatistic profitPercent(Double profitPercent) {
		this.profitPercent = profitPercent;
		return this;
	}

	/**
	 * Get profitPercent
	 *
	 * @return profitPercent
	 **/
	@ApiModelProperty(value = "")
	public Double getProfitPercent() {
		return profitPercent;
	}

	public void setProfitPercent(Double profitPercent) {
		this.profitPercent = profitPercent;
	}

	public ProgramDetailsListStatistic profitValue(Double profitValue) {
		this.profitValue = profitValue;
		return this;
	}

	/**
	 * Get profitValue
	 *
	 * @return profitValue
	 **/
	@ApiModelProperty(value = "")
	public Double getProfitValue() {
		return profitValue;
	}

	public void setProfitValue(Double profitValue) {
		this.profitValue = profitValue;
	}

	public ProgramDetailsListStatistic drawdownPercent(Double drawdownPercent) {
		this.drawdownPercent = drawdownPercent;
		return this;
	}

	/**
	 * Get drawdownPercent
	 *
	 * @return drawdownPercent
	 **/
	@ApiModelProperty(value = "")
	public Double getDrawdownPercent() {
		return drawdownPercent;
	}

	public void setDrawdownPercent(Double drawdownPercent) {
		this.drawdownPercent = drawdownPercent;
	}

	public ProgramDetailsListStatistic investorsCount(Integer investorsCount) {
		this.investorsCount = investorsCount;
		return this;
	}

	/**
	 * Get investorsCount
	 *
	 * @return investorsCount
	 **/
	@ApiModelProperty(value = "")
	public Integer getInvestorsCount() {
		return investorsCount;
	}

	public void setInvestorsCount(Integer investorsCount) {
		this.investorsCount = investorsCount;
	}

	public ProgramDetailsListStatistic tradesCount(Integer tradesCount) {
		this.tradesCount = tradesCount;
		return this;
	}

	/**
	 * Get tradesCount
	 *
	 * @return tradesCount
	 **/
	@ApiModelProperty(value = "")
	public Integer getTradesCount() {
		return tradesCount;
	}

	public void setTradesCount(Integer tradesCount) {
		this.tradesCount = tradesCount;
	}


	@Override
	public boolean equals(java.lang.Object o) {
		if (this == o) {
			return true;
		}
		if (o == null || getClass() != o.getClass()) {
			return false;
		}
		ProgramDetailsListStatistic programDetailsListStatistic = (ProgramDetailsListStatistic) o;
		return Objects.equals(this.balanceBase, programDetailsListStatistic.balanceBase) &&
				Objects.equals(this.balanceGVT, programDetailsListStatistic.balanceGVT) &&
				Objects.equals(this.balanceSecondary, programDetailsListStatistic.balanceSecondary) &&
				Objects.equals(this.currentValue, programDetailsListStatistic.currentValue) &&
				Objects.equals(this.profitPercent, programDetailsListStatistic.profitPercent) &&
				Objects.equals(this.profitValue, programDetailsListStatistic.profitValue) &&
				Objects.equals(this.drawdownPercent, programDetailsListStatistic.drawdownPercent) &&
				Objects.equals(this.investorsCount, programDetailsListStatistic.investorsCount) &&
				Objects.equals(this.tradesCount, programDetailsListStatistic.tradesCount);
	}

	@Override
	public int hashCode() {
		return Objects.hash(balanceBase, balanceGVT, balanceSecondary, currentValue, profitPercent, profitValue, drawdownPercent, investorsCount, tradesCount);
	}


	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class ProgramDetailsListStatistic {\n");

		sb.append("    balanceBase: ").append(toIndentedString(balanceBase)).append("\n");
		sb.append("    balanceGVT: ").append(toIndentedString(balanceGVT)).append("\n");
		sb.append("    balanceSecondary: ").append(toIndentedString(balanceSecondary)).append("\n");
		sb.append("    currentValue: ").append(toIndentedString(currentValue)).append("\n");
		sb.append("    profitPercent: ").append(toIndentedString(profitPercent)).append("\n");
		sb.append("    profitValue: ").append(toIndentedString(profitValue)).append("\n");
		sb.append("    drawdownPercent: ").append(toIndentedString(drawdownPercent)).append("\n");
		sb.append("    investorsCount: ").append(toIndentedString(investorsCount)).append("\n");
		sb.append("    tradesCount: ").append(toIndentedString(tradesCount)).append("\n");
		sb.append("}");
		return sb.toString();
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private String toIndentedString(java.lang.Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n    ");
	}

}

