/*
 * Core API v2.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import android.os.Parcel;
import android.os.Parcelable;

import com.google.gson.annotations.SerializedName;

import org.joda.time.DateTime;

import java.util.Objects;

import io.swagger.v3.oas.annotations.media.Schema;

/**
 * BinanceRawBookPrice
 */


public class BinanceRawBookPrice implements Parcelable
{
	@SerializedName("symbol")
	private String symbol = null;

	@SerializedName("bestBidPrice")
	private Double bestBidPrice = null;

	@SerializedName("bestBidQuantity")
	private Double bestBidQuantity = null;

	@SerializedName("bestAskPrice")
	private Double bestAskPrice = null;

	@SerializedName("bestAskQuantity")
	private Double bestAskQuantity = null;

	@SerializedName("timestamp")
	private DateTime timestamp = null;

	public BinanceRawBookPrice() {
	}

	public BinanceRawBookPrice symbol(String symbol) {
		this.symbol = symbol;
		return this;
	}

	/**
	 * Get symbol
	 *
	 * @return symbol
	 **/
	@Schema(description = "")
	public String getSymbol() {
		return symbol;
	}

	public void setSymbol(String symbol) {
		this.symbol = symbol;
	}

	public BinanceRawBookPrice bestBidPrice(Double bestBidPrice) {
		this.bestBidPrice = bestBidPrice;
		return this;
	}

	/**
	 * Get bestBidPrice
	 *
	 * @return bestBidPrice
	 **/
	@Schema(description = "")
	public Double getBestBidPrice() {
		return bestBidPrice;
	}

	public void setBestBidPrice(Double bestBidPrice) {
		this.bestBidPrice = bestBidPrice;
	}

	public BinanceRawBookPrice bestBidQuantity(Double bestBidQuantity) {
		this.bestBidQuantity = bestBidQuantity;
		return this;
	}

	/**
	 * Get bestBidQuantity
	 *
	 * @return bestBidQuantity
	 **/
	@Schema(description = "")
	public Double getBestBidQuantity() {
		return bestBidQuantity;
	}

	public void setBestBidQuantity(Double bestBidQuantity) {
		this.bestBidQuantity = bestBidQuantity;
	}

	public BinanceRawBookPrice bestAskPrice(Double bestAskPrice) {
		this.bestAskPrice = bestAskPrice;
		return this;
	}

	/**
	 * Get bestAskPrice
	 *
	 * @return bestAskPrice
	 **/
	@Schema(description = "")
	public Double getBestAskPrice() {
		return bestAskPrice;
	}

	public void setBestAskPrice(Double bestAskPrice) {
		this.bestAskPrice = bestAskPrice;
	}

	public BinanceRawBookPrice bestAskQuantity(Double bestAskQuantity) {
		this.bestAskQuantity = bestAskQuantity;
		return this;
	}

	/**
	 * Get bestAskQuantity
	 *
	 * @return bestAskQuantity
	 **/
	@Schema(description = "")
	public Double getBestAskQuantity() {
		return bestAskQuantity;
	}

	public void setBestAskQuantity(Double bestAskQuantity) {
		this.bestAskQuantity = bestAskQuantity;
	}

	public BinanceRawBookPrice timestamp(DateTime timestamp) {
		this.timestamp = timestamp;
		return this;
	}

	/**
	 * Get timestamp
	 *
	 * @return timestamp
	 **/
	@Schema(description = "")
	public DateTime getTimestamp() {
		return timestamp;
	}

	public void setTimestamp(DateTime timestamp) {
		this.timestamp = timestamp;
	}


	@Override
	public boolean equals(java.lang.Object o) {
		if (this == o) {
			return true;
		}
		if (o == null || getClass() != o.getClass()) {
			return false;
		}
		BinanceRawBookPrice binanceRawBookPrice = (BinanceRawBookPrice) o;
		return Objects.equals(this.symbol, binanceRawBookPrice.symbol) &&
				Objects.equals(this.bestBidPrice, binanceRawBookPrice.bestBidPrice) &&
				Objects.equals(this.bestBidQuantity, binanceRawBookPrice.bestBidQuantity) &&
				Objects.equals(this.bestAskPrice, binanceRawBookPrice.bestAskPrice) &&
				Objects.equals(this.bestAskQuantity, binanceRawBookPrice.bestAskQuantity) &&
				Objects.equals(this.timestamp, binanceRawBookPrice.timestamp);
	}

	@Override
	public int hashCode() {
		return Objects.hash(symbol, bestBidPrice, bestBidQuantity, bestAskPrice, bestAskQuantity, timestamp);
	}


	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class BinanceRawBookPrice {\n");

		sb.append("    symbol: ").append(toIndentedString(symbol)).append("\n");
		sb.append("    bestBidPrice: ").append(toIndentedString(bestBidPrice)).append("\n");
		sb.append("    bestBidQuantity: ").append(toIndentedString(bestBidQuantity)).append("\n");
		sb.append("    bestAskPrice: ").append(toIndentedString(bestAskPrice)).append("\n");
		sb.append("    bestAskQuantity: ").append(toIndentedString(bestAskQuantity)).append("\n");
		sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
		sb.append("}");
		return sb.toString();
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private String toIndentedString(java.lang.Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n    ");
	}


	public void writeToParcel(Parcel out, int flags) {
		out.writeValue(symbol);
		out.writeValue(bestBidPrice);
		out.writeValue(bestBidQuantity);
		out.writeValue(bestAskPrice);
		out.writeValue(bestAskQuantity);
		out.writeValue(timestamp);
	}

	public static final Parcelable.Creator<BinanceRawBookPrice> CREATOR = new Parcelable.Creator<BinanceRawBookPrice>()
	{
		public BinanceRawBookPrice createFromParcel(Parcel in) {
			return new BinanceRawBookPrice(in);
		}

		public BinanceRawBookPrice[] newArray(int size) {
			return new BinanceRawBookPrice[size];
		}
	};

	public int describeContents() {
		return 0;
	}

	BinanceRawBookPrice(Parcel in) {
		symbol = (String) in.readValue(null);
		bestBidPrice = (Double) in.readValue(null);
		bestBidQuantity = (Double) in.readValue(null);
		bestAskPrice = (Double) in.readValue(null);
		bestAskQuantity = (Double) in.readValue(null);
		timestamp = (DateTime) in.readValue(DateTime.class.getClassLoader());
	}
}
