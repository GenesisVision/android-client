/*
 * Core API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

import org.joda.time.DateTime;

import java.io.IOException;
import java.util.Objects;
import java.util.UUID;

import io.swagger.annotations.ApiModelProperty;

/**
 * ManagerRequest
 */

public class ManagerRequest
{
	@SerializedName("userId")
	private UUID userId = null;

	@SerializedName("requestId")
	private UUID requestId = null;

	@SerializedName("name")
	private String name = null;

	@SerializedName("email")
	private String email = null;

	@SerializedName("currency")
	private CurrencyEnum currency = null;

	@SerializedName("password")
	private String password = null;

	@SerializedName("depositAmount")
	private Double depositAmount = null;

	@SerializedName("leverage")
	private Integer leverage = null;

	@SerializedName("programDateFrom")
	private DateTime programDateFrom = null;

	public ManagerRequest userId(UUID userId) {
		this.userId = userId;
		return this;
	}

	/**
	 * Get userId
	 *
	 * @return userId
	 **/
	@ApiModelProperty(value = "")
	public UUID getUserId() {
		return userId;
	}

	public void setUserId(UUID userId) {
		this.userId = userId;
	}

	public ManagerRequest requestId(UUID requestId) {
		this.requestId = requestId;
		return this;
	}

	/**
	 * Get requestId
	 *
	 * @return requestId
	 **/
	@ApiModelProperty(value = "")
	public UUID getRequestId() {
		return requestId;
	}

	public void setRequestId(UUID requestId) {
		this.requestId = requestId;
	}

	public ManagerRequest name(String name) {
		this.name = name;
		return this;
	}

	/**
	 * Get name
	 *
	 * @return name
	 **/
	@ApiModelProperty(value = "")
	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public ManagerRequest email(String email) {
		this.email = email;
		return this;
	}

	/**
	 * Get email
	 *
	 * @return email
	 **/
	@ApiModelProperty(value = "")
	public String getEmail() {
		return email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	public ManagerRequest currency(CurrencyEnum currency) {
		this.currency = currency;
		return this;
	}

	/**
	 * Get currency
	 *
	 * @return currency
	 **/
	@ApiModelProperty(value = "")
	public CurrencyEnum getCurrency() {
		return currency;
	}

	public void setCurrency(CurrencyEnum currency) {
		this.currency = currency;
	}

	public ManagerRequest password(String password) {
		this.password = password;
		return this;
	}

	/**
	 * Get password
	 *
	 * @return password
	 **/
	@ApiModelProperty(value = "")
	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public ManagerRequest depositAmount(Double depositAmount) {
		this.depositAmount = depositAmount;
		return this;
	}

	/**
	 * Get depositAmount
	 *
	 * @return depositAmount
	 **/
	@ApiModelProperty(value = "")
	public Double getDepositAmount() {
		return depositAmount;
	}

	public void setDepositAmount(Double depositAmount) {
		this.depositAmount = depositAmount;
	}

	public ManagerRequest leverage(Integer leverage) {
		this.leverage = leverage;
		return this;
	}

	/**
	 * Get leverage
	 *
	 * @return leverage
	 **/
	@ApiModelProperty(value = "")
	public Integer getLeverage() {
		return leverage;
	}

	public void setLeverage(Integer leverage) {
		this.leverage = leverage;
	}

	public ManagerRequest programDateFrom(DateTime programDateFrom) {
		this.programDateFrom = programDateFrom;
		return this;
	}

	/**
	 * Get programDateFrom
	 *
	 * @return programDateFrom
	 **/
	@ApiModelProperty(value = "")
	public DateTime getProgramDateFrom() {
		return programDateFrom;
	}

	public void setProgramDateFrom(DateTime programDateFrom) {
		this.programDateFrom = programDateFrom;
	}

	@Override
	public boolean equals(java.lang.Object o) {
		if (this == o) {
			return true;
		}
		if (o == null || getClass() != o.getClass()) {
			return false;
		}
		ManagerRequest managerRequest = (ManagerRequest) o;
		return Objects.equals(this.userId, managerRequest.userId) &&
				Objects.equals(this.requestId, managerRequest.requestId) &&
				Objects.equals(this.name, managerRequest.name) &&
				Objects.equals(this.email, managerRequest.email) &&
				Objects.equals(this.currency, managerRequest.currency) &&
				Objects.equals(this.password, managerRequest.password) &&
				Objects.equals(this.depositAmount, managerRequest.depositAmount) &&
				Objects.equals(this.leverage, managerRequest.leverage) &&
				Objects.equals(this.programDateFrom, managerRequest.programDateFrom);
	}

	@Override
	public int hashCode() {
		return Objects.hash(userId, requestId, name, email, currency, password, depositAmount, leverage, programDateFrom);
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class ManagerRequest {\n");

		sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
		sb.append("    requestId: ").append(toIndentedString(requestId)).append("\n");
		sb.append("    name: ").append(toIndentedString(name)).append("\n");
		sb.append("    email: ").append(toIndentedString(email)).append("\n");
		sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
		sb.append("    password: ").append(toIndentedString(password)).append("\n");
		sb.append("    depositAmount: ").append(toIndentedString(depositAmount)).append("\n");
		sb.append("    leverage: ").append(toIndentedString(leverage)).append("\n");
		sb.append("    programDateFrom: ").append(toIndentedString(programDateFrom)).append("\n");
		sb.append("}");
		return sb.toString();
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private String toIndentedString(java.lang.Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n    ");
	}

	/**
	 * Gets or Sets currency
	 */
	@JsonAdapter(CurrencyEnum.Adapter.class)
	public enum CurrencyEnum
	{
		UNDEFINED("Undefined"),

		GVT("GVT"),

		ETH("ETH"),

		BTC("BTC"),

		ADA("ADA"),

		USD("USD"),

		EUR("EUR");

		public static CurrencyEnum fromValue(String text) {
			for (CurrencyEnum b : CurrencyEnum.values()) {
				if (String.valueOf(b.value).equals(text)) {
					return b;
				}
			}
			return null;
		}

		private String value;

		CurrencyEnum(String value) {
			this.value = value;
		}

		public String getValue() {
			return value;
		}

		@Override
		public String toString() {
			return String.valueOf(value);
		}

		public static class Adapter extends TypeAdapter<CurrencyEnum>
		{
			@Override
			public void write(final JsonWriter jsonWriter, final CurrencyEnum enumeration) throws IOException {
				jsonWriter.value(enumeration.getValue());
			}

			@Override
			public CurrencyEnum read(final JsonReader jsonReader) throws IOException {
				String value = jsonReader.nextString();
				return CurrencyEnum.fromValue(String.valueOf(value));
			}
		}
	}

}

