/*
 * Core API v2.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import android.os.Parcel;
import android.os.Parcelable;

import com.google.gson.annotations.SerializedName;

import java.util.Objects;
import java.util.UUID;

import io.swagger.v3.oas.annotations.media.Schema;

/**
 * MakeExchangeProgram
 */


public class MakeExchangeProgram implements Parcelable
{
	public static final Parcelable.Creator<MakeExchangeProgram> CREATOR = new Parcelable.Creator<MakeExchangeProgram>()
	{
		public MakeExchangeProgram createFromParcel(Parcel in) {
			return new MakeExchangeProgram(in);
		}

		public MakeExchangeProgram[] newArray(int size) {
			return new MakeExchangeProgram[size];
		}
	};

	@SerializedName("depositAmount")
	private Double depositAmount = null;

	@SerializedName("depositWalletId")
	private UUID depositWalletId = null;

	@SerializedName("brokerAccountTypeId")
	private UUID brokerAccountTypeId = null;

	@SerializedName("title")
	private String title = null;

	@SerializedName("description")
	private String description = null;

	@SerializedName("logo")
	private String logo = null;

	@SerializedName("currency")
	private Currency currency = null;

	@SerializedName("hourProcessing")
	private Integer hourProcessing = null;

	@SerializedName("isProcessingRealTime")
	private Boolean isProcessingRealTime = null;

	@SerializedName("tradesDelay")
	private TradesDelay tradesDelay = null;

	@SerializedName("managementFee")
	private Double managementFee = null;

	@SerializedName("successFee")
	private Double successFee = null;

	@SerializedName("investmentLimit")
	private Double investmentLimit = null;

	public MakeExchangeProgram() {
	}

	MakeExchangeProgram(Parcel in) {
		depositAmount = (Double) in.readValue(null);
		depositWalletId = (UUID) in.readValue(UUID.class.getClassLoader());
		brokerAccountTypeId = (UUID) in.readValue(UUID.class.getClassLoader());
		title = (String) in.readValue(null);
		description = (String) in.readValue(null);
		logo = (String) in.readValue(null);
		currency = (Currency) in.readValue(Currency.class.getClassLoader());
		hourProcessing = (Integer) in.readValue(null);
		isProcessingRealTime = (Boolean) in.readValue(null);
		tradesDelay = (TradesDelay) in.readValue(TradesDelay.class.getClassLoader());
		managementFee = (Double) in.readValue(null);
		successFee = (Double) in.readValue(null);
		investmentLimit = (Double) in.readValue(null);
	}

	public MakeExchangeProgram depositAmount(Double depositAmount) {
		this.depositAmount = depositAmount;
		return this;
	}

	/**
	 * Get depositAmount
	 *
	 * @return depositAmount
	 **/
	@Schema(description = "")
	public Double getDepositAmount() {
		return depositAmount;
	}

	public void setDepositAmount(Double depositAmount) {
		this.depositAmount = depositAmount;
	}

	public MakeExchangeProgram depositWalletId(UUID depositWalletId) {
		this.depositWalletId = depositWalletId;
		return this;
	}

	/**
	 * Get depositWalletId
	 *
	 * @return depositWalletId
	 **/
	@Schema(description = "")
	public UUID getDepositWalletId() {
		return depositWalletId;
	}

	public void setDepositWalletId(UUID depositWalletId) {
		this.depositWalletId = depositWalletId;
	}

	public MakeExchangeProgram brokerAccountTypeId(UUID brokerAccountTypeId) {
		this.brokerAccountTypeId = brokerAccountTypeId;
		return this;
	}

	/**
	 * Get brokerAccountTypeId
	 *
	 * @return brokerAccountTypeId
	 **/
	@Schema(description = "")
	public UUID getBrokerAccountTypeId() {
		return brokerAccountTypeId;
	}

	public void setBrokerAccountTypeId(UUID brokerAccountTypeId) {
		this.brokerAccountTypeId = brokerAccountTypeId;
	}

	public MakeExchangeProgram title(String title) {
		this.title = title;
		return this;
	}

	/**
	 * Get title
	 *
	 * @return title
	 **/
	@Schema(description = "")
	public String getTitle() {
		return title;
	}

	public void setTitle(String title) {
		this.title = title;
	}

	public MakeExchangeProgram description(String description) {
		this.description = description;
		return this;
	}

	/**
	 * Get description
	 *
	 * @return description
	 **/
	@Schema(description = "")
	public String getDescription() {
		return description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	public MakeExchangeProgram logo(String logo) {
		this.logo = logo;
		return this;
	}

	/**
	 * Get logo
	 *
	 * @return logo
	 **/
	@Schema(description = "")
	public String getLogo() {
		return logo;
	}

	public void setLogo(String logo) {
		this.logo = logo;
	}

	public MakeExchangeProgram currency(Currency currency) {
		this.currency = currency;
		return this;
	}

	/**
	 * Get currency
	 *
	 * @return currency
	 **/
	@Schema(description = "")
	public Currency getCurrency() {
		return currency;
	}

	public void setCurrency(Currency currency) {
		this.currency = currency;
	}

	public MakeExchangeProgram hourProcessing(Integer hourProcessing) {
		this.hourProcessing = hourProcessing;
		return this;
	}

	/**
	 * Get hourProcessing
	 *
	 * @return hourProcessing
	 **/
	@Schema(description = "")
	public Integer getHourProcessing() {
		return hourProcessing;
	}

	public void setHourProcessing(Integer hourProcessing) {
		this.hourProcessing = hourProcessing;
	}

	public MakeExchangeProgram isProcessingRealTime(Boolean isProcessingRealTime) {
		this.isProcessingRealTime = isProcessingRealTime;
		return this;
	}

	/**
	 * Get isProcessingRealTime
	 *
	 * @return isProcessingRealTime
	 **/
	@Schema(description = "")
	public Boolean isIsProcessingRealTime() {
		return isProcessingRealTime;
	}

	public void setIsProcessingRealTime(Boolean isProcessingRealTime) {
		this.isProcessingRealTime = isProcessingRealTime;
	}

	public MakeExchangeProgram tradesDelay(TradesDelay tradesDelay) {
		this.tradesDelay = tradesDelay;
		return this;
	}

	/**
	 * Get tradesDelay
	 *
	 * @return tradesDelay
	 **/
	@Schema(description = "")
	public TradesDelay getTradesDelay() {
		return tradesDelay;
	}

	public void setTradesDelay(TradesDelay tradesDelay) {
		this.tradesDelay = tradesDelay;
	}

	public MakeExchangeProgram managementFee(Double managementFee) {
		this.managementFee = managementFee;
		return this;
	}

	/**
	 * Get managementFee
	 *
	 * @return managementFee
	 **/
	@Schema(description = "")
	public Double getManagementFee() {
		return managementFee;
	}

	public void setManagementFee(Double managementFee) {
		this.managementFee = managementFee;
	}

	public MakeExchangeProgram successFee(Double successFee) {
		this.successFee = successFee;
		return this;
	}

	/**
	 * Get successFee
	 *
	 * @return successFee
	 **/
	@Schema(description = "")
	public Double getSuccessFee() {
		return successFee;
	}

	public void setSuccessFee(Double successFee) {
		this.successFee = successFee;
	}

	public MakeExchangeProgram investmentLimit(Double investmentLimit) {
		this.investmentLimit = investmentLimit;
		return this;
	}

	/**
	 * Get investmentLimit
	 *
	 * @return investmentLimit
	 **/
	@Schema(description = "")
	public Double getInvestmentLimit() {
		return investmentLimit;
	}

	public void setInvestmentLimit(Double investmentLimit) {
		this.investmentLimit = investmentLimit;
	}

	@Override
	public boolean equals(java.lang.Object o) {
		if (this == o) {
			return true;
		}
		if (o == null || getClass() != o.getClass()) {
			return false;
		}
		MakeExchangeProgram makeExchangeProgram = (MakeExchangeProgram) o;
		return Objects.equals(this.depositAmount, makeExchangeProgram.depositAmount) &&
				Objects.equals(this.depositWalletId, makeExchangeProgram.depositWalletId) &&
				Objects.equals(this.brokerAccountTypeId, makeExchangeProgram.brokerAccountTypeId) &&
				Objects.equals(this.title, makeExchangeProgram.title) &&
				Objects.equals(this.description, makeExchangeProgram.description) &&
				Objects.equals(this.logo, makeExchangeProgram.logo) &&
				Objects.equals(this.currency, makeExchangeProgram.currency) &&
				Objects.equals(this.hourProcessing, makeExchangeProgram.hourProcessing) &&
				Objects.equals(this.isProcessingRealTime, makeExchangeProgram.isProcessingRealTime) &&
				Objects.equals(this.tradesDelay, makeExchangeProgram.tradesDelay) &&
				Objects.equals(this.managementFee, makeExchangeProgram.managementFee) &&
				Objects.equals(this.successFee, makeExchangeProgram.successFee) &&
				Objects.equals(this.investmentLimit, makeExchangeProgram.investmentLimit);
	}

	@Override
	public int hashCode() {
		return Objects.hash(depositAmount, depositWalletId, brokerAccountTypeId, title, description, logo, currency, hourProcessing, isProcessingRealTime, tradesDelay, managementFee, successFee, investmentLimit);
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class MakeExchangeProgram {\n");

		sb.append("    depositAmount: ").append(toIndentedString(depositAmount)).append("\n");
		sb.append("    depositWalletId: ").append(toIndentedString(depositWalletId)).append("\n");
		sb.append("    brokerAccountTypeId: ").append(toIndentedString(brokerAccountTypeId)).append("\n");
		sb.append("    title: ").append(toIndentedString(title)).append("\n");
		sb.append("    description: ").append(toIndentedString(description)).append("\n");
		sb.append("    logo: ").append(toIndentedString(logo)).append("\n");
		sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
		sb.append("    hourProcessing: ").append(toIndentedString(hourProcessing)).append("\n");
		sb.append("    isProcessingRealTime: ").append(toIndentedString(isProcessingRealTime)).append("\n");
		sb.append("    tradesDelay: ").append(toIndentedString(tradesDelay)).append("\n");
		sb.append("    managementFee: ").append(toIndentedString(managementFee)).append("\n");
		sb.append("    successFee: ").append(toIndentedString(successFee)).append("\n");
		sb.append("    investmentLimit: ").append(toIndentedString(investmentLimit)).append("\n");
		sb.append("}");
		return sb.toString();
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private String toIndentedString(java.lang.Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n    ");
	}

	public void writeToParcel(Parcel out, int flags) {
		out.writeValue(depositAmount);
		out.writeValue(depositWalletId);
		out.writeValue(brokerAccountTypeId);
		out.writeValue(title);
		out.writeValue(description);
		out.writeValue(logo);
		out.writeValue(currency);
		out.writeValue(hourProcessing);
		out.writeValue(isProcessingRealTime);
		out.writeValue(tradesDelay);
		out.writeValue(managementFee);
		out.writeValue(successFee);
		out.writeValue(investmentLimit);
	}

	public int describeContents() {
		return 0;
	}
}
