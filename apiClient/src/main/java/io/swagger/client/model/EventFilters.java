/*
 * Core API v2.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.EventInvestingItemFilters;
import io.swagger.client.model.EventTradingItemFilters;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import android.os.Parcelable;
import android.os.Parcel;
/**
 * EventFilters
 */


public class EventFilters implements Parcelable {
  @SerializedName("investmentHistory")
  private EventInvestingItemFilters investmentHistory = null;

  @SerializedName("tradingHistory")
  private EventTradingItemFilters tradingHistory = null;

  public EventFilters() {
  }
  public EventFilters investmentHistory(EventInvestingItemFilters investmentHistory) {
    this.investmentHistory = investmentHistory;
    return this;
  }

   /**
   * Get investmentHistory
   * @return investmentHistory
  **/
  @Schema(description = "")
  public EventInvestingItemFilters getInvestmentHistory() {
    return investmentHistory;
  }

  public void setInvestmentHistory(EventInvestingItemFilters investmentHistory) {
    this.investmentHistory = investmentHistory;
  }

  public EventFilters tradingHistory(EventTradingItemFilters tradingHistory) {
    this.tradingHistory = tradingHistory;
    return this;
  }

   /**
   * Get tradingHistory
   * @return tradingHistory
  **/
  @Schema(description = "")
  public EventTradingItemFilters getTradingHistory() {
    return tradingHistory;
  }

  public void setTradingHistory(EventTradingItemFilters tradingHistory) {
    this.tradingHistory = tradingHistory;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EventFilters eventFilters = (EventFilters) o;
    return Objects.equals(this.investmentHistory, eventFilters.investmentHistory) &&
        Objects.equals(this.tradingHistory, eventFilters.tradingHistory);
  }

  @Override
  public int hashCode() {
    return Objects.hash(investmentHistory, tradingHistory);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EventFilters {\n");
    
    sb.append("    investmentHistory: ").append(toIndentedString(investmentHistory)).append("\n");
    sb.append("    tradingHistory: ").append(toIndentedString(tradingHistory)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public void writeToParcel(Parcel out, int flags) {
    out.writeValue(investmentHistory);
    out.writeValue(tradingHistory);
  }

  EventFilters(Parcel in) {
    investmentHistory = (EventInvestingItemFilters)in.readValue(EventInvestingItemFilters.class.getClassLoader());
    tradingHistory = (EventTradingItemFilters)in.readValue(EventTradingItemFilters.class.getClassLoader());
  }

  public int describeContents() {
    return 0;
  }

  public static final Parcelable.Creator<EventFilters> CREATOR = new Parcelable.Creator<EventFilters>() {
    public EventFilters createFromParcel(Parcel in) {
      return new EventFilters(in);
    }
    public EventFilters[] newArray(int size) {
      return new EventFilters[size];
    }
  };
}
