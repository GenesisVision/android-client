/*
 * Core API v2.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import android.os.Parcel;
import android.os.Parcelable;

import com.google.gson.annotations.SerializedName;

import org.joda.time.DateTime;

import java.util.Objects;

import io.swagger.v3.oas.annotations.media.Schema;
/**
 * BinanceRawRecentTrade
 */


public class BinanceRawRecentTrade implements Parcelable {
  @SerializedName("orderId")
  private Long orderId = null;

  @SerializedName("price")
  private Double price = null;

  @SerializedName("baseQuantity")
  private Double baseQuantity = null;

  @SerializedName("quoteQuantity")
  private Double quoteQuantity = null;

  @SerializedName("tradeTime")
  private DateTime tradeTime = null;

  @SerializedName("buyerIsMaker")
  private Boolean buyerIsMaker = null;

  @SerializedName("isBestMatch")
  private Boolean isBestMatch = null;

  public BinanceRawRecentTrade() {
  }
  public BinanceRawRecentTrade orderId(Long orderId) {
    this.orderId = orderId;
    return this;
  }

   /**
   * Get orderId
   * @return orderId
  **/
  @Schema(description = "")
  public Long getOrderId() {
    return orderId;
  }

  public void setOrderId(Long orderId) {
    this.orderId = orderId;
  }

  public BinanceRawRecentTrade price(Double price) {
    this.price = price;
    return this;
  }

   /**
   * Get price
   * @return price
  **/
  @Schema(description = "")
  public Double getPrice() {
    return price;
  }

  public void setPrice(Double price) {
    this.price = price;
  }

  public BinanceRawRecentTrade baseQuantity(Double baseQuantity) {
    this.baseQuantity = baseQuantity;
    return this;
  }

   /**
   * Get baseQuantity
   * @return baseQuantity
  **/
  @Schema(description = "")
  public Double getBaseQuantity() {
    return baseQuantity;
  }

  public void setBaseQuantity(Double baseQuantity) {
    this.baseQuantity = baseQuantity;
  }

  public BinanceRawRecentTrade quoteQuantity(Double quoteQuantity) {
    this.quoteQuantity = quoteQuantity;
    return this;
  }

   /**
   * Get quoteQuantity
   * @return quoteQuantity
  **/
  @Schema(description = "")
  public Double getQuoteQuantity() {
    return quoteQuantity;
  }

  public void setQuoteQuantity(Double quoteQuantity) {
    this.quoteQuantity = quoteQuantity;
  }

  public BinanceRawRecentTrade tradeTime(DateTime tradeTime) {
    this.tradeTime = tradeTime;
    return this;
  }

   /**
   * Get tradeTime
   * @return tradeTime
  **/
  @Schema(description = "")
  public DateTime getTradeTime() {
    return tradeTime;
  }

  public void setTradeTime(DateTime tradeTime) {
    this.tradeTime = tradeTime;
  }

  public BinanceRawRecentTrade buyerIsMaker(Boolean buyerIsMaker) {
    this.buyerIsMaker = buyerIsMaker;
    return this;
  }

   /**
   * Get buyerIsMaker
   * @return buyerIsMaker
  **/
  @Schema(description = "")
  public Boolean isBuyerIsMaker() {
    return buyerIsMaker;
  }

  public void setBuyerIsMaker(Boolean buyerIsMaker) {
    this.buyerIsMaker = buyerIsMaker;
  }

  public BinanceRawRecentTrade isBestMatch(Boolean isBestMatch) {
    this.isBestMatch = isBestMatch;
    return this;
  }

   /**
   * Get isBestMatch
   * @return isBestMatch
  **/
  @Schema(description = "")
  public Boolean isIsBestMatch() {
    return isBestMatch;
  }

  public void setIsBestMatch(Boolean isBestMatch) {
    this.isBestMatch = isBestMatch;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BinanceRawRecentTrade binanceRawRecentTrade = (BinanceRawRecentTrade) o;
    return Objects.equals(this.orderId, binanceRawRecentTrade.orderId) &&
        Objects.equals(this.price, binanceRawRecentTrade.price) &&
        Objects.equals(this.baseQuantity, binanceRawRecentTrade.baseQuantity) &&
        Objects.equals(this.quoteQuantity, binanceRawRecentTrade.quoteQuantity) &&
        Objects.equals(this.tradeTime, binanceRawRecentTrade.tradeTime) &&
        Objects.equals(this.buyerIsMaker, binanceRawRecentTrade.buyerIsMaker) &&
        Objects.equals(this.isBestMatch, binanceRawRecentTrade.isBestMatch);
  }

  @Override
  public int hashCode() {
    return Objects.hash(orderId, price, baseQuantity, quoteQuantity, tradeTime, buyerIsMaker, isBestMatch);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BinanceRawRecentTrade {\n");
    
    sb.append("    orderId: ").append(toIndentedString(orderId)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    baseQuantity: ").append(toIndentedString(baseQuantity)).append("\n");
    sb.append("    quoteQuantity: ").append(toIndentedString(quoteQuantity)).append("\n");
    sb.append("    tradeTime: ").append(toIndentedString(tradeTime)).append("\n");
    sb.append("    buyerIsMaker: ").append(toIndentedString(buyerIsMaker)).append("\n");
    sb.append("    isBestMatch: ").append(toIndentedString(isBestMatch)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public void writeToParcel(Parcel out, int flags) {
    out.writeValue(orderId);
    out.writeValue(price);
    out.writeValue(baseQuantity);
    out.writeValue(quoteQuantity);
    out.writeValue(tradeTime);
    out.writeValue(buyerIsMaker);
    out.writeValue(isBestMatch);
  }

  BinanceRawRecentTrade(Parcel in) {
    orderId = (Long)in.readValue(null);
    price = (Double)in.readValue(null);
    baseQuantity = (Double)in.readValue(null);
    quoteQuantity = (Double)in.readValue(null);
    tradeTime = (DateTime)in.readValue(DateTime.class.getClassLoader());
    buyerIsMaker = (Boolean)in.readValue(null);
    isBestMatch = (Boolean)in.readValue(null);
  }

  public int describeContents() {
    return 0;
  }

  public static final Parcelable.Creator<BinanceRawRecentTrade> CREATOR = new Parcelable.Creator<BinanceRawRecentTrade>() {
    public BinanceRawRecentTrade createFromParcel(Parcel in) {
      return new BinanceRawRecentTrade(in);
    }
    public BinanceRawRecentTrade[] newArray(int size) {
      return new BinanceRawRecentTrade[size];
    }
  };
}
