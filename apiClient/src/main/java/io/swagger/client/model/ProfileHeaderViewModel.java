/*
 * Core API v1.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

import java.io.IOException;
import java.util.Objects;
import java.util.UUID;

import io.swagger.annotations.ApiModelProperty;

/**
 * ProfileHeaderViewModel
 */

public class ProfileHeaderViewModel
{
	@SerializedName("id")
	private UUID id = null;

	@SerializedName("name")
	private String name = null;

	@SerializedName("email")
	private String email = null;

	@SerializedName("avatar")
	private String avatar = null;

	@SerializedName("userType")
	private UserTypeEnum userType = null;

	@SerializedName("notificationsCount")
	private Integer notificationsCount = null;

	@SerializedName("favoritesCount")
	private Integer favoritesCount = null;

	@SerializedName("totalBalanceGvt")
	private Double totalBalanceGvt = null;

	@SerializedName("investedGvt")
	private Double investedGvt = null;

	@SerializedName("availableGvt")
	private Double availableGvt = null;

	@SerializedName("totalBalance")
	private Double totalBalance = null;

	@SerializedName("invested")
	private Double invested = null;

	@SerializedName("available")
	private Double available = null;

	@SerializedName("pending")
	private Double pending = null;

	@SerializedName("kycConfirmed")
	private Boolean kycConfirmed = null;

	@SerializedName("allowForex")
	private Boolean allowForex = null;

	@SerializedName("isTwoFactorEnabled")
	private Boolean isTwoFactorEnabled = null;

	@SerializedName("isNewUser")
	private Boolean isNewUser = null;

	public ProfileHeaderViewModel id(UUID id) {
		this.id = id;
		return this;
	}

	/**
	 * Get id
	 *
	 * @return id
	 **/
	@ApiModelProperty(value = "")
	public UUID getId() {
		return id;
	}

	public void setId(UUID id) {
		this.id = id;
	}

	public ProfileHeaderViewModel name(String name) {
		this.name = name;
		return this;
	}

	/**
	 * Get name
	 *
	 * @return name
	 **/
	@ApiModelProperty(value = "")
	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public ProfileHeaderViewModel email(String email) {
		this.email = email;
		return this;
	}

	/**
	 * Get email
	 *
	 * @return email
	 **/
	@ApiModelProperty(value = "")
	public String getEmail() {
		return email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	public ProfileHeaderViewModel avatar(String avatar) {
		this.avatar = avatar;
		return this;
	}

	/**
	 * Get avatar
	 *
	 * @return avatar
	 **/
	@ApiModelProperty(value = "")
	public String getAvatar() {
		return avatar;
	}

	public void setAvatar(String avatar) {
		this.avatar = avatar;
	}

	public ProfileHeaderViewModel userType(UserTypeEnum userType) {
		this.userType = userType;
		return this;
	}

	/**
	 * Get userType
	 *
	 * @return userType
	 **/
	@ApiModelProperty(value = "")
	public UserTypeEnum getUserType() {
		return userType;
	}

	public void setUserType(UserTypeEnum userType) {
		this.userType = userType;
	}

	public ProfileHeaderViewModel notificationsCount(Integer notificationsCount) {
		this.notificationsCount = notificationsCount;
		return this;
	}

	/**
	 * Get notificationsCount
	 *
	 * @return notificationsCount
	 **/
	@ApiModelProperty(value = "")
	public Integer getNotificationsCount() {
		return notificationsCount;
	}

	public void setNotificationsCount(Integer notificationsCount) {
		this.notificationsCount = notificationsCount;
	}

	public ProfileHeaderViewModel favoritesCount(Integer favoritesCount) {
		this.favoritesCount = favoritesCount;
		return this;
	}

	/**
	 * Get favoritesCount
	 *
	 * @return favoritesCount
	 **/
	@ApiModelProperty(value = "")
	public Integer getFavoritesCount() {
		return favoritesCount;
	}

	public void setFavoritesCount(Integer favoritesCount) {
		this.favoritesCount = favoritesCount;
	}

	public ProfileHeaderViewModel totalBalanceGvt(Double totalBalanceGvt) {
		this.totalBalanceGvt = totalBalanceGvt;
		return this;
	}

	/**
	 * Get totalBalanceGvt
	 *
	 * @return totalBalanceGvt
	 **/
	@ApiModelProperty(value = "")
	public Double getTotalBalanceGvt() {
		return totalBalanceGvt;
	}

	public void setTotalBalanceGvt(Double totalBalanceGvt) {
		this.totalBalanceGvt = totalBalanceGvt;
	}

	public ProfileHeaderViewModel investedGvt(Double investedGvt) {
		this.investedGvt = investedGvt;
		return this;
	}

	/**
	 * Get investedGvt
	 *
	 * @return investedGvt
	 **/
	@ApiModelProperty(value = "")
	public Double getInvestedGvt() {
		return investedGvt;
	}

	public void setInvestedGvt(Double investedGvt) {
		this.investedGvt = investedGvt;
	}

	public ProfileHeaderViewModel availableGvt(Double availableGvt) {
		this.availableGvt = availableGvt;
		return this;
	}

	/**
	 * Get availableGvt
	 *
	 * @return availableGvt
	 **/
	@ApiModelProperty(value = "")
	public Double getAvailableGvt() {
		return availableGvt;
	}

	public void setAvailableGvt(Double availableGvt) {
		this.availableGvt = availableGvt;
	}

	public ProfileHeaderViewModel totalBalance(Double totalBalance) {
		this.totalBalance = totalBalance;
		return this;
	}

	/**
	 * Get totalBalance
	 *
	 * @return totalBalance
	 **/
	@ApiModelProperty(value = "")
	public Double getTotalBalance() {
		return totalBalance;
	}

	public void setTotalBalance(Double totalBalance) {
		this.totalBalance = totalBalance;
	}

	public ProfileHeaderViewModel invested(Double invested) {
		this.invested = invested;
		return this;
	}

	/**
	 * Get invested
	 *
	 * @return invested
	 **/
	@ApiModelProperty(value = "")
	public Double getInvested() {
		return invested;
	}

	public void setInvested(Double invested) {
		this.invested = invested;
	}

	public ProfileHeaderViewModel available(Double available) {
		this.available = available;
		return this;
	}

	/**
	 * Get available
	 *
	 * @return available
	 **/
	@ApiModelProperty(value = "")
	public Double getAvailable() {
		return available;
	}

	public void setAvailable(Double available) {
		this.available = available;
	}

	public ProfileHeaderViewModel pending(Double pending) {
		this.pending = pending;
		return this;
	}

	/**
	 * Get pending
	 *
	 * @return pending
	 **/
	@ApiModelProperty(value = "")
	public Double getPending() {
		return pending;
	}

	public void setPending(Double pending) {
		this.pending = pending;
	}

	public ProfileHeaderViewModel kycConfirmed(Boolean kycConfirmed) {
		this.kycConfirmed = kycConfirmed;
		return this;
	}

	/**
	 * Get kycConfirmed
	 *
	 * @return kycConfirmed
	 **/
	@ApiModelProperty(value = "")
	public Boolean isKycConfirmed() {
		return kycConfirmed;
	}

	public void setKycConfirmed(Boolean kycConfirmed) {
		this.kycConfirmed = kycConfirmed;
	}

	public ProfileHeaderViewModel allowForex(Boolean allowForex) {
		this.allowForex = allowForex;
		return this;
	}

	/**
	 * Get allowForex
	 *
	 * @return allowForex
	 **/
	@ApiModelProperty(value = "")
	public Boolean isAllowForex() {
		return allowForex;
	}

	public void setAllowForex(Boolean allowForex) {
		this.allowForex = allowForex;
	}

	public ProfileHeaderViewModel isTwoFactorEnabled(Boolean isTwoFactorEnabled) {
		this.isTwoFactorEnabled = isTwoFactorEnabled;
		return this;
	}

	/**
	 * Get isTwoFactorEnabled
	 *
	 * @return isTwoFactorEnabled
	 **/
	@ApiModelProperty(value = "")
	public Boolean isIsTwoFactorEnabled() {
		return isTwoFactorEnabled;
	}

	public void setIsTwoFactorEnabled(Boolean isTwoFactorEnabled) {
		this.isTwoFactorEnabled = isTwoFactorEnabled;
	}

	public ProfileHeaderViewModel isNewUser(Boolean isNewUser) {
		this.isNewUser = isNewUser;
		return this;
	}

	/**
	 * Get isNewUser
	 *
	 * @return isNewUser
	 **/
	@ApiModelProperty(value = "")
	public Boolean isIsNewUser() {
		return isNewUser;
	}

	public void setIsNewUser(Boolean isNewUser) {
		this.isNewUser = isNewUser;
	}

	@Override
	public boolean equals(java.lang.Object o) {
		if (this == o) {
			return true;
		}
		if (o == null || getClass() != o.getClass()) {
			return false;
		}
		ProfileHeaderViewModel profileHeaderViewModel = (ProfileHeaderViewModel) o;
		return Objects.equals(this.id, profileHeaderViewModel.id) &&
				Objects.equals(this.name, profileHeaderViewModel.name) &&
				Objects.equals(this.email, profileHeaderViewModel.email) &&
				Objects.equals(this.avatar, profileHeaderViewModel.avatar) &&
				Objects.equals(this.userType, profileHeaderViewModel.userType) &&
				Objects.equals(this.notificationsCount, profileHeaderViewModel.notificationsCount) &&
				Objects.equals(this.favoritesCount, profileHeaderViewModel.favoritesCount) &&
				Objects.equals(this.totalBalanceGvt, profileHeaderViewModel.totalBalanceGvt) &&
				Objects.equals(this.investedGvt, profileHeaderViewModel.investedGvt) &&
				Objects.equals(this.availableGvt, profileHeaderViewModel.availableGvt) &&
				Objects.equals(this.totalBalance, profileHeaderViewModel.totalBalance) &&
				Objects.equals(this.invested, profileHeaderViewModel.invested) &&
				Objects.equals(this.available, profileHeaderViewModel.available) &&
				Objects.equals(this.pending, profileHeaderViewModel.pending) &&
				Objects.equals(this.kycConfirmed, profileHeaderViewModel.kycConfirmed) &&
				Objects.equals(this.allowForex, profileHeaderViewModel.allowForex) &&
				Objects.equals(this.isTwoFactorEnabled, profileHeaderViewModel.isTwoFactorEnabled) &&
				Objects.equals(this.isNewUser, profileHeaderViewModel.isNewUser);
	}

	@Override
	public int hashCode() {
		return Objects.hash(id, name, email, avatar, userType, notificationsCount, favoritesCount, totalBalanceGvt, investedGvt, availableGvt, totalBalance, invested, available, pending, kycConfirmed, allowForex, isTwoFactorEnabled, isNewUser);
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class ProfileHeaderViewModel {\n");

		sb.append("    id: ").append(toIndentedString(id)).append("\n");
		sb.append("    name: ").append(toIndentedString(name)).append("\n");
		sb.append("    email: ").append(toIndentedString(email)).append("\n");
		sb.append("    avatar: ").append(toIndentedString(avatar)).append("\n");
		sb.append("    userType: ").append(toIndentedString(userType)).append("\n");
		sb.append("    notificationsCount: ").append(toIndentedString(notificationsCount)).append("\n");
		sb.append("    favoritesCount: ").append(toIndentedString(favoritesCount)).append("\n");
		sb.append("    totalBalanceGvt: ").append(toIndentedString(totalBalanceGvt)).append("\n");
		sb.append("    investedGvt: ").append(toIndentedString(investedGvt)).append("\n");
		sb.append("    availableGvt: ").append(toIndentedString(availableGvt)).append("\n");
		sb.append("    totalBalance: ").append(toIndentedString(totalBalance)).append("\n");
		sb.append("    invested: ").append(toIndentedString(invested)).append("\n");
		sb.append("    available: ").append(toIndentedString(available)).append("\n");
		sb.append("    pending: ").append(toIndentedString(pending)).append("\n");
		sb.append("    kycConfirmed: ").append(toIndentedString(kycConfirmed)).append("\n");
		sb.append("    allowForex: ").append(toIndentedString(allowForex)).append("\n");
		sb.append("    isTwoFactorEnabled: ").append(toIndentedString(isTwoFactorEnabled)).append("\n");
		sb.append("    isNewUser: ").append(toIndentedString(isNewUser)).append("\n");
		sb.append("}");
		return sb.toString();
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private String toIndentedString(java.lang.Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n    ");
	}

	/**
	 * Gets or Sets userType
	 */
	@JsonAdapter(UserTypeEnum.Adapter.class)
	public enum UserTypeEnum
	{
		INVESTOR("Investor"),

		MANAGER("Manager");

		public static UserTypeEnum fromValue(String text) {
			for (UserTypeEnum b : UserTypeEnum.values()) {
				if (String.valueOf(b.value).equals(text)) {
					return b;
				}
			}
			return null;
		}

		private String value;

		UserTypeEnum(String value) {
			this.value = value;
		}

		public String getValue() {
			return value;
		}

		@Override
		public String toString() {
			return String.valueOf(value);
		}

		public static class Adapter extends TypeAdapter<UserTypeEnum>
		{
			@Override
			public void write(final JsonWriter jsonWriter, final UserTypeEnum enumeration) throws IOException {
				jsonWriter.value(enumeration.getValue());
			}

			@Override
			public UserTypeEnum read(final JsonReader jsonReader) throws IOException {
				String value = jsonReader.nextString();
				return UserTypeEnum.fromValue(String.valueOf(value));
			}
		}
	}

}

