/*
 * Core API v2.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import android.os.Parcel;
import android.os.Parcelable;

import com.google.gson.annotations.SerializedName;

import java.util.Objects;
import java.util.UUID;

import io.swagger.v3.oas.annotations.media.Schema;
/**
 * MakeTradingAccountSignalProvider
 */


public class MakeTradingAccountSignalProvider implements Parcelable
{
	public static final Parcelable.Creator<MakeTradingAccountSignalProvider> CREATOR = new Parcelable.Creator<MakeTradingAccountSignalProvider>()
	{
		public MakeTradingAccountSignalProvider createFromParcel(Parcel in) {
			return new MakeTradingAccountSignalProvider(in);
		}

		public MakeTradingAccountSignalProvider[] newArray(int size) {
			return new MakeTradingAccountSignalProvider[size];
		}
	};

	@SerializedName("tradingAccountId")
	private UUID tradingAccountId = null;

	@SerializedName("volumeFee")
	private Double volumeFee = null;

	@SerializedName("successFee")
	private Double successFee = null;

	@SerializedName("title")
	private String title = null;

	@SerializedName("description")
	private String description = null;

	@SerializedName("logo")
	private String logo = null;

	public MakeTradingAccountSignalProvider() {
	}

	MakeTradingAccountSignalProvider(Parcel in) {
		tradingAccountId = (UUID) in.readValue(UUID.class.getClassLoader());
		volumeFee = (Double) in.readValue(null);
		successFee = (Double) in.readValue(null);
		title = (String) in.readValue(null);
		description = (String) in.readValue(null);
		logo = (String) in.readValue(null);
	}

	public MakeTradingAccountSignalProvider tradingAccountId(UUID tradingAccountId) {
		this.tradingAccountId = tradingAccountId;
		return this;
	}

	/**
	 * Get tradingAccountId
	 *
	 * @return tradingAccountId
	 **/
	@Schema(description = "")
	public UUID getTradingAccountId() {
		return tradingAccountId;
	}

	public void setTradingAccountId(UUID tradingAccountId) {
		this.tradingAccountId = tradingAccountId;
	}

	public MakeTradingAccountSignalProvider volumeFee(Double volumeFee) {
		this.volumeFee = volumeFee;
		return this;
	}

	/**
	 * Get volumeFee
	 *
	 * @return volumeFee
	 **/
	@Schema(description = "")
	public Double getVolumeFee() {
		return volumeFee;
	}

	public void setVolumeFee(Double volumeFee) {
		this.volumeFee = volumeFee;
	}

	public MakeTradingAccountSignalProvider successFee(Double successFee) {
		this.successFee = successFee;
		return this;
	}

	/**
	 * Get successFee
	 *
	 * @return successFee
	 **/
	@Schema(description = "")
	public Double getSuccessFee() {
		return successFee;
	}

	public void setSuccessFee(Double successFee) {
		this.successFee = successFee;
	}

	public MakeTradingAccountSignalProvider title(String title) {
		this.title = title;
		return this;
	}

	/**
	 * Get title
	 *
	 * @return title
	 **/
	@Schema(description = "")
	public String getTitle() {
		return title;
	}

	public void setTitle(String title) {
		this.title = title;
	}

	public MakeTradingAccountSignalProvider description(String description) {
		this.description = description;
		return this;
	}

	/**
	 * Get description
	 *
	 * @return description
	 **/
	@Schema(description = "")
	public String getDescription() {
		return description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	public MakeTradingAccountSignalProvider logo(String logo) {
		this.logo = logo;
		return this;
	}

	/**
	 * Get logo
	 *
	 * @return logo
	 **/
	@Schema(description = "")
	public String getLogo() {
		return logo;
	}

	public void setLogo(String logo) {
		this.logo = logo;
	}

	@Override
	public boolean equals(java.lang.Object o) {
		if (this == o) {
			return true;
		}
		if (o == null || getClass() != o.getClass()) {
			return false;
		}
		MakeTradingAccountSignalProvider makeTradingAccountSignalProvider = (MakeTradingAccountSignalProvider) o;
		return Objects.equals(this.tradingAccountId, makeTradingAccountSignalProvider.tradingAccountId) &&
				Objects.equals(this.volumeFee, makeTradingAccountSignalProvider.volumeFee) &&
				Objects.equals(this.successFee, makeTradingAccountSignalProvider.successFee) &&
				Objects.equals(this.title, makeTradingAccountSignalProvider.title) &&
				Objects.equals(this.description, makeTradingAccountSignalProvider.description) &&
				Objects.equals(this.logo, makeTradingAccountSignalProvider.logo);
	}

	@Override
	public int hashCode() {
		return Objects.hash(tradingAccountId, volumeFee, successFee, title, description, logo);
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class MakeTradingAccountSignalProvider {\n");

		sb.append("    tradingAccountId: ").append(toIndentedString(tradingAccountId)).append("\n");
		sb.append("    volumeFee: ").append(toIndentedString(volumeFee)).append("\n");
		sb.append("    successFee: ").append(toIndentedString(successFee)).append("\n");
		sb.append("    title: ").append(toIndentedString(title)).append("\n");
		sb.append("    description: ").append(toIndentedString(description)).append("\n");
		sb.append("    logo: ").append(toIndentedString(logo)).append("\n");
		sb.append("}");
		return sb.toString();
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private String toIndentedString(java.lang.Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n    ");
	}

	public void writeToParcel(Parcel out, int flags) {
		out.writeValue(tradingAccountId);
		out.writeValue(volumeFee);
		out.writeValue(successFee);
		out.writeValue(title);
		out.writeValue(description);
		out.writeValue(logo);
	}

	public int describeContents() {
		return 0;
	}
}
