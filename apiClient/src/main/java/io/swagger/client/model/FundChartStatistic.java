/*
 * Core API v2.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import android.os.Parcel;
import android.os.Parcelable;

import com.google.gson.annotations.SerializedName;

import org.joda.time.DateTime;

import java.util.Objects;

import io.swagger.v3.oas.annotations.media.Schema;

/**
 * FundChartStatistic
 */


public class FundChartStatistic implements Parcelable
{
	public static final Parcelable.Creator<FundChartStatistic> CREATOR = new Parcelable.Creator<FundChartStatistic>()
	{
		public FundChartStatistic createFromParcel(Parcel in) {
			return new FundChartStatistic(in);
		}

		public FundChartStatistic[] newArray(int size) {
			return new FundChartStatistic[size];
		}
	};

	@SerializedName("profitPercent")
	private Double profitPercent = null;

	@SerializedName("creationDate")
	private DateTime creationDate = null;

	@SerializedName("balance")
	private Double balance = null;

	@SerializedName("investors")
	private Integer investors = null;

	@SerializedName("sharpeRatio")
	private Double sharpeRatio = null;

	@SerializedName("sortinoRatio")
	private Double sortinoRatio = null;

	@SerializedName("calmarRatio")
	private Double calmarRatio = null;

	@SerializedName("maxDrawdown")
	private Double maxDrawdown = null;

	public FundChartStatistic() {
	}

	FundChartStatistic(Parcel in) {
		profitPercent = (Double) in.readValue(null);
		creationDate = (DateTime) in.readValue(DateTime.class.getClassLoader());
		balance = (Double) in.readValue(null);
		investors = (Integer) in.readValue(null);
		sharpeRatio = (Double) in.readValue(null);
		sortinoRatio = (Double) in.readValue(null);
		calmarRatio = (Double) in.readValue(null);
		maxDrawdown = (Double) in.readValue(null);
	}

	public FundChartStatistic profitPercent(Double profitPercent) {
		this.profitPercent = profitPercent;
		return this;
	}

	/**
	 * Get profitPercent
	 *
	 * @return profitPercent
	 **/
	@Schema(description = "")
	public Double getProfitPercent() {
		return profitPercent;
	}

	public void setProfitPercent(Double profitPercent) {
		this.profitPercent = profitPercent;
	}

	public FundChartStatistic creationDate(DateTime creationDate) {
		this.creationDate = creationDate;
		return this;
	}

	/**
	 * Get creationDate
	 *
	 * @return creationDate
	 **/
	@Schema(description = "")
	public DateTime getCreationDate() {
		return creationDate;
	}

	public void setCreationDate(DateTime creationDate) {
		this.creationDate = creationDate;
	}

	public FundChartStatistic balance(Double balance) {
		this.balance = balance;
		return this;
	}

	/**
	 * Get balance
	 *
	 * @return balance
	 **/
	@Schema(description = "")
	public Double getBalance() {
		return balance;
	}

	public void setBalance(Double balance) {
		this.balance = balance;
	}

	public FundChartStatistic investors(Integer investors) {
		this.investors = investors;
		return this;
	}

	/**
	 * Get investors
	 *
	 * @return investors
	 **/
	@Schema(description = "")
	public Integer getInvestors() {
		return investors;
	}

	public void setInvestors(Integer investors) {
		this.investors = investors;
	}

	public FundChartStatistic sharpeRatio(Double sharpeRatio) {
		this.sharpeRatio = sharpeRatio;
		return this;
	}

	/**
	 * Get sharpeRatio
	 *
	 * @return sharpeRatio
	 **/
	@Schema(description = "")
	public Double getSharpeRatio() {
		return sharpeRatio;
	}

	public void setSharpeRatio(Double sharpeRatio) {
		this.sharpeRatio = sharpeRatio;
	}

	public FundChartStatistic sortinoRatio(Double sortinoRatio) {
		this.sortinoRatio = sortinoRatio;
		return this;
	}

	/**
	 * Get sortinoRatio
	 *
	 * @return sortinoRatio
	 **/
	@Schema(description = "")
	public Double getSortinoRatio() {
		return sortinoRatio;
	}

	public void setSortinoRatio(Double sortinoRatio) {
		this.sortinoRatio = sortinoRatio;
	}

	public FundChartStatistic calmarRatio(Double calmarRatio) {
		this.calmarRatio = calmarRatio;
		return this;
	}

	/**
	 * Get calmarRatio
	 *
	 * @return calmarRatio
	 **/
	@Schema(description = "")
	public Double getCalmarRatio() {
		return calmarRatio;
	}

	public void setCalmarRatio(Double calmarRatio) {
		this.calmarRatio = calmarRatio;
	}

	public FundChartStatistic maxDrawdown(Double maxDrawdown) {
		this.maxDrawdown = maxDrawdown;
		return this;
	}

	/**
	 * Get maxDrawdown
	 *
	 * @return maxDrawdown
	 **/
	@Schema(description = "")
	public Double getMaxDrawdown() {
		return maxDrawdown;
	}

	public void setMaxDrawdown(Double maxDrawdown) {
		this.maxDrawdown = maxDrawdown;
	}

	@Override
	public boolean equals(java.lang.Object o) {
		if (this == o) {
			return true;
		}
		if (o == null || getClass() != o.getClass()) {
			return false;
		}
		FundChartStatistic fundChartStatistic = (FundChartStatistic) o;
		return Objects.equals(this.profitPercent, fundChartStatistic.profitPercent) &&
				Objects.equals(this.creationDate, fundChartStatistic.creationDate) &&
				Objects.equals(this.balance, fundChartStatistic.balance) &&
				Objects.equals(this.investors, fundChartStatistic.investors) &&
				Objects.equals(this.sharpeRatio, fundChartStatistic.sharpeRatio) &&
				Objects.equals(this.sortinoRatio, fundChartStatistic.sortinoRatio) &&
				Objects.equals(this.calmarRatio, fundChartStatistic.calmarRatio) &&
				Objects.equals(this.maxDrawdown, fundChartStatistic.maxDrawdown);
	}

	@Override
	public int hashCode() {
		return Objects.hash(profitPercent, creationDate, balance, investors, sharpeRatio, sortinoRatio, calmarRatio, maxDrawdown);
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class FundChartStatistic {\n");

		sb.append("    profitPercent: ").append(toIndentedString(profitPercent)).append("\n");
		sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
		sb.append("    balance: ").append(toIndentedString(balance)).append("\n");
		sb.append("    investors: ").append(toIndentedString(investors)).append("\n");
		sb.append("    sharpeRatio: ").append(toIndentedString(sharpeRatio)).append("\n");
		sb.append("    sortinoRatio: ").append(toIndentedString(sortinoRatio)).append("\n");
		sb.append("    calmarRatio: ").append(toIndentedString(calmarRatio)).append("\n");
		sb.append("    maxDrawdown: ").append(toIndentedString(maxDrawdown)).append("\n");
		sb.append("}");
		return sb.toString();
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private String toIndentedString(java.lang.Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n    ");
	}

	public void writeToParcel(Parcel out, int flags) {
		out.writeValue(profitPercent);
		out.writeValue(creationDate);
		out.writeValue(balance);
		out.writeValue(investors);
		out.writeValue(sharpeRatio);
		out.writeValue(sortinoRatio);
		out.writeValue(calmarRatio);
		out.writeValue(maxDrawdown);
	}

	public int describeContents() {
		return 0;
	}
}
