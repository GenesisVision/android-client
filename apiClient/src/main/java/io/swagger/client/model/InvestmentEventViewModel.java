/*
 * Core API v2.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import android.os.Parcel;
import android.os.Parcelable;

import com.google.gson.annotations.SerializedName;

import org.joda.time.DateTime;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import io.swagger.v3.oas.annotations.media.Schema;

/**
 * InvestmentEventViewModel
 */


public class InvestmentEventViewModel implements Parcelable
{
	@SerializedName("title")
	private String title = null;

	@SerializedName("logoUrl")
	private String logoUrl = null;

	@SerializedName("date")
	private DateTime date = null;

	@SerializedName("assetDetails")
	private AssetDetails assetDetails = null;

	@SerializedName("amount")
	private Double amount = null;

	@SerializedName("currency")
	private Currency currency = null;

	@SerializedName("changeState")
	private ChangeState changeState = null;

	@SerializedName("extendedInfo")
	private List<InvestmentEventItemViewModel> extendedInfo = null;

	@SerializedName("feesInfo")
	private List<FeeDetails> feesInfo = null;

	@SerializedName("totalFeesAmount")
	private Double totalFeesAmount = null;

	@SerializedName("totalFeesCurrency")
	private Currency totalFeesCurrency = null;

	public InvestmentEventViewModel() {
	}

	public InvestmentEventViewModel title(String title) {
		this.title = title;
		return this;
	}

	/**
	 * Get title
	 *
	 * @return title
	 **/
	@Schema(description = "")
	public String getTitle() {
		return title;
	}

	public void setTitle(String title) {
		this.title = title;
	}

	public InvestmentEventViewModel logoUrl(String logoUrl) {
		this.logoUrl = logoUrl;
		return this;
	}

	/**
	 * Get logoUrl
	 *
	 * @return logoUrl
	 **/
	@Schema(description = "")
	public String getLogoUrl() {
		return logoUrl;
	}

	public void setLogoUrl(String logoUrl) {
		this.logoUrl = logoUrl;
	}

	public InvestmentEventViewModel date(DateTime date) {
		this.date = date;
		return this;
	}

	/**
	 * Get date
	 *
	 * @return date
	 **/
	@Schema(description = "")
	public DateTime getDate() {
		return date;
	}

	public void setDate(DateTime date) {
		this.date = date;
	}

	public InvestmentEventViewModel assetDetails(AssetDetails assetDetails) {
		this.assetDetails = assetDetails;
		return this;
	}

	/**
	 * Get assetDetails
	 *
	 * @return assetDetails
	 **/
	@Schema(description = "")
	public AssetDetails getAssetDetails() {
		return assetDetails;
	}

	public void setAssetDetails(AssetDetails assetDetails) {
		this.assetDetails = assetDetails;
	}

	public InvestmentEventViewModel amount(Double amount) {
		this.amount = amount;
		return this;
	}

	/**
	 * Get amount
	 *
	 * @return amount
	 **/
	@Schema(description = "")
	public Double getAmount() {
		return amount;
	}

	public void setAmount(Double amount) {
		this.amount = amount;
	}

	public InvestmentEventViewModel currency(Currency currency) {
		this.currency = currency;
		return this;
	}

	/**
	 * Get currency
	 *
	 * @return currency
	 **/
	@Schema(description = "")
	public Currency getCurrency() {
		return currency;
	}

	public void setCurrency(Currency currency) {
		this.currency = currency;
	}

	public InvestmentEventViewModel changeState(ChangeState changeState) {
		this.changeState = changeState;
		return this;
	}

	/**
	 * Get changeState
	 *
	 * @return changeState
	 **/
	@Schema(description = "")
	public ChangeState getChangeState() {
		return changeState;
	}

	public void setChangeState(ChangeState changeState) {
		this.changeState = changeState;
	}

	public InvestmentEventViewModel extendedInfo(List<InvestmentEventItemViewModel> extendedInfo) {
		this.extendedInfo = extendedInfo;
		return this;
	}

	public InvestmentEventViewModel addExtendedInfoItem(InvestmentEventItemViewModel extendedInfoItem) {
		if (this.extendedInfo == null) {
			this.extendedInfo = new ArrayList<InvestmentEventItemViewModel>();
		}
		this.extendedInfo.add(extendedInfoItem);
		return this;
	}

	/**
	 * Get extendedInfo
	 *
	 * @return extendedInfo
	 **/
	@Schema(description = "")
	public List<InvestmentEventItemViewModel> getExtendedInfo() {
		return extendedInfo;
	}

	public void setExtendedInfo(List<InvestmentEventItemViewModel> extendedInfo) {
		this.extendedInfo = extendedInfo;
	}

	public InvestmentEventViewModel feesInfo(List<FeeDetails> feesInfo) {
		this.feesInfo = feesInfo;
		return this;
	}

	public InvestmentEventViewModel addFeesInfoItem(FeeDetails feesInfoItem) {
		if (this.feesInfo == null) {
			this.feesInfo = new ArrayList<FeeDetails>();
		}
		this.feesInfo.add(feesInfoItem);
		return this;
	}

	/**
	 * Get feesInfo
	 *
	 * @return feesInfo
	 **/
	@Schema(description = "")
	public List<FeeDetails> getFeesInfo() {
		return feesInfo;
	}

	public void setFeesInfo(List<FeeDetails> feesInfo) {
		this.feesInfo = feesInfo;
	}

	public InvestmentEventViewModel totalFeesAmount(Double totalFeesAmount) {
		this.totalFeesAmount = totalFeesAmount;
		return this;
	}

	/**
	 * Get totalFeesAmount
	 *
	 * @return totalFeesAmount
	 **/
	@Schema(description = "")
	public Double getTotalFeesAmount() {
		return totalFeesAmount;
	}

	public void setTotalFeesAmount(Double totalFeesAmount) {
		this.totalFeesAmount = totalFeesAmount;
	}

	public InvestmentEventViewModel totalFeesCurrency(Currency totalFeesCurrency) {
		this.totalFeesCurrency = totalFeesCurrency;
		return this;
	}

	/**
	 * Get totalFeesCurrency
	 *
	 * @return totalFeesCurrency
	 **/
	@Schema(description = "")
	public Currency getTotalFeesCurrency() {
		return totalFeesCurrency;
	}

	public void setTotalFeesCurrency(Currency totalFeesCurrency) {
		this.totalFeesCurrency = totalFeesCurrency;
	}


	@Override
	public boolean equals(java.lang.Object o) {
		if (this == o) {
			return true;
		}
		if (o == null || getClass() != o.getClass()) {
			return false;
		}
		InvestmentEventViewModel investmentEventViewModel = (InvestmentEventViewModel) o;
		return Objects.equals(this.title, investmentEventViewModel.title) &&
				Objects.equals(this.logoUrl, investmentEventViewModel.logoUrl) &&
				Objects.equals(this.date, investmentEventViewModel.date) &&
				Objects.equals(this.assetDetails, investmentEventViewModel.assetDetails) &&
				Objects.equals(this.amount, investmentEventViewModel.amount) &&
				Objects.equals(this.currency, investmentEventViewModel.currency) &&
				Objects.equals(this.changeState, investmentEventViewModel.changeState) &&
				Objects.equals(this.extendedInfo, investmentEventViewModel.extendedInfo) &&
				Objects.equals(this.feesInfo, investmentEventViewModel.feesInfo) &&
				Objects.equals(this.totalFeesAmount, investmentEventViewModel.totalFeesAmount) &&
				Objects.equals(this.totalFeesCurrency, investmentEventViewModel.totalFeesCurrency);
	}

	@Override
	public int hashCode() {
		return Objects.hash(title, logoUrl, date, assetDetails, amount, currency, changeState, extendedInfo, feesInfo, totalFeesAmount, totalFeesCurrency);
	}


	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class InvestmentEventViewModel {\n");

		sb.append("    title: ").append(toIndentedString(title)).append("\n");
		sb.append("    logoUrl: ").append(toIndentedString(logoUrl)).append("\n");
		sb.append("    date: ").append(toIndentedString(date)).append("\n");
		sb.append("    assetDetails: ").append(toIndentedString(assetDetails)).append("\n");
		sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
		sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
		sb.append("    changeState: ").append(toIndentedString(changeState)).append("\n");
		sb.append("    extendedInfo: ").append(toIndentedString(extendedInfo)).append("\n");
		sb.append("    feesInfo: ").append(toIndentedString(feesInfo)).append("\n");
		sb.append("    totalFeesAmount: ").append(toIndentedString(totalFeesAmount)).append("\n");
		sb.append("    totalFeesCurrency: ").append(toIndentedString(totalFeesCurrency)).append("\n");
		sb.append("}");
		return sb.toString();
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private String toIndentedString(java.lang.Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n    ");
	}


	public void writeToParcel(Parcel out, int flags) {
		out.writeValue(title);
		out.writeValue(logoUrl);
		out.writeValue(date);
		out.writeValue(assetDetails);
		out.writeValue(amount);
		out.writeValue(currency);
		out.writeValue(changeState);
		out.writeValue(extendedInfo);
		out.writeValue(feesInfo);
		out.writeValue(totalFeesAmount);
		out.writeValue(totalFeesCurrency);
	}

	public static final Parcelable.Creator<InvestmentEventViewModel> CREATOR = new Parcelable.Creator<InvestmentEventViewModel>()
	{
		public InvestmentEventViewModel createFromParcel(Parcel in) {
			return new InvestmentEventViewModel(in);
		}

		public InvestmentEventViewModel[] newArray(int size) {
			return new InvestmentEventViewModel[size];
		}
	};

	public int describeContents() {
		return 0;
	}

	InvestmentEventViewModel(Parcel in) {
		title = (String) in.readValue(null);
		logoUrl = (String) in.readValue(null);
		date = (DateTime) in.readValue(DateTime.class.getClassLoader());
		assetDetails = (AssetDetails) in.readValue(AssetDetails.class.getClassLoader());
		amount = (Double) in.readValue(null);
		currency = (Currency) in.readValue(Currency.class.getClassLoader());
		changeState = (ChangeState) in.readValue(ChangeState.class.getClassLoader());
		extendedInfo = (List<InvestmentEventItemViewModel>) in.readValue(InvestmentEventItemViewModel.class.getClassLoader());
		feesInfo = (List<FeeDetails>) in.readValue(FeeDetails.class.getClassLoader());
		totalFeesAmount = (Double) in.readValue(null);
		totalFeesCurrency = (Currency) in.readValue(Currency.class.getClassLoader());
	}
}
