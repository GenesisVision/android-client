/*
 * Core API v1.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

import java.io.IOException;
import java.util.Objects;

import io.swagger.annotations.ApiModelProperty;

/**
 * ProgramTag
 */

public class ProgramTag
{
	@SerializedName("name")
	private NameEnum name = null;

	@SerializedName("color")
	private String color = null;

	public ProgramTag name(NameEnum name) {
		this.name = name;
		return this;
	}

	/**
	 * Get name
	 *
	 * @return name
	 **/
	@ApiModelProperty(value = "")
	public NameEnum getName() {
		return name;
	}

	public void setName(NameEnum name) {
		this.name = name;
	}

	public ProgramTag color(String color) {
		this.color = color;
		return this;
	}

	/**
	 * Get color
	 *
	 * @return color
	 **/
	@ApiModelProperty(value = "")
	public String getColor() {
		return color;
	}

	public void setColor(String color) {
		this.color = color;
	}

	@Override
	public boolean equals(java.lang.Object o) {
		if (this == o) {
			return true;
		}
		if (o == null || getClass() != o.getClass()) {
			return false;
		}
		ProgramTag programTag = (ProgramTag) o;
		return Objects.equals(this.name, programTag.name) &&
				Objects.equals(this.color, programTag.color);
	}

	@Override
	public int hashCode() {
		return Objects.hash(name, color);
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class ProgramTag {\n");

		sb.append("    name: ").append(toIndentedString(name)).append("\n");
		sb.append("    color: ").append(toIndentedString(color)).append("\n");
		sb.append("}");
		return sb.toString();
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private String toIndentedString(java.lang.Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n    ");
	}

	/**
	 * Gets or Sets name
	 */
	@JsonAdapter(NameEnum.Adapter.class)
	public enum NameEnum
	{
		CRYPTO("Crypto"),

		FOREX("Forex"),

		HIGHRISK("HighRisk"),

		SIGNAL("Signal");

		public static NameEnum fromValue(String text) {
			for (NameEnum b : NameEnum.values()) {
				if (String.valueOf(b.value).equals(text)) {
					return b;
				}
			}
			return null;
		}

		private String value;

		NameEnum(String value) {
			this.value = value;
		}

		public String getValue() {
			return value;
		}

		@Override
		public String toString() {
			return String.valueOf(value);
		}

		public static class Adapter extends TypeAdapter<NameEnum>
		{
			@Override
			public void write(final JsonWriter jsonWriter, final NameEnum enumeration) throws IOException {
				jsonWriter.value(enumeration.getValue());
			}

			@Override
			public NameEnum read(final JsonReader jsonReader) throws IOException {
				String value = jsonReader.nextString();
				return NameEnum.fromValue(String.valueOf(value));
			}
		}
	}

}

