/*
 * Core API v1.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

import org.joda.time.DateTime;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
import java.util.UUID;

import io.swagger.annotations.ApiModelProperty;

/**
 * ProgramDetailsFull
 */

public class ProgramDetailsFull
{
	@SerializedName("currency")
	private CurrencyEnum currency = null;

	@SerializedName("level")
	private Integer level = null;

	@SerializedName("periodDuration")
	private Integer periodDuration = null;

	@SerializedName("periodStarts")
	private DateTime periodStarts = null;

	@SerializedName("periodEnds")
	private DateTime periodEnds = null;

	@SerializedName("entryFee")
	private Double entryFee = null;

	@SerializedName("entryFeeSelected")
	private Double entryFeeSelected = null;

	@SerializedName("entryFeeCurrent")
	private Double entryFeeCurrent = null;

	@SerializedName("successFee")
	private Double successFee = null;

	@SerializedName("stopOutLevel")
	private Double stopOutLevel = null;

	@SerializedName("isReinvesting")
	private Boolean isReinvesting = null;

	@SerializedName("isSignalProgram")
	private Boolean isSignalProgram = null;

	@SerializedName("signalSuccessFee")
	private Double signalSuccessFee = null;

	@SerializedName("signalSubscriptionFee")
	private Double signalSubscriptionFee = null;

	@SerializedName("availableInvestment")
	private Double availableInvestment = null;

	@SerializedName("availableInvestmentBase")
	private Double availableInvestmentBase = null;

	@SerializedName("statistic")
	private ProgramStatistic statistic = null;

	@SerializedName("rating")
	private ProgramDetailsRating rating = null;

	@SerializedName("personalProgramDetails")
	private PersonalProgramDetailsFull personalProgramDetails = null;

	@SerializedName("tags")
	private List<ProgramTag> tags = null;

	@SerializedName("id")
	private UUID id = null;

	@SerializedName("logo")
	private String logo = null;

	@SerializedName("url")
	private String url = null;

	@SerializedName("color")
	private String color = null;

	@SerializedName("description")
	private String description = null;

	@SerializedName("title")
	private String title = null;

	@SerializedName("ipfsHash")
	private String ipfsHash = null;

	@SerializedName("status")
	private StatusEnum status = null;

	@SerializedName("manager")
	private ProfilePublic manager = null;

	public ProgramDetailsFull currency(CurrencyEnum currency) {
		this.currency = currency;
		return this;
	}

	/**
	 * Get currency
	 *
	 * @return currency
	 **/
	@ApiModelProperty(value = "")
	public CurrencyEnum getCurrency() {
		return currency;
	}

	public void setCurrency(CurrencyEnum currency) {
		this.currency = currency;
	}

	public ProgramDetailsFull level(Integer level) {
		this.level = level;
		return this;
	}

	/**
	 * Get level
	 *
	 * @return level
	 **/
	@ApiModelProperty(value = "")
	public Integer getLevel() {
		return level;
	}

	public void setLevel(Integer level) {
		this.level = level;
	}

	public ProgramDetailsFull periodDuration(Integer periodDuration) {
		this.periodDuration = periodDuration;
		return this;
	}

	/**
	 * Get periodDuration
	 *
	 * @return periodDuration
	 **/
	@ApiModelProperty(value = "")
	public Integer getPeriodDuration() {
		return periodDuration;
	}

	public void setPeriodDuration(Integer periodDuration) {
		this.periodDuration = periodDuration;
	}

	public ProgramDetailsFull periodStarts(DateTime periodStarts) {
		this.periodStarts = periodStarts;
		return this;
	}

	/**
	 * Get periodStarts
	 *
	 * @return periodStarts
	 **/
	@ApiModelProperty(value = "")
	public DateTime getPeriodStarts() {
		return periodStarts;
	}

	public void setPeriodStarts(DateTime periodStarts) {
		this.periodStarts = periodStarts;
	}

	public ProgramDetailsFull periodEnds(DateTime periodEnds) {
		this.periodEnds = periodEnds;
		return this;
	}

	/**
	 * Get periodEnds
	 *
	 * @return periodEnds
	 **/
	@ApiModelProperty(value = "")
	public DateTime getPeriodEnds() {
		return periodEnds;
	}

	public void setPeriodEnds(DateTime periodEnds) {
		this.periodEnds = periodEnds;
	}

	public ProgramDetailsFull entryFee(Double entryFee) {
		this.entryFee = entryFee;
		return this;
	}

	/**
	 * Get entryFee
	 *
	 * @return entryFee
	 **/
	@ApiModelProperty(value = "")
	public Double getEntryFee() {
		return entryFee;
	}

	public void setEntryFee(Double entryFee) {
		this.entryFee = entryFee;
	}

	public ProgramDetailsFull entryFeeSelected(Double entryFeeSelected) {
		this.entryFeeSelected = entryFeeSelected;
		return this;
	}

	/**
	 * Get entryFeeSelected
	 *
	 * @return entryFeeSelected
	 **/
	@ApiModelProperty(value = "")
	public Double getEntryFeeSelected() {
		return entryFeeSelected;
	}

	public void setEntryFeeSelected(Double entryFeeSelected) {
		this.entryFeeSelected = entryFeeSelected;
	}

	public ProgramDetailsFull entryFeeCurrent(Double entryFeeCurrent) {
		this.entryFeeCurrent = entryFeeCurrent;
		return this;
	}

	/**
	 * Get entryFeeCurrent
	 *
	 * @return entryFeeCurrent
	 **/
	@ApiModelProperty(value = "")
	public Double getEntryFeeCurrent() {
		return entryFeeCurrent;
	}

	public void setEntryFeeCurrent(Double entryFeeCurrent) {
		this.entryFeeCurrent = entryFeeCurrent;
	}

	public ProgramDetailsFull successFee(Double successFee) {
		this.successFee = successFee;
		return this;
	}

	/**
	 * Get successFee
	 *
	 * @return successFee
	 **/
	@ApiModelProperty(value = "")
	public Double getSuccessFee() {
		return successFee;
	}

	public void setSuccessFee(Double successFee) {
		this.successFee = successFee;
	}

	public ProgramDetailsFull stopOutLevel(Double stopOutLevel) {
		this.stopOutLevel = stopOutLevel;
		return this;
	}

	/**
	 * Get stopOutLevel
	 *
	 * @return stopOutLevel
	 **/
	@ApiModelProperty(value = "")
	public Double getStopOutLevel() {
		return stopOutLevel;
	}

	public void setStopOutLevel(Double stopOutLevel) {
		this.stopOutLevel = stopOutLevel;
	}

	public ProgramDetailsFull isReinvesting(Boolean isReinvesting) {
		this.isReinvesting = isReinvesting;
		return this;
	}

	/**
	 * Get isReinvesting
	 *
	 * @return isReinvesting
	 **/
	@ApiModelProperty(value = "")
	public Boolean isIsReinvesting() {
		return isReinvesting;
	}

	public void setIsReinvesting(Boolean isReinvesting) {
		this.isReinvesting = isReinvesting;
	}

	public ProgramDetailsFull isSignalProgram(Boolean isSignalProgram) {
		this.isSignalProgram = isSignalProgram;
		return this;
	}

	/**
	 * Get isSignalProgram
	 *
	 * @return isSignalProgram
	 **/
	@ApiModelProperty(value = "")
	public Boolean isIsSignalProgram() {
		return isSignalProgram;
	}

	public void setIsSignalProgram(Boolean isSignalProgram) {
		this.isSignalProgram = isSignalProgram;
	}

	public ProgramDetailsFull signalSuccessFee(Double signalSuccessFee) {
		this.signalSuccessFee = signalSuccessFee;
		return this;
	}

	/**
	 * Get signalSuccessFee
	 *
	 * @return signalSuccessFee
	 **/
	@ApiModelProperty(value = "")
	public Double getSignalSuccessFee() {
		return signalSuccessFee;
	}

	public void setSignalSuccessFee(Double signalSuccessFee) {
		this.signalSuccessFee = signalSuccessFee;
	}

	public ProgramDetailsFull signalSubscriptionFee(Double signalSubscriptionFee) {
		this.signalSubscriptionFee = signalSubscriptionFee;
		return this;
	}

	/**
	 * Get signalSubscriptionFee
	 *
	 * @return signalSubscriptionFee
	 **/
	@ApiModelProperty(value = "")
	public Double getSignalSubscriptionFee() {
		return signalSubscriptionFee;
	}

	public void setSignalSubscriptionFee(Double signalSubscriptionFee) {
		this.signalSubscriptionFee = signalSubscriptionFee;
	}

	public ProgramDetailsFull availableInvestment(Double availableInvestment) {
		this.availableInvestment = availableInvestment;
		return this;
	}

	/**
	 * In GVT
	 *
	 * @return availableInvestment
	 **/
	@ApiModelProperty(value = "In GVT")
	public Double getAvailableInvestment() {
		return availableInvestment;
	}

	public void setAvailableInvestment(Double availableInvestment) {
		this.availableInvestment = availableInvestment;
	}

	public ProgramDetailsFull availableInvestmentBase(Double availableInvestmentBase) {
		this.availableInvestmentBase = availableInvestmentBase;
		return this;
	}

	/**
	 * In account currency
	 *
	 * @return availableInvestmentBase
	 **/
	@ApiModelProperty(value = "In account currency")
	public Double getAvailableInvestmentBase() {
		return availableInvestmentBase;
	}

	public void setAvailableInvestmentBase(Double availableInvestmentBase) {
		this.availableInvestmentBase = availableInvestmentBase;
	}

	public ProgramDetailsFull statistic(ProgramStatistic statistic) {
		this.statistic = statistic;
		return this;
	}

	/**
	 * Get statistic
	 *
	 * @return statistic
	 **/
	@ApiModelProperty(value = "")
	public ProgramStatistic getStatistic() {
		return statistic;
	}

	public void setStatistic(ProgramStatistic statistic) {
		this.statistic = statistic;
	}

	public ProgramDetailsFull rating(ProgramDetailsRating rating) {
		this.rating = rating;
		return this;
	}

	/**
	 * Get rating
	 *
	 * @return rating
	 **/
	@ApiModelProperty(value = "")
	public ProgramDetailsRating getRating() {
		return rating;
	}

	public void setRating(ProgramDetailsRating rating) {
		this.rating = rating;
	}

	public ProgramDetailsFull personalProgramDetails(PersonalProgramDetailsFull personalProgramDetails) {
		this.personalProgramDetails = personalProgramDetails;
		return this;
	}

	/**
	 * Fields for authorized user
	 *
	 * @return personalProgramDetails
	 **/
	@ApiModelProperty(value = "Fields for authorized user")
	public PersonalProgramDetailsFull getPersonalProgramDetails() {
		return personalProgramDetails;
	}

	public void setPersonalProgramDetails(PersonalProgramDetailsFull personalProgramDetails) {
		this.personalProgramDetails = personalProgramDetails;
	}

	public ProgramDetailsFull tags(List<ProgramTag> tags) {
		this.tags = tags;
		return this;
	}

	public ProgramDetailsFull addTagsItem(ProgramTag tagsItem) {
		if (this.tags == null) {
			this.tags = new ArrayList<ProgramTag>();
		}
		this.tags.add(tagsItem);
		return this;
	}

	/**
	 * Get tags
	 *
	 * @return tags
	 **/
	@ApiModelProperty(value = "")
	public List<ProgramTag> getTags() {
		return tags;
	}

	public void setTags(List<ProgramTag> tags) {
		this.tags = tags;
	}

	public ProgramDetailsFull id(UUID id) {
		this.id = id;
		return this;
	}

	/**
	 * Get id
	 *
	 * @return id
	 **/
	@ApiModelProperty(value = "")
	public UUID getId() {
		return id;
	}

	public void setId(UUID id) {
		this.id = id;
	}

	public ProgramDetailsFull logo(String logo) {
		this.logo = logo;
		return this;
	}

	/**
	 * Get logo
	 *
	 * @return logo
	 **/
	@ApiModelProperty(value = "")
	public String getLogo() {
		return logo;
	}

	public void setLogo(String logo) {
		this.logo = logo;
	}

	public ProgramDetailsFull url(String url) {
		this.url = url;
		return this;
	}

	/**
	 * Get url
	 *
	 * @return url
	 **/
	@ApiModelProperty(value = "")
	public String getUrl() {
		return url;
	}

	public void setUrl(String url) {
		this.url = url;
	}

	public ProgramDetailsFull color(String color) {
		this.color = color;
		return this;
	}

	/**
	 * Get color
	 *
	 * @return color
	 **/
	@ApiModelProperty(value = "")
	public String getColor() {
		return color;
	}

	public void setColor(String color) {
		this.color = color;
	}

	public ProgramDetailsFull description(String description) {
		this.description = description;
		return this;
	}

	/**
	 * Get description
	 *
	 * @return description
	 **/
	@ApiModelProperty(value = "")
	public String getDescription() {
		return description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	public ProgramDetailsFull title(String title) {
		this.title = title;
		return this;
	}

	/**
	 * Get title
	 *
	 * @return title
	 **/
	@ApiModelProperty(value = "")
	public String getTitle() {
		return title;
	}

	public void setTitle(String title) {
		this.title = title;
	}

	public ProgramDetailsFull ipfsHash(String ipfsHash) {
		this.ipfsHash = ipfsHash;
		return this;
	}

	/**
	 * Get ipfsHash
	 *
	 * @return ipfsHash
	 **/
	@ApiModelProperty(value = "")
	public String getIpfsHash() {
		return ipfsHash;
	}

	public void setIpfsHash(String ipfsHash) {
		this.ipfsHash = ipfsHash;
	}

	public ProgramDetailsFull status(StatusEnum status) {
		this.status = status;
		return this;
	}

	/**
	 * Get status
	 *
	 * @return status
	 **/
	@ApiModelProperty(value = "")
	public StatusEnum getStatus() {
		return status;
	}

	public void setStatus(StatusEnum status) {
		this.status = status;
	}

	public ProgramDetailsFull manager(ProfilePublic manager) {
		this.manager = manager;
		return this;
	}

	/**
	 * Get manager
	 *
	 * @return manager
	 **/
	@ApiModelProperty(value = "")
	public ProfilePublic getManager() {
		return manager;
	}

	public void setManager(ProfilePublic manager) {
		this.manager = manager;
	}

	@Override
	public boolean equals(java.lang.Object o) {
		if (this == o) {
			return true;
		}
		if (o == null || getClass() != o.getClass()) {
			return false;
		}
		ProgramDetailsFull programDetailsFull = (ProgramDetailsFull) o;
		return Objects.equals(this.currency, programDetailsFull.currency) &&
				Objects.equals(this.level, programDetailsFull.level) &&
				Objects.equals(this.periodDuration, programDetailsFull.periodDuration) &&
				Objects.equals(this.periodStarts, programDetailsFull.periodStarts) &&
				Objects.equals(this.periodEnds, programDetailsFull.periodEnds) &&
				Objects.equals(this.entryFee, programDetailsFull.entryFee) &&
				Objects.equals(this.entryFeeSelected, programDetailsFull.entryFeeSelected) &&
				Objects.equals(this.entryFeeCurrent, programDetailsFull.entryFeeCurrent) &&
				Objects.equals(this.successFee, programDetailsFull.successFee) &&
				Objects.equals(this.stopOutLevel, programDetailsFull.stopOutLevel) &&
				Objects.equals(this.isReinvesting, programDetailsFull.isReinvesting) &&
				Objects.equals(this.isSignalProgram, programDetailsFull.isSignalProgram) &&
				Objects.equals(this.signalSuccessFee, programDetailsFull.signalSuccessFee) &&
				Objects.equals(this.signalSubscriptionFee, programDetailsFull.signalSubscriptionFee) &&
				Objects.equals(this.availableInvestment, programDetailsFull.availableInvestment) &&
				Objects.equals(this.availableInvestmentBase, programDetailsFull.availableInvestmentBase) &&
				Objects.equals(this.statistic, programDetailsFull.statistic) &&
				Objects.equals(this.rating, programDetailsFull.rating) &&
				Objects.equals(this.personalProgramDetails, programDetailsFull.personalProgramDetails) &&
				Objects.equals(this.tags, programDetailsFull.tags) &&
				Objects.equals(this.id, programDetailsFull.id) &&
				Objects.equals(this.logo, programDetailsFull.logo) &&
				Objects.equals(this.url, programDetailsFull.url) &&
				Objects.equals(this.color, programDetailsFull.color) &&
				Objects.equals(this.description, programDetailsFull.description) &&
				Objects.equals(this.title, programDetailsFull.title) &&
				Objects.equals(this.ipfsHash, programDetailsFull.ipfsHash) &&
				Objects.equals(this.status, programDetailsFull.status) &&
				Objects.equals(this.manager, programDetailsFull.manager);
	}

	@Override
	public int hashCode() {
		return Objects.hash(currency, level, periodDuration, periodStarts, periodEnds, entryFee, entryFeeSelected, entryFeeCurrent, successFee, stopOutLevel, isReinvesting, isSignalProgram, signalSuccessFee, signalSubscriptionFee, availableInvestment, availableInvestmentBase, statistic, rating, personalProgramDetails, tags, id, logo, url, color, description, title, ipfsHash, status, manager);
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class ProgramDetailsFull {\n");

		sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
		sb.append("    level: ").append(toIndentedString(level)).append("\n");
		sb.append("    periodDuration: ").append(toIndentedString(periodDuration)).append("\n");
		sb.append("    periodStarts: ").append(toIndentedString(periodStarts)).append("\n");
		sb.append("    periodEnds: ").append(toIndentedString(periodEnds)).append("\n");
		sb.append("    entryFee: ").append(toIndentedString(entryFee)).append("\n");
		sb.append("    entryFeeSelected: ").append(toIndentedString(entryFeeSelected)).append("\n");
		sb.append("    entryFeeCurrent: ").append(toIndentedString(entryFeeCurrent)).append("\n");
		sb.append("    successFee: ").append(toIndentedString(successFee)).append("\n");
		sb.append("    stopOutLevel: ").append(toIndentedString(stopOutLevel)).append("\n");
		sb.append("    isReinvesting: ").append(toIndentedString(isReinvesting)).append("\n");
		sb.append("    isSignalProgram: ").append(toIndentedString(isSignalProgram)).append("\n");
		sb.append("    signalSuccessFee: ").append(toIndentedString(signalSuccessFee)).append("\n");
		sb.append("    signalSubscriptionFee: ").append(toIndentedString(signalSubscriptionFee)).append("\n");
		sb.append("    availableInvestment: ").append(toIndentedString(availableInvestment)).append("\n");
		sb.append("    availableInvestmentBase: ").append(toIndentedString(availableInvestmentBase)).append("\n");
		sb.append("    statistic: ").append(toIndentedString(statistic)).append("\n");
		sb.append("    rating: ").append(toIndentedString(rating)).append("\n");
		sb.append("    personalProgramDetails: ").append(toIndentedString(personalProgramDetails)).append("\n");
		sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
		sb.append("    id: ").append(toIndentedString(id)).append("\n");
		sb.append("    logo: ").append(toIndentedString(logo)).append("\n");
		sb.append("    url: ").append(toIndentedString(url)).append("\n");
		sb.append("    color: ").append(toIndentedString(color)).append("\n");
		sb.append("    description: ").append(toIndentedString(description)).append("\n");
		sb.append("    title: ").append(toIndentedString(title)).append("\n");
		sb.append("    ipfsHash: ").append(toIndentedString(ipfsHash)).append("\n");
		sb.append("    status: ").append(toIndentedString(status)).append("\n");
		sb.append("    manager: ").append(toIndentedString(manager)).append("\n");
		sb.append("}");
		return sb.toString();
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private String toIndentedString(java.lang.Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n    ");
	}


	/**
	 * Gets or Sets currency
	 */
	@JsonAdapter(CurrencyEnum.Adapter.class)
	public enum CurrencyEnum
	{
		UNDEFINED("Undefined"),

		GVT("GVT"),

		ETH("ETH"),

		BTC("BTC"),

		ADA("ADA"),

		USDT("USDT"),

		XRP("XRP"),

		BCH("BCH"),

		LTC("LTC"),

		DOGE("DOGE"),

		BNB("BNB"),

		USD("USD"),

		EUR("EUR");

		public static CurrencyEnum fromValue(String text) {
			for (CurrencyEnum b : CurrencyEnum.values()) {
				if (String.valueOf(b.value).equals(text)) {
					return b;
				}
			}
			return null;
		}

		private String value;

		CurrencyEnum(String value) {
			this.value = value;
		}

		public String getValue() {
			return value;
		}

		@Override
		public String toString() {
			return String.valueOf(value);
		}

		public static class Adapter extends TypeAdapter<CurrencyEnum>
		{
			@Override
			public void write(final JsonWriter jsonWriter, final CurrencyEnum enumeration) throws IOException {
				jsonWriter.value(enumeration.getValue());
			}

			@Override
			public CurrencyEnum read(final JsonReader jsonReader) throws IOException {
				String value = jsonReader.nextString();
				return CurrencyEnum.fromValue(String.valueOf(value));
			}
		}
	}

	/**
	 * Gets or Sets status
	 */
	@JsonAdapter(StatusEnum.Adapter.class)
	public enum StatusEnum
	{
		NONE("None"),

		PENDING("Pending"),

		ERRORCREATING("ErrorCreating"),

		ACTIVE("Active"),

		CLOSED("Closed"),

		ARCHIVED("Archived"),

		CLOSEDDUETOINACTIVITY("ClosedDueToInactivity");

		public static StatusEnum fromValue(String text) {
			for (StatusEnum b : StatusEnum.values()) {
				if (String.valueOf(b.value).equals(text)) {
					return b;
				}
			}
			return null;
		}

		private String value;

		StatusEnum(String value) {
			this.value = value;
		}

		public String getValue() {
			return value;
		}

		@Override
		public String toString() {
			return String.valueOf(value);
		}

		public static class Adapter extends TypeAdapter<StatusEnum>
		{
			@Override
			public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
				jsonWriter.value(enumeration.getValue());
			}

			@Override
			public StatusEnum read(final JsonReader jsonReader) throws IOException {
				String value = jsonReader.nextString();
				return StatusEnum.fromValue(String.valueOf(value));
			}
		}
	}

}

