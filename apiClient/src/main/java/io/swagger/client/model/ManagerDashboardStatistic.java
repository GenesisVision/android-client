/*
 * Core API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import com.google.gson.annotations.SerializedName;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import io.swagger.annotations.ApiModelProperty;

/**
 * ManagerDashboardStatistic
 */

public class ManagerDashboardStatistic
{
	@SerializedName("programBalances")
	private List<ProgramBalances> programBalances = null;

	@SerializedName("investorsCount")
	private Integer investorsCount = null;

	@SerializedName("investorsFund")
	private Double investorsFund = null;

	@SerializedName("endOfNextPeriod")
	private EndOfNextPeriod endOfNextPeriod = null;

	@SerializedName("totalProfit")
	private Double totalProfit = null;

	@SerializedName("fundChart")
	private List<ManagerFundChart> fundChart = null;

	@SerializedName("profitChart")
	private List<ManagerProfitChart> profitChart = null;

	public ManagerDashboardStatistic programBalances(List<ProgramBalances> programBalances) {
		this.programBalances = programBalances;
		return this;
	}

	public ManagerDashboardStatistic addProgramBalancesItem(ProgramBalances programBalancesItem) {
		if (this.programBalances == null) {
			this.programBalances = new ArrayList<ProgramBalances>();
		}
		this.programBalances.add(programBalancesItem);
		return this;
	}

	/**
	 * Get programBalances
	 *
	 * @return programBalances
	 **/
	@ApiModelProperty(value = "")
	public List<ProgramBalances> getProgramBalances() {
		return programBalances;
	}

	public void setProgramBalances(List<ProgramBalances> programBalances) {
		this.programBalances = programBalances;
	}

	public ManagerDashboardStatistic investorsCount(Integer investorsCount) {
		this.investorsCount = investorsCount;
		return this;
	}

	/**
	 * Get investorsCount
	 *
	 * @return investorsCount
	 **/
	@ApiModelProperty(value = "")
	public Integer getInvestorsCount() {
		return investorsCount;
	}

	public void setInvestorsCount(Integer investorsCount) {
		this.investorsCount = investorsCount;
	}

	public ManagerDashboardStatistic investorsFund(Double investorsFund) {
		this.investorsFund = investorsFund;
		return this;
	}

	/**
	 * Get investorsFund
	 *
	 * @return investorsFund
	 **/
	@ApiModelProperty(value = "")
	public Double getInvestorsFund() {
		return investorsFund;
	}

	public void setInvestorsFund(Double investorsFund) {
		this.investorsFund = investorsFund;
	}

	public ManagerDashboardStatistic endOfNextPeriod(EndOfNextPeriod endOfNextPeriod) {
		this.endOfNextPeriod = endOfNextPeriod;
		return this;
	}

	/**
	 * Get endOfNextPeriod
	 *
	 * @return endOfNextPeriod
	 **/
	@ApiModelProperty(value = "")
	public EndOfNextPeriod getEndOfNextPeriod() {
		return endOfNextPeriod;
	}

	public void setEndOfNextPeriod(EndOfNextPeriod endOfNextPeriod) {
		this.endOfNextPeriod = endOfNextPeriod;
	}

	public ManagerDashboardStatistic totalProfit(Double totalProfit) {
		this.totalProfit = totalProfit;
		return this;
	}

	/**
	 * Get totalProfit
	 *
	 * @return totalProfit
	 **/
	@ApiModelProperty(value = "")
	public Double getTotalProfit() {
		return totalProfit;
	}

	public void setTotalProfit(Double totalProfit) {
		this.totalProfit = totalProfit;
	}

	public ManagerDashboardStatistic fundChart(List<ManagerFundChart> fundChart) {
		this.fundChart = fundChart;
		return this;
	}

	public ManagerDashboardStatistic addFundChartItem(ManagerFundChart fundChartItem) {
		if (this.fundChart == null) {
			this.fundChart = new ArrayList<ManagerFundChart>();
		}
		this.fundChart.add(fundChartItem);
		return this;
	}

	/**
	 * Get fundChart
	 *
	 * @return fundChart
	 **/
	@ApiModelProperty(value = "")
	public List<ManagerFundChart> getFundChart() {
		return fundChart;
	}

	public void setFundChart(List<ManagerFundChart> fundChart) {
		this.fundChart = fundChart;
	}

	public ManagerDashboardStatistic profitChart(List<ManagerProfitChart> profitChart) {
		this.profitChart = profitChart;
		return this;
	}

	public ManagerDashboardStatistic addProfitChartItem(ManagerProfitChart profitChartItem) {
		if (this.profitChart == null) {
			this.profitChart = new ArrayList<ManagerProfitChart>();
		}
		this.profitChart.add(profitChartItem);
		return this;
	}

	/**
	 * Get profitChart
	 *
	 * @return profitChart
	 **/
	@ApiModelProperty(value = "")
	public List<ManagerProfitChart> getProfitChart() {
		return profitChart;
	}

	public void setProfitChart(List<ManagerProfitChart> profitChart) {
		this.profitChart = profitChart;
	}


	@Override
	public boolean equals(java.lang.Object o) {
		if (this == o) {
			return true;
		}
		if (o == null || getClass() != o.getClass()) {
			return false;
		}
		ManagerDashboardStatistic managerDashboardStatistic = (ManagerDashboardStatistic) o;
		return Objects.equals(this.programBalances, managerDashboardStatistic.programBalances) &&
				Objects.equals(this.investorsCount, managerDashboardStatistic.investorsCount) &&
				Objects.equals(this.investorsFund, managerDashboardStatistic.investorsFund) &&
				Objects.equals(this.endOfNextPeriod, managerDashboardStatistic.endOfNextPeriod) &&
				Objects.equals(this.totalProfit, managerDashboardStatistic.totalProfit) &&
				Objects.equals(this.fundChart, managerDashboardStatistic.fundChart) &&
				Objects.equals(this.profitChart, managerDashboardStatistic.profitChart);
	}

	@Override
	public int hashCode() {
		return Objects.hash(programBalances, investorsCount, investorsFund, endOfNextPeriod, totalProfit, fundChart, profitChart);
	}


	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class ManagerDashboardStatistic {\n");

		sb.append("    programBalances: ").append(toIndentedString(programBalances)).append("\n");
		sb.append("    investorsCount: ").append(toIndentedString(investorsCount)).append("\n");
		sb.append("    investorsFund: ").append(toIndentedString(investorsFund)).append("\n");
		sb.append("    endOfNextPeriod: ").append(toIndentedString(endOfNextPeriod)).append("\n");
		sb.append("    totalProfit: ").append(toIndentedString(totalProfit)).append("\n");
		sb.append("    fundChart: ").append(toIndentedString(fundChart)).append("\n");
		sb.append("    profitChart: ").append(toIndentedString(profitChart)).append("\n");
		sb.append("}");
		return sb.toString();
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private String toIndentedString(java.lang.Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n    ");
	}

}

