/*
 * Core API v1.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import com.google.gson.annotations.SerializedName;

import java.util.Objects;

import io.swagger.annotations.ApiModelProperty;

/**
 * DashboardSummary
 */

public class DashboardSummary
{
	@SerializedName("chart")
	private DashboardChartValue chart = null;

	@SerializedName("events")
	private DashboardPortfolioEvents events = null;

	@SerializedName("profileHeader")
	private ProfileHeaderViewModel profileHeader = null;

	@SerializedName("programsCount")
	private Integer programsCount = null;

	@SerializedName("fundsCount")
	private Integer fundsCount = null;

	@SerializedName("requests")
	private ProgramRequests requests = null;

	public DashboardSummary chart(DashboardChartValue chart) {
		this.chart = chart;
		return this;
	}

	/**
	 * Get chart
	 *
	 * @return chart
	 **/
	@ApiModelProperty(value = "")
	public DashboardChartValue getChart() {
		return chart;
	}

	public void setChart(DashboardChartValue chart) {
		this.chart = chart;
	}

	public DashboardSummary events(DashboardPortfolioEvents events) {
		this.events = events;
		return this;
	}

	/**
	 * Get events
	 *
	 * @return events
	 **/
	@ApiModelProperty(value = "")
	public DashboardPortfolioEvents getEvents() {
		return events;
	}

	public void setEvents(DashboardPortfolioEvents events) {
		this.events = events;
	}

	public DashboardSummary profileHeader(ProfileHeaderViewModel profileHeader) {
		this.profileHeader = profileHeader;
		return this;
	}

	/**
	 * Get profileHeader
	 *
	 * @return profileHeader
	 **/
	@ApiModelProperty(value = "")
	public ProfileHeaderViewModel getProfileHeader() {
		return profileHeader;
	}

	public void setProfileHeader(ProfileHeaderViewModel profileHeader) {
		this.profileHeader = profileHeader;
	}

	public DashboardSummary programsCount(Integer programsCount) {
		this.programsCount = programsCount;
		return this;
	}

	/**
	 * Get programsCount
	 *
	 * @return programsCount
	 **/
	@ApiModelProperty(value = "")
	public Integer getProgramsCount() {
		return programsCount;
	}

	public void setProgramsCount(Integer programsCount) {
		this.programsCount = programsCount;
	}

	public DashboardSummary fundsCount(Integer fundsCount) {
		this.fundsCount = fundsCount;
		return this;
	}

	/**
	 * Get fundsCount
	 *
	 * @return fundsCount
	 **/
	@ApiModelProperty(value = "")
	public Integer getFundsCount() {
		return fundsCount;
	}

	public void setFundsCount(Integer fundsCount) {
		this.fundsCount = fundsCount;
	}

	public DashboardSummary requests(ProgramRequests requests) {
		this.requests = requests;
		return this;
	}

	/**
	 * Get requests
	 *
	 * @return requests
	 **/
	@ApiModelProperty(value = "")
	public ProgramRequests getRequests() {
		return requests;
	}

	public void setRequests(ProgramRequests requests) {
		this.requests = requests;
	}


	@Override
	public boolean equals(java.lang.Object o) {
		if (this == o) {
			return true;
		}
		if (o == null || getClass() != o.getClass()) {
			return false;
		}
		DashboardSummary dashboardSummary = (DashboardSummary) o;
		return Objects.equals(this.chart, dashboardSummary.chart) &&
				Objects.equals(this.events, dashboardSummary.events) &&
				Objects.equals(this.profileHeader, dashboardSummary.profileHeader) &&
				Objects.equals(this.programsCount, dashboardSummary.programsCount) &&
				Objects.equals(this.fundsCount, dashboardSummary.fundsCount) &&
				Objects.equals(this.requests, dashboardSummary.requests);
	}

	@Override
	public int hashCode() {
		return Objects.hash(chart, events, profileHeader, programsCount, fundsCount, requests);
	}


	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class DashboardSummary {\n");

		sb.append("    chart: ").append(toIndentedString(chart)).append("\n");
		sb.append("    events: ").append(toIndentedString(events)).append("\n");
		sb.append("    profileHeader: ").append(toIndentedString(profileHeader)).append("\n");
		sb.append("    programsCount: ").append(toIndentedString(programsCount)).append("\n");
		sb.append("    fundsCount: ").append(toIndentedString(fundsCount)).append("\n");
		sb.append("    requests: ").append(toIndentedString(requests)).append("\n");
		sb.append("}");
		return sb.toString();
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private String toIndentedString(java.lang.Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n    ");
	}

}

