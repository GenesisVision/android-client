/*
 * Core API v2.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import android.os.Parcel;
import android.os.Parcelable;

import com.google.gson.annotations.SerializedName;

import java.util.Objects;

import io.swagger.v3.oas.annotations.media.Schema;
/**
 * CreateWithdrawalRequestModel
 */


public class CreateWithdrawalRequestModel implements Parcelable
{
	public static final Parcelable.Creator<CreateWithdrawalRequestModel> CREATOR = new Parcelable.Creator<CreateWithdrawalRequestModel>()
	{
		public CreateWithdrawalRequestModel createFromParcel(Parcel in) {
			return new CreateWithdrawalRequestModel(in);
		}

		public CreateWithdrawalRequestModel[] newArray(int size) {
			return new CreateWithdrawalRequestModel[size];
		}
	};

	@SerializedName("amount")
	private Double amount = null;

	@SerializedName("currency")
	private Currency currency = null;

	@SerializedName("address")
	private String address = null;

	@SerializedName("twoFactorCode")
	private String twoFactorCode = null;

	public CreateWithdrawalRequestModel() {
	}

	CreateWithdrawalRequestModel(Parcel in) {
		amount = (Double) in.readValue(null);
		currency = (Currency) in.readValue(Currency.class.getClassLoader());
		address = (String) in.readValue(null);
		twoFactorCode = (String) in.readValue(null);
	}

	public CreateWithdrawalRequestModel amount(Double amount) {
		this.amount = amount;
		return this;
	}

	/**
	 * Get amount
	 *
	 * @return amount
	 **/
	@Schema(description = "")
	public Double getAmount() {
		return amount;
	}

	public void setAmount(Double amount) {
		this.amount = amount;
	}

	public CreateWithdrawalRequestModel currency(Currency currency) {
		this.currency = currency;
		return this;
	}

	/**
	 * Get currency
	 *
	 * @return currency
	 **/
	@Schema(description = "")
	public Currency getCurrency() {
		return currency;
	}

	public void setCurrency(Currency currency) {
		this.currency = currency;
	}

	public CreateWithdrawalRequestModel address(String address) {
		this.address = address;
		return this;
	}

	/**
	 * Get address
	 *
	 * @return address
	 **/
	@Schema(description = "")
	public String getAddress() {
		return address;
	}

	public void setAddress(String address) {
		this.address = address;
	}

	public CreateWithdrawalRequestModel twoFactorCode(String twoFactorCode) {
		this.twoFactorCode = twoFactorCode;
		return this;
	}

	/**
	 * Get twoFactorCode
	 *
	 * @return twoFactorCode
	 **/
	@Schema(description = "")
	public String getTwoFactorCode() {
		return twoFactorCode;
	}

	public void setTwoFactorCode(String twoFactorCode) {
		this.twoFactorCode = twoFactorCode;
	}

	@Override
	public boolean equals(java.lang.Object o) {
		if (this == o) {
			return true;
		}
		if (o == null || getClass() != o.getClass()) {
			return false;
		}
		CreateWithdrawalRequestModel createWithdrawalRequestModel = (CreateWithdrawalRequestModel) o;
		return Objects.equals(this.amount, createWithdrawalRequestModel.amount) &&
				Objects.equals(this.currency, createWithdrawalRequestModel.currency) &&
				Objects.equals(this.address, createWithdrawalRequestModel.address) &&
				Objects.equals(this.twoFactorCode, createWithdrawalRequestModel.twoFactorCode);
	}

	@Override
	public int hashCode() {
		return Objects.hash(amount, currency, address, twoFactorCode);
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class CreateWithdrawalRequestModel {\n");

		sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
		sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
		sb.append("    address: ").append(toIndentedString(address)).append("\n");
		sb.append("    twoFactorCode: ").append(toIndentedString(twoFactorCode)).append("\n");
		sb.append("}");
		return sb.toString();
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private String toIndentedString(java.lang.Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n    ");
	}

	public void writeToParcel(Parcel out, int flags) {
		out.writeValue(amount);
		out.writeValue(currency);
		out.writeValue(address);
		out.writeValue(twoFactorCode);
	}

	public int describeContents() {
		return 0;
	}
}
