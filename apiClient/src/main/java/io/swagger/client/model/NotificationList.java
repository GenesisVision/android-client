/*
 * Core API v2.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import android.os.Parcel;
import android.os.Parcelable;

import com.google.gson.annotations.SerializedName;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import io.swagger.v3.oas.annotations.media.Schema;

/**
 * NotificationList
 */


public class NotificationList implements Parcelable
{
	public static final Parcelable.Creator<NotificationList> CREATOR = new Parcelable.Creator<NotificationList>()
	{
		public NotificationList createFromParcel(Parcel in) {
			return new NotificationList(in);
		}

		public NotificationList[] newArray(int size) {
			return new NotificationList[size];
		}
	};

	@SerializedName("notifications")
	private List<NotificationViewModel> notifications = null;

	@SerializedName("total")
	private Integer total = null;

	public NotificationList() {
	}

	NotificationList(Parcel in) {
		notifications = (List<NotificationViewModel>) in.readValue(NotificationViewModel.class.getClassLoader());
		total = (Integer) in.readValue(null);
	}

	public NotificationList notifications(List<NotificationViewModel> notifications) {
		this.notifications = notifications;
		return this;
	}

	public NotificationList addNotificationsItem(NotificationViewModel notificationsItem) {
		if (this.notifications == null) {
			this.notifications = new ArrayList<NotificationViewModel>();
		}
		this.notifications.add(notificationsItem);
		return this;
	}

	/**
	 * Get notifications
	 *
	 * @return notifications
	 **/
	@Schema(description = "")
	public List<NotificationViewModel> getNotifications() {
		return notifications;
	}

	public void setNotifications(List<NotificationViewModel> notifications) {
		this.notifications = notifications;
	}

	public NotificationList total(Integer total) {
		this.total = total;
		return this;
	}

	/**
	 * Get total
	 *
	 * @return total
	 **/
	@Schema(description = "")
	public Integer getTotal() {
		return total;
	}

	public void setTotal(Integer total) {
		this.total = total;
	}

	@Override
	public boolean equals(java.lang.Object o) {
		if (this == o) {
			return true;
		}
		if (o == null || getClass() != o.getClass()) {
			return false;
		}
		NotificationList notificationList = (NotificationList) o;
		return Objects.equals(this.notifications, notificationList.notifications) &&
				Objects.equals(this.total, notificationList.total);
	}

	@Override
	public int hashCode() {
		return Objects.hash(notifications, total);
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class NotificationList {\n");

		sb.append("    notifications: ").append(toIndentedString(notifications)).append("\n");
		sb.append("    total: ").append(toIndentedString(total)).append("\n");
		sb.append("}");
		return sb.toString();
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private String toIndentedString(java.lang.Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n    ");
	}

	public void writeToParcel(Parcel out, int flags) {
		out.writeValue(notifications);
		out.writeValue(total);
	}

	public int describeContents() {
		return 0;
	}
}
