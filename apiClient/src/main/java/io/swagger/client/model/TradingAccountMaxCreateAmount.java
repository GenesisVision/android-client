/*
 * Core API v2.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.AmountWithCurrency;
import io.swagger.client.model.BrokerTradeServerType;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import android.os.Parcelable;
import android.os.Parcel;
/**
 * TradingAccountMaxCreateAmount
 */


public class TradingAccountMaxCreateAmount implements Parcelable {
  @SerializedName("serverType")
  private BrokerTradeServerType serverType = null;

  @SerializedName("transferDemo")
  private List<AmountWithCurrency> transferDemo = null;

  public TradingAccountMaxCreateAmount() {
  }
  public TradingAccountMaxCreateAmount serverType(BrokerTradeServerType serverType) {
    this.serverType = serverType;
    return this;
  }

   /**
   * Get serverType
   * @return serverType
  **/
  @Schema(description = "")
  public BrokerTradeServerType getServerType() {
    return serverType;
  }

  public void setServerType(BrokerTradeServerType serverType) {
    this.serverType = serverType;
  }

  public TradingAccountMaxCreateAmount transferDemo(List<AmountWithCurrency> transferDemo) {
    this.transferDemo = transferDemo;
    return this;
  }

  public TradingAccountMaxCreateAmount addTransferDemoItem(AmountWithCurrency transferDemoItem) {
    if (this.transferDemo == null) {
      this.transferDemo = new ArrayList<AmountWithCurrency>();
    }
    this.transferDemo.add(transferDemoItem);
    return this;
  }

   /**
   * Get transferDemo
   * @return transferDemo
  **/
  @Schema(description = "")
  public List<AmountWithCurrency> getTransferDemo() {
    return transferDemo;
  }

  public void setTransferDemo(List<AmountWithCurrency> transferDemo) {
    this.transferDemo = transferDemo;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TradingAccountMaxCreateAmount tradingAccountMaxCreateAmount = (TradingAccountMaxCreateAmount) o;
    return Objects.equals(this.serverType, tradingAccountMaxCreateAmount.serverType) &&
        Objects.equals(this.transferDemo, tradingAccountMaxCreateAmount.transferDemo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(serverType, transferDemo);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TradingAccountMaxCreateAmount {\n");
    
    sb.append("    serverType: ").append(toIndentedString(serverType)).append("\n");
    sb.append("    transferDemo: ").append(toIndentedString(transferDemo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public void writeToParcel(Parcel out, int flags) {
    out.writeValue(serverType);
    out.writeValue(transferDemo);
  }

  TradingAccountMaxCreateAmount(Parcel in) {
    serverType = (BrokerTradeServerType)in.readValue(BrokerTradeServerType.class.getClassLoader());
    transferDemo = (List<AmountWithCurrency>)in.readValue(AmountWithCurrency.class.getClassLoader());
  }

  public int describeContents() {
    return 0;
  }

  public static final Parcelable.Creator<TradingAccountMaxCreateAmount> CREATOR = new Parcelable.Creator<TradingAccountMaxCreateAmount>() {
    public TradingAccountMaxCreateAmount createFromParcel(Parcel in) {
      return new TradingAccountMaxCreateAmount(in);
    }
    public TradingAccountMaxCreateAmount[] newArray(int size) {
      return new TradingAccountMaxCreateAmount[size];
    }
  };
}
