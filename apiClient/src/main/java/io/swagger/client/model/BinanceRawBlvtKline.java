/*
 * Core API v2.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import android.os.Parcel;
import android.os.Parcelable;

import com.google.gson.annotations.SerializedName;

import org.joda.time.DateTime;

import java.util.Objects;

import io.swagger.v3.oas.annotations.media.Schema;
/**
 * BinanceRawBlvtKline
 */


public class BinanceRawBlvtKline implements Parcelable {
  @SerializedName("openTime")
  private DateTime openTime = null;

  @SerializedName("open")
  private Double open = null;

  @SerializedName("high")
  private Double high = null;

  @SerializedName("low")
  private Double low = null;

  @SerializedName("close")
  private Double close = null;

  @SerializedName("realLeverage")
  private Double realLeverage = null;

  @SerializedName("closeTime")
  private DateTime closeTime = null;

  @SerializedName("navUpdates")
  private Integer navUpdates = null;

  public BinanceRawBlvtKline() {
  }
  public BinanceRawBlvtKline openTime(DateTime openTime) {
    this.openTime = openTime;
    return this;
  }

   /**
   * Get openTime
   * @return openTime
  **/
  @Schema(description = "")
  public DateTime getOpenTime() {
    return openTime;
  }

  public void setOpenTime(DateTime openTime) {
    this.openTime = openTime;
  }

  public BinanceRawBlvtKline open(Double open) {
    this.open = open;
    return this;
  }

   /**
   * Get open
   * @return open
  **/
  @Schema(description = "")
  public Double getOpen() {
    return open;
  }

  public void setOpen(Double open) {
    this.open = open;
  }

  public BinanceRawBlvtKline high(Double high) {
    this.high = high;
    return this;
  }

   /**
   * Get high
   * @return high
  **/
  @Schema(description = "")
  public Double getHigh() {
    return high;
  }

  public void setHigh(Double high) {
    this.high = high;
  }

  public BinanceRawBlvtKline low(Double low) {
    this.low = low;
    return this;
  }

   /**
   * Get low
   * @return low
  **/
  @Schema(description = "")
  public Double getLow() {
    return low;
  }

  public void setLow(Double low) {
    this.low = low;
  }

  public BinanceRawBlvtKline close(Double close) {
    this.close = close;
    return this;
  }

   /**
   * Get close
   * @return close
  **/
  @Schema(description = "")
  public Double getClose() {
    return close;
  }

  public void setClose(Double close) {
    this.close = close;
  }

  public BinanceRawBlvtKline realLeverage(Double realLeverage) {
    this.realLeverage = realLeverage;
    return this;
  }

   /**
   * Get realLeverage
   * @return realLeverage
  **/
  @Schema(description = "")
  public Double getRealLeverage() {
    return realLeverage;
  }

  public void setRealLeverage(Double realLeverage) {
    this.realLeverage = realLeverage;
  }

  public BinanceRawBlvtKline closeTime(DateTime closeTime) {
    this.closeTime = closeTime;
    return this;
  }

   /**
   * Get closeTime
   * @return closeTime
  **/
  @Schema(description = "")
  public DateTime getCloseTime() {
    return closeTime;
  }

  public void setCloseTime(DateTime closeTime) {
    this.closeTime = closeTime;
  }

  public BinanceRawBlvtKline navUpdates(Integer navUpdates) {
    this.navUpdates = navUpdates;
    return this;
  }

   /**
   * Get navUpdates
   * @return navUpdates
  **/
  @Schema(description = "")
  public Integer getNavUpdates() {
    return navUpdates;
  }

  public void setNavUpdates(Integer navUpdates) {
    this.navUpdates = navUpdates;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BinanceRawBlvtKline binanceRawBlvtKline = (BinanceRawBlvtKline) o;
    return Objects.equals(this.openTime, binanceRawBlvtKline.openTime) &&
        Objects.equals(this.open, binanceRawBlvtKline.open) &&
        Objects.equals(this.high, binanceRawBlvtKline.high) &&
        Objects.equals(this.low, binanceRawBlvtKline.low) &&
        Objects.equals(this.close, binanceRawBlvtKline.close) &&
        Objects.equals(this.realLeverage, binanceRawBlvtKline.realLeverage) &&
        Objects.equals(this.closeTime, binanceRawBlvtKline.closeTime) &&
        Objects.equals(this.navUpdates, binanceRawBlvtKline.navUpdates);
  }

  @Override
  public int hashCode() {
    return Objects.hash(openTime, open, high, low, close, realLeverage, closeTime, navUpdates);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BinanceRawBlvtKline {\n");
    
    sb.append("    openTime: ").append(toIndentedString(openTime)).append("\n");
    sb.append("    open: ").append(toIndentedString(open)).append("\n");
    sb.append("    high: ").append(toIndentedString(high)).append("\n");
    sb.append("    low: ").append(toIndentedString(low)).append("\n");
    sb.append("    close: ").append(toIndentedString(close)).append("\n");
    sb.append("    realLeverage: ").append(toIndentedString(realLeverage)).append("\n");
    sb.append("    closeTime: ").append(toIndentedString(closeTime)).append("\n");
    sb.append("    navUpdates: ").append(toIndentedString(navUpdates)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public void writeToParcel(Parcel out, int flags) {
    out.writeValue(openTime);
    out.writeValue(open);
    out.writeValue(high);
    out.writeValue(low);
    out.writeValue(close);
    out.writeValue(realLeverage);
    out.writeValue(closeTime);
    out.writeValue(navUpdates);
  }

  BinanceRawBlvtKline(Parcel in) {
    openTime = (DateTime)in.readValue(DateTime.class.getClassLoader());
    open = (Double)in.readValue(null);
    high = (Double)in.readValue(null);
    low = (Double)in.readValue(null);
    close = (Double)in.readValue(null);
    realLeverage = (Double)in.readValue(null);
    closeTime = (DateTime)in.readValue(DateTime.class.getClassLoader());
    navUpdates = (Integer)in.readValue(null);
  }

  public int describeContents() {
    return 0;
  }

  public static final Parcelable.Creator<BinanceRawBlvtKline> CREATOR = new Parcelable.Creator<BinanceRawBlvtKline>() {
    public BinanceRawBlvtKline createFromParcel(Parcel in) {
      return new BinanceRawBlvtKline(in);
    }
    public BinanceRawBlvtKline[] newArray(int size) {
      return new BinanceRawBlvtKline[size];
    }
  };
}
