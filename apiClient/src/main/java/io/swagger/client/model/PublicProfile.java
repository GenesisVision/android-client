/*
 * Core API v2.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import android.os.Parcel;
import android.os.Parcelable;

import com.google.gson.annotations.SerializedName;

import org.joda.time.DateTime;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
import java.util.UUID;

import io.swagger.v3.oas.annotations.media.Schema;
/**
 * PublicProfile
 */


public class PublicProfile implements Parcelable
{
	public static final Parcelable.Creator<PublicProfile> CREATOR = new Parcelable.Creator<PublicProfile>()
	{
		public PublicProfile createFromParcel(Parcel in) {
			return new PublicProfile(in);
		}

		public PublicProfile[] newArray(int size) {
			return new PublicProfile[size];
		}
	};

	@SerializedName("id")
	private UUID id = null;

	@SerializedName("username")
	private String username = null;

	@SerializedName("about")
	private String about = null;

	@SerializedName("avatar")
	private String avatar = null;

	@SerializedName("regDate")
	private DateTime regDate = null;

	@SerializedName("assets")
	private List<String> assets = null;

	@SerializedName("url")
	private String url = null;

	@SerializedName("socialLinks")
	private List<SocialLinkViewModel> socialLinks = null;

	public PublicProfile() {
	}

	PublicProfile(Parcel in) {
		id = (UUID) in.readValue(UUID.class.getClassLoader());
		username = (String) in.readValue(null);
		about = (String) in.readValue(null);
		avatar = (String) in.readValue(null);
		regDate = (DateTime) in.readValue(DateTime.class.getClassLoader());
		assets = (List<String>) in.readValue(null);
		url = (String) in.readValue(null);
		socialLinks = (List<SocialLinkViewModel>) in.readValue(SocialLinkViewModel.class.getClassLoader());
	}

	public PublicProfile id(UUID id) {
		this.id = id;
		return this;
	}

	/**
	 * Get id
	 *
	 * @return id
	 **/
	@Schema(description = "")
	public UUID getId() {
		return id;
	}

	public void setId(UUID id) {
		this.id = id;
	}

	public PublicProfile username(String username) {
		this.username = username;
		return this;
	}

	/**
	 * Get username
	 *
	 * @return username
	 **/
	@Schema(description = "")
	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public PublicProfile about(String about) {
		this.about = about;
		return this;
	}

	/**
	 * Get about
	 *
	 * @return about
	 **/
	@Schema(description = "")
	public String getAbout() {
		return about;
	}

	public void setAbout(String about) {
		this.about = about;
	}

	public PublicProfile avatar(String avatar) {
		this.avatar = avatar;
		return this;
	}

	/**
	 * Get avatar
	 *
	 * @return avatar
	 **/
	@Schema(description = "")
	public String getAvatar() {
		return avatar;
	}

	public void setAvatar(String avatar) {
		this.avatar = avatar;
	}

	public PublicProfile regDate(DateTime regDate) {
		this.regDate = regDate;
		return this;
	}

	/**
	 * Get regDate
	 *
	 * @return regDate
	 **/
	@Schema(description = "")
	public DateTime getRegDate() {
		return regDate;
	}

	public void setRegDate(DateTime regDate) {
		this.regDate = regDate;
	}

	public PublicProfile assets(List<String> assets) {
		this.assets = assets;
		return this;
	}

	public PublicProfile addAssetsItem(String assetsItem) {
		if (this.assets == null) {
			this.assets = new ArrayList<String>();
		}
		this.assets.add(assetsItem);
		return this;
	}

	/**
	 * Get assets
	 *
	 * @return assets
	 **/
	@Schema(description = "")
	public List<String> getAssets() {
		return assets;
	}

	public void setAssets(List<String> assets) {
		this.assets = assets;
	}

	public PublicProfile url(String url) {
		this.url = url;
		return this;
	}

	/**
	 * Get url
	 *
	 * @return url
	 **/
	@Schema(description = "")
	public String getUrl() {
		return url;
	}

	public void setUrl(String url) {
		this.url = url;
	}

	public PublicProfile socialLinks(List<SocialLinkViewModel> socialLinks) {
		this.socialLinks = socialLinks;
		return this;
	}

	public PublicProfile addSocialLinksItem(SocialLinkViewModel socialLinksItem) {
		if (this.socialLinks == null) {
			this.socialLinks = new ArrayList<SocialLinkViewModel>();
		}
		this.socialLinks.add(socialLinksItem);
		return this;
	}

	/**
	 * Get socialLinks
	 *
	 * @return socialLinks
	 **/
	@Schema(description = "")
	public List<SocialLinkViewModel> getSocialLinks() {
		return socialLinks;
	}

	public void setSocialLinks(List<SocialLinkViewModel> socialLinks) {
		this.socialLinks = socialLinks;
	}

	@Override
	public boolean equals(java.lang.Object o) {
		if (this == o) {
			return true;
		}
		if (o == null || getClass() != o.getClass()) {
			return false;
		}
		PublicProfile publicProfile = (PublicProfile) o;
		return Objects.equals(this.id, publicProfile.id) &&
				Objects.equals(this.username, publicProfile.username) &&
				Objects.equals(this.about, publicProfile.about) &&
				Objects.equals(this.avatar, publicProfile.avatar) &&
				Objects.equals(this.regDate, publicProfile.regDate) &&
				Objects.equals(this.assets, publicProfile.assets) &&
				Objects.equals(this.url, publicProfile.url) &&
				Objects.equals(this.socialLinks, publicProfile.socialLinks);
	}

	@Override
	public int hashCode() {
		return Objects.hash(id, username, about, avatar, regDate, assets, url, socialLinks);
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class PublicProfile {\n");

		sb.append("    id: ").append(toIndentedString(id)).append("\n");
		sb.append("    username: ").append(toIndentedString(username)).append("\n");
		sb.append("    about: ").append(toIndentedString(about)).append("\n");
		sb.append("    avatar: ").append(toIndentedString(avatar)).append("\n");
		sb.append("    regDate: ").append(toIndentedString(regDate)).append("\n");
		sb.append("    assets: ").append(toIndentedString(assets)).append("\n");
		sb.append("    url: ").append(toIndentedString(url)).append("\n");
		sb.append("    socialLinks: ").append(toIndentedString(socialLinks)).append("\n");
		sb.append("}");
		return sb.toString();
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private String toIndentedString(java.lang.Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n    ");
	}

	public void writeToParcel(Parcel out, int flags) {
		out.writeValue(id);
		out.writeValue(username);
		out.writeValue(about);
		out.writeValue(avatar);
		out.writeValue(regDate);
		out.writeValue(assets);
		out.writeValue(url);
		out.writeValue(socialLinks);
	}

	public int describeContents() {
		return 0;
	}
}
