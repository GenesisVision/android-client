/*
 * Core API v2.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.SignalSubscription;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import android.os.Parcelable;
import android.os.Parcel;
/**
 * SignalSubscriptionItemsViewModel
 */


public class SignalSubscriptionItemsViewModel implements Parcelable {
  @SerializedName("items")
  private List<SignalSubscription> items = null;

  @SerializedName("total")
  private Integer total = null;

  public SignalSubscriptionItemsViewModel() {
  }
  public SignalSubscriptionItemsViewModel items(List<SignalSubscription> items) {
    this.items = items;
    return this;
  }

  public SignalSubscriptionItemsViewModel addItemsItem(SignalSubscription itemsItem) {
    if (this.items == null) {
      this.items = new ArrayList<SignalSubscription>();
    }
    this.items.add(itemsItem);
    return this;
  }

   /**
   * Get items
   * @return items
  **/
  @Schema(description = "")
  public List<SignalSubscription> getItems() {
    return items;
  }

  public void setItems(List<SignalSubscription> items) {
    this.items = items;
  }

  public SignalSubscriptionItemsViewModel total(Integer total) {
    this.total = total;
    return this;
  }

   /**
   * Get total
   * @return total
  **/
  @Schema(description = "")
  public Integer getTotal() {
    return total;
  }

  public void setTotal(Integer total) {
    this.total = total;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SignalSubscriptionItemsViewModel signalSubscriptionItemsViewModel = (SignalSubscriptionItemsViewModel) o;
    return Objects.equals(this.items, signalSubscriptionItemsViewModel.items) &&
        Objects.equals(this.total, signalSubscriptionItemsViewModel.total);
  }

  @Override
  public int hashCode() {
    return Objects.hash(items, total);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SignalSubscriptionItemsViewModel {\n");
    
    sb.append("    items: ").append(toIndentedString(items)).append("\n");
    sb.append("    total: ").append(toIndentedString(total)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public void writeToParcel(Parcel out, int flags) {
    out.writeValue(items);
    out.writeValue(total);
  }

  SignalSubscriptionItemsViewModel(Parcel in) {
    items = (List<SignalSubscription>)in.readValue(SignalSubscription.class.getClassLoader());
    total = (Integer)in.readValue(null);
  }

  public int describeContents() {
    return 0;
  }

  public static final Parcelable.Creator<SignalSubscriptionItemsViewModel> CREATOR = new Parcelable.Creator<SignalSubscriptionItemsViewModel>() {
    public SignalSubscriptionItemsViewModel createFromParcel(Parcel in) {
      return new SignalSubscriptionItemsViewModel(in);
    }
    public SignalSubscriptionItemsViewModel[] newArray(int size) {
      return new SignalSubscriptionItemsViewModel[size];
    }
  };
}
