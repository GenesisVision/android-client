/*
 * Core API v2.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import android.os.Parcel;
import android.os.Parcelable;

import com.google.gson.annotations.SerializedName;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import io.swagger.v3.oas.annotations.media.Schema;

/**
 * EventInvestingItemFilters
 */


public class EventInvestingItemFilters implements Parcelable
{
	@SerializedName("all")
	private List<FilterItemInfo> all = null;

	@SerializedName("program")
	private List<FilterItemInfo> program = null;

	@SerializedName("fund")
	private List<FilterItemInfo> fund = null;

	public EventInvestingItemFilters() {
	}

	public EventInvestingItemFilters all(List<FilterItemInfo> all) {
		this.all = all;
		return this;
	}

	public EventInvestingItemFilters addAllItem(FilterItemInfo allItem) {
		if (this.all == null) {
			this.all = new ArrayList<FilterItemInfo>();
		}
		this.all.add(allItem);
		return this;
	}

	/**
	 * Get all
	 *
	 * @return all
	 **/
	@Schema(description = "")
	public List<FilterItemInfo> getAll() {
		return all;
	}

	public void setAll(List<FilterItemInfo> all) {
		this.all = all;
	}

	public EventInvestingItemFilters program(List<FilterItemInfo> program) {
		this.program = program;
		return this;
	}

	public EventInvestingItemFilters addProgramItem(FilterItemInfo programItem) {
		if (this.program == null) {
			this.program = new ArrayList<FilterItemInfo>();
		}
		this.program.add(programItem);
		return this;
	}

	/**
	 * Get program
	 *
	 * @return program
	 **/
	@Schema(description = "")
	public List<FilterItemInfo> getProgram() {
		return program;
	}

	public void setProgram(List<FilterItemInfo> program) {
		this.program = program;
	}

	public EventInvestingItemFilters fund(List<FilterItemInfo> fund) {
		this.fund = fund;
		return this;
	}

	public EventInvestingItemFilters addFundItem(FilterItemInfo fundItem) {
		if (this.fund == null) {
			this.fund = new ArrayList<FilterItemInfo>();
		}
		this.fund.add(fundItem);
		return this;
	}

	/**
	 * Get fund
	 *
	 * @return fund
	 **/
	@Schema(description = "")
	public List<FilterItemInfo> getFund() {
		return fund;
	}

	public void setFund(List<FilterItemInfo> fund) {
		this.fund = fund;
	}


	@Override
	public boolean equals(java.lang.Object o) {
		if (this == o) {
			return true;
		}
		if (o == null || getClass() != o.getClass()) {
			return false;
		}
		EventInvestingItemFilters eventInvestingItemFilters = (EventInvestingItemFilters) o;
		return Objects.equals(this.all, eventInvestingItemFilters.all) &&
				Objects.equals(this.program, eventInvestingItemFilters.program) &&
				Objects.equals(this.fund, eventInvestingItemFilters.fund);
	}

	@Override
	public int hashCode() {
		return Objects.hash(all, program, fund);
	}


	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class EventInvestingItemFilters {\n");

		sb.append("    all: ").append(toIndentedString(all)).append("\n");
		sb.append("    program: ").append(toIndentedString(program)).append("\n");
		sb.append("    fund: ").append(toIndentedString(fund)).append("\n");
		sb.append("}");
		return sb.toString();
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private String toIndentedString(java.lang.Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n    ");
	}


	public void writeToParcel(Parcel out, int flags) {
		out.writeValue(all);
		out.writeValue(program);
		out.writeValue(fund);
	}

	public static final Parcelable.Creator<EventInvestingItemFilters> CREATOR = new Parcelable.Creator<EventInvestingItemFilters>()
	{
		public EventInvestingItemFilters createFromParcel(Parcel in) {
			return new EventInvestingItemFilters(in);
		}

		public EventInvestingItemFilters[] newArray(int size) {
			return new EventInvestingItemFilters[size];
		}
	};

	public int describeContents() {
		return 0;
	}

	EventInvestingItemFilters(Parcel in) {
		all = (List<FilterItemInfo>) in.readValue(FilterItemInfo.class.getClassLoader());
		program = (List<FilterItemInfo>) in.readValue(FilterItemInfo.class.getClassLoader());
		fund = (List<FilterItemInfo>) in.readValue(FilterItemInfo.class.getClassLoader());
	}
}
