/*
 * Core API v2.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import android.os.Parcel;
import android.os.Parcelable;

import com.google.gson.annotations.SerializedName;

import java.util.Objects;

import io.swagger.v3.oas.annotations.media.Schema;

/**
 * BinanceRawSymbolIcebergPartsFilter
 */


public class BinanceRawSymbolIcebergPartsFilter implements Parcelable
{
	@SerializedName("filterType")
	private BinanceSymbolFilterType filterType = null;

	@SerializedName("limit")
	private Integer limit = null;

	public BinanceRawSymbolIcebergPartsFilter() {
	}

	public BinanceRawSymbolIcebergPartsFilter filterType(BinanceSymbolFilterType filterType) {
		this.filterType = filterType;
		return this;
	}

	/**
	 * Get filterType
	 *
	 * @return filterType
	 **/
	@Schema(description = "")
	public BinanceSymbolFilterType getFilterType() {
		return filterType;
	}

	public void setFilterType(BinanceSymbolFilterType filterType) {
		this.filterType = filterType;
	}

	public BinanceRawSymbolIcebergPartsFilter limit(Integer limit) {
		this.limit = limit;
		return this;
	}

	/**
	 * Get limit
	 *
	 * @return limit
	 **/
	@Schema(description = "")
	public Integer getLimit() {
		return limit;
	}

	public void setLimit(Integer limit) {
		this.limit = limit;
	}


	@Override
	public boolean equals(java.lang.Object o) {
		if (this == o) {
			return true;
		}
		if (o == null || getClass() != o.getClass()) {
			return false;
		}
		BinanceRawSymbolIcebergPartsFilter binanceRawSymbolIcebergPartsFilter = (BinanceRawSymbolIcebergPartsFilter) o;
		return Objects.equals(this.filterType, binanceRawSymbolIcebergPartsFilter.filterType) &&
				Objects.equals(this.limit, binanceRawSymbolIcebergPartsFilter.limit);
	}

	@Override
	public int hashCode() {
		return Objects.hash(filterType, limit);
	}


	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class BinanceRawSymbolIcebergPartsFilter {\n");

		sb.append("    filterType: ").append(toIndentedString(filterType)).append("\n");
		sb.append("    limit: ").append(toIndentedString(limit)).append("\n");
		sb.append("}");
		return sb.toString();
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private String toIndentedString(java.lang.Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n    ");
	}


	public void writeToParcel(Parcel out, int flags) {
		out.writeValue(filterType);
		out.writeValue(limit);
	}

	public static final Parcelable.Creator<BinanceRawSymbolIcebergPartsFilter> CREATOR = new Parcelable.Creator<BinanceRawSymbolIcebergPartsFilter>()
	{
		public BinanceRawSymbolIcebergPartsFilter createFromParcel(Parcel in) {
			return new BinanceRawSymbolIcebergPartsFilter(in);
		}

		public BinanceRawSymbolIcebergPartsFilter[] newArray(int size) {
			return new BinanceRawSymbolIcebergPartsFilter[size];
		}
	};

	public int describeContents() {
		return 0;
	}

	BinanceRawSymbolIcebergPartsFilter(Parcel in) {
		filterType = (BinanceSymbolFilterType) in.readValue(BinanceSymbolFilterType.class.getClassLoader());
		limit = (Integer) in.readValue(null);
	}
}
