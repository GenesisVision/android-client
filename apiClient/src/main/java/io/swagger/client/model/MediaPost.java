/*
 * Core API v2.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.PostImage;
import io.swagger.client.model.SocialLinkType;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.UUID;
import org.joda.time.DateTime;
import android.os.Parcelable;
import android.os.Parcel;
/**
 * MediaPost
 */


public class MediaPost implements Parcelable {
  @SerializedName("id")
  private UUID id = null;

  @SerializedName("url")
  private String url = null;

  @SerializedName("type")
  private SocialLinkType type = null;

  @SerializedName("typeLogoUrl")
  private String typeLogoUrl = null;

  @SerializedName("author")
  private String author = null;

  @SerializedName("authorUrl")
  private String authorUrl = null;

  @SerializedName("authorLogoUrl")
  private String authorLogoUrl = null;

  @SerializedName("title")
  private String title = null;

  @SerializedName("text")
  private String text = null;

  @SerializedName("date")
  private DateTime date = null;

  @SerializedName("image")
  private PostImage image = null;

  public MediaPost() {
  }
  public MediaPost id(UUID id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public UUID getId() {
    return id;
  }

  public void setId(UUID id) {
    this.id = id;
  }

  public MediaPost url(String url) {
    this.url = url;
    return this;
  }

   /**
   * Get url
   * @return url
  **/
  @Schema(description = "")
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }

  public MediaPost type(SocialLinkType type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(description = "")
  public SocialLinkType getType() {
    return type;
  }

  public void setType(SocialLinkType type) {
    this.type = type;
  }

  public MediaPost typeLogoUrl(String typeLogoUrl) {
    this.typeLogoUrl = typeLogoUrl;
    return this;
  }

   /**
   * Get typeLogoUrl
   * @return typeLogoUrl
  **/
  @Schema(description = "")
  public String getTypeLogoUrl() {
    return typeLogoUrl;
  }

  public void setTypeLogoUrl(String typeLogoUrl) {
    this.typeLogoUrl = typeLogoUrl;
  }

  public MediaPost author(String author) {
    this.author = author;
    return this;
  }

   /**
   * Get author
   * @return author
  **/
  @Schema(description = "")
  public String getAuthor() {
    return author;
  }

  public void setAuthor(String author) {
    this.author = author;
  }

  public MediaPost authorUrl(String authorUrl) {
    this.authorUrl = authorUrl;
    return this;
  }

   /**
   * Get authorUrl
   * @return authorUrl
  **/
  @Schema(description = "")
  public String getAuthorUrl() {
    return authorUrl;
  }

  public void setAuthorUrl(String authorUrl) {
    this.authorUrl = authorUrl;
  }

  public MediaPost authorLogoUrl(String authorLogoUrl) {
    this.authorLogoUrl = authorLogoUrl;
    return this;
  }

   /**
   * Get authorLogoUrl
   * @return authorLogoUrl
  **/
  @Schema(description = "")
  public String getAuthorLogoUrl() {
    return authorLogoUrl;
  }

  public void setAuthorLogoUrl(String authorLogoUrl) {
    this.authorLogoUrl = authorLogoUrl;
  }

  public MediaPost title(String title) {
    this.title = title;
    return this;
  }

   /**
   * Get title
   * @return title
  **/
  @Schema(description = "")
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public MediaPost text(String text) {
    this.text = text;
    return this;
  }

   /**
   * Get text
   * @return text
  **/
  @Schema(description = "")
  public String getText() {
    return text;
  }

  public void setText(String text) {
    this.text = text;
  }

  public MediaPost date(DateTime date) {
    this.date = date;
    return this;
  }

   /**
   * Get date
   * @return date
  **/
  @Schema(description = "")
  public DateTime getDate() {
    return date;
  }

  public void setDate(DateTime date) {
    this.date = date;
  }

  public MediaPost image(PostImage image) {
    this.image = image;
    return this;
  }

   /**
   * Get image
   * @return image
  **/
  @Schema(description = "")
  public PostImage getImage() {
    return image;
  }

  public void setImage(PostImage image) {
    this.image = image;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MediaPost mediaPost = (MediaPost) o;
    return Objects.equals(this.id, mediaPost.id) &&
        Objects.equals(this.url, mediaPost.url) &&
        Objects.equals(this.type, mediaPost.type) &&
        Objects.equals(this.typeLogoUrl, mediaPost.typeLogoUrl) &&
        Objects.equals(this.author, mediaPost.author) &&
        Objects.equals(this.authorUrl, mediaPost.authorUrl) &&
        Objects.equals(this.authorLogoUrl, mediaPost.authorLogoUrl) &&
        Objects.equals(this.title, mediaPost.title) &&
        Objects.equals(this.text, mediaPost.text) &&
        Objects.equals(this.date, mediaPost.date) &&
        Objects.equals(this.image, mediaPost.image);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, url, type, typeLogoUrl, author, authorUrl, authorLogoUrl, title, text, date, image);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MediaPost {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    typeLogoUrl: ").append(toIndentedString(typeLogoUrl)).append("\n");
    sb.append("    author: ").append(toIndentedString(author)).append("\n");
    sb.append("    authorUrl: ").append(toIndentedString(authorUrl)).append("\n");
    sb.append("    authorLogoUrl: ").append(toIndentedString(authorLogoUrl)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    text: ").append(toIndentedString(text)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    image: ").append(toIndentedString(image)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public void writeToParcel(Parcel out, int flags) {
    out.writeValue(id);
    out.writeValue(url);
    out.writeValue(type);
    out.writeValue(typeLogoUrl);
    out.writeValue(author);
    out.writeValue(authorUrl);
    out.writeValue(authorLogoUrl);
    out.writeValue(title);
    out.writeValue(text);
    out.writeValue(date);
    out.writeValue(image);
  }

  MediaPost(Parcel in) {
    id = (UUID)in.readValue(UUID.class.getClassLoader());
    url = (String)in.readValue(null);
    type = (SocialLinkType)in.readValue(SocialLinkType.class.getClassLoader());
    typeLogoUrl = (String)in.readValue(null);
    author = (String)in.readValue(null);
    authorUrl = (String)in.readValue(null);
    authorLogoUrl = (String)in.readValue(null);
    title = (String)in.readValue(null);
    text = (String)in.readValue(null);
    date = (DateTime)in.readValue(DateTime.class.getClassLoader());
    image = (PostImage)in.readValue(PostImage.class.getClassLoader());
  }

  public int describeContents() {
    return 0;
  }

  public static final Parcelable.Creator<MediaPost> CREATOR = new Parcelable.Creator<MediaPost>() {
    public MediaPost createFromParcel(Parcel in) {
      return new MediaPost(in);
    }
    public MediaPost[] newArray(int size) {
      return new MediaPost[size];
    }
  };
}
