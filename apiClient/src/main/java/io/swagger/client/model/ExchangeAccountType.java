/*
 * Core API v2.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import android.os.Parcel;
import android.os.Parcelable;

import com.google.gson.annotations.SerializedName;

import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.UUID;

import io.swagger.v3.oas.annotations.media.Schema;

/**
 * ExchangeAccountType
 */


public class ExchangeAccountType implements Parcelable
{
	public static final Parcelable.Creator<ExchangeAccountType> CREATOR = new Parcelable.Creator<ExchangeAccountType>()
	{
		public ExchangeAccountType createFromParcel(Parcel in) {
			return new ExchangeAccountType(in);
		}

		public ExchangeAccountType[] newArray(int size) {
			return new ExchangeAccountType[size];
		}
	};

	@SerializedName("id")
	private UUID id = null;

	@SerializedName("name")
	private String name = null;

	@SerializedName("description")
	private String description = null;

	@SerializedName("type")
	private BrokerTradeServerType type = null;

	@SerializedName("minimumDepositsAmount")
	private Map<String, Double> minimumDepositsAmount = null;

	@SerializedName("isKycRequired")
	private Boolean isKycRequired = null;

	@SerializedName("isCountryNotUSRequired")
	private Boolean isCountryNotUSRequired = null;

	@SerializedName("isSignalsAvailable")
	private Boolean isSignalsAvailable = null;

	@SerializedName("isDepositRequired")
	private Boolean isDepositRequired = null;

	public ExchangeAccountType() {
	}

	ExchangeAccountType(Parcel in) {
		id = (UUID) in.readValue(UUID.class.getClassLoader());
		name = (String) in.readValue(null);
		description = (String) in.readValue(null);
		type = (BrokerTradeServerType) in.readValue(BrokerTradeServerType.class.getClassLoader());
		minimumDepositsAmount = (Map<String, Double>) in.readValue(null);
		isKycRequired = (Boolean) in.readValue(null);
		isCountryNotUSRequired = (Boolean) in.readValue(null);
		isSignalsAvailable = (Boolean) in.readValue(null);
		isDepositRequired = (Boolean) in.readValue(null);
	}

	public ExchangeAccountType id(UUID id) {
		this.id = id;
		return this;
	}

	/**
	 * Get id
	 *
	 * @return id
	 **/
	@Schema(description = "")
	public UUID getId() {
		return id;
	}

	public void setId(UUID id) {
		this.id = id;
	}

	public ExchangeAccountType name(String name) {
		this.name = name;
		return this;
	}

	/**
	 * Get name
	 *
	 * @return name
	 **/
	@Schema(description = "")
	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public ExchangeAccountType description(String description) {
		this.description = description;
		return this;
	}

	/**
	 * Get description
	 *
	 * @return description
	 **/
	@Schema(description = "")
	public String getDescription() {
		return description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	public ExchangeAccountType type(BrokerTradeServerType type) {
		this.type = type;
		return this;
	}

	/**
	 * Get type
	 *
	 * @return type
	 **/
	@Schema(description = "")
	public BrokerTradeServerType getType() {
		return type;
	}

	public void setType(BrokerTradeServerType type) {
		this.type = type;
	}

	public ExchangeAccountType minimumDepositsAmount(Map<String, Double> minimumDepositsAmount) {
		this.minimumDepositsAmount = minimumDepositsAmount;
		return this;
	}

	public ExchangeAccountType putMinimumDepositsAmountItem(String key, Double minimumDepositsAmountItem) {
		if (this.minimumDepositsAmount == null) {
			this.minimumDepositsAmount = new HashMap<String, Double>();
		}
		this.minimumDepositsAmount.put(key, minimumDepositsAmountItem);
		return this;
	}

	/**
	 * Get minimumDepositsAmount
	 *
	 * @return minimumDepositsAmount
	 **/
	@Schema(description = "")
	public Map<String, Double> getMinimumDepositsAmount() {
		return minimumDepositsAmount;
	}

	public void setMinimumDepositsAmount(Map<String, Double> minimumDepositsAmount) {
		this.minimumDepositsAmount = minimumDepositsAmount;
	}

	public ExchangeAccountType isKycRequired(Boolean isKycRequired) {
		this.isKycRequired = isKycRequired;
		return this;
	}

	/**
	 * Get isKycRequired
	 *
	 * @return isKycRequired
	 **/
	@Schema(description = "")
	public Boolean isIsKycRequired() {
		return isKycRequired;
	}

	public void setIsKycRequired(Boolean isKycRequired) {
		this.isKycRequired = isKycRequired;
	}

	public ExchangeAccountType isCountryNotUSRequired(Boolean isCountryNotUSRequired) {
		this.isCountryNotUSRequired = isCountryNotUSRequired;
		return this;
	}

	/**
	 * Get isCountryNotUSRequired
	 *
	 * @return isCountryNotUSRequired
	 **/
	@Schema(description = "")
	public Boolean isIsCountryNotUSRequired() {
		return isCountryNotUSRequired;
	}

	public void setIsCountryNotUSRequired(Boolean isCountryNotUSRequired) {
		this.isCountryNotUSRequired = isCountryNotUSRequired;
	}

	public ExchangeAccountType isSignalsAvailable(Boolean isSignalsAvailable) {
		this.isSignalsAvailable = isSignalsAvailable;
		return this;
	}

	/**
	 * Get isSignalsAvailable
	 *
	 * @return isSignalsAvailable
	 **/
	@Schema(description = "")
	public Boolean isIsSignalsAvailable() {
		return isSignalsAvailable;
	}

	public void setIsSignalsAvailable(Boolean isSignalsAvailable) {
		this.isSignalsAvailable = isSignalsAvailable;
	}

	public ExchangeAccountType isDepositRequired(Boolean isDepositRequired) {
		this.isDepositRequired = isDepositRequired;
		return this;
	}

	/**
	 * Get isDepositRequired
	 *
	 * @return isDepositRequired
	 **/
	@Schema(description = "")
	public Boolean isIsDepositRequired() {
		return isDepositRequired;
	}

	public void setIsDepositRequired(Boolean isDepositRequired) {
		this.isDepositRequired = isDepositRequired;
	}

	@Override
	public boolean equals(java.lang.Object o) {
		if (this == o) {
			return true;
		}
		if (o == null || getClass() != o.getClass()) {
			return false;
		}
		ExchangeAccountType exchangeAccountType = (ExchangeAccountType) o;
		return Objects.equals(this.id, exchangeAccountType.id) &&
				Objects.equals(this.name, exchangeAccountType.name) &&
				Objects.equals(this.description, exchangeAccountType.description) &&
				Objects.equals(this.type, exchangeAccountType.type) &&
				Objects.equals(this.minimumDepositsAmount, exchangeAccountType.minimumDepositsAmount) &&
				Objects.equals(this.isKycRequired, exchangeAccountType.isKycRequired) &&
				Objects.equals(this.isCountryNotUSRequired, exchangeAccountType.isCountryNotUSRequired) &&
				Objects.equals(this.isSignalsAvailable, exchangeAccountType.isSignalsAvailable) &&
				Objects.equals(this.isDepositRequired, exchangeAccountType.isDepositRequired);
	}

	@Override
	public int hashCode() {
		return Objects.hash(id, name, description, type, minimumDepositsAmount, isKycRequired, isCountryNotUSRequired, isSignalsAvailable, isDepositRequired);
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class ExchangeAccountType {\n");

		sb.append("    id: ").append(toIndentedString(id)).append("\n");
		sb.append("    name: ").append(toIndentedString(name)).append("\n");
		sb.append("    description: ").append(toIndentedString(description)).append("\n");
		sb.append("    type: ").append(toIndentedString(type)).append("\n");
		sb.append("    minimumDepositsAmount: ").append(toIndentedString(minimumDepositsAmount)).append("\n");
		sb.append("    isKycRequired: ").append(toIndentedString(isKycRequired)).append("\n");
		sb.append("    isCountryNotUSRequired: ").append(toIndentedString(isCountryNotUSRequired)).append("\n");
		sb.append("    isSignalsAvailable: ").append(toIndentedString(isSignalsAvailable)).append("\n");
		sb.append("    isDepositRequired: ").append(toIndentedString(isDepositRequired)).append("\n");
		sb.append("}");
		return sb.toString();
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private String toIndentedString(java.lang.Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n    ");
	}

	public void writeToParcel(Parcel out, int flags) {
		out.writeValue(id);
		out.writeValue(name);
		out.writeValue(description);
		out.writeValue(type);
		out.writeValue(minimumDepositsAmount);
		out.writeValue(isKycRequired);
		out.writeValue(isCountryNotUSRequired);
		out.writeValue(isSignalsAvailable);
		out.writeValue(isDepositRequired);
	}

	public int describeContents() {
		return 0;
	}
}
