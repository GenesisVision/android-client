/*
 * Core API v2.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import android.os.Parcel;
import android.os.Parcelable;

import com.google.gson.annotations.SerializedName;

import java.util.Objects;
import java.util.UUID;

import io.swagger.v3.oas.annotations.media.Schema;

/**
 * SocialSummaryStrategy
 */


public class SocialSummaryStrategy implements Parcelable
{
	@SerializedName("id")
	private UUID id = null;

	@SerializedName("logoUrl")
	private String logoUrl = null;

	@SerializedName("color")
	private String color = null;

	@SerializedName("title")
	private String title = null;

	@SerializedName("url")
	private String url = null;

	@SerializedName("assetType")
	private AssetType assetType = null;

	@SerializedName("programDetails")
	private ProgramAssetDetails programDetails = null;

	@SerializedName("investorsCount")
	private Integer investorsCount = null;

	@SerializedName("subscribersCount")
	private Integer subscribersCount = null;

	@SerializedName("profitPercent")
	private Double profitPercent = null;

	public SocialSummaryStrategy() {
	}

	public SocialSummaryStrategy id(UUID id) {
		this.id = id;
		return this;
	}

	/**
	 * Get id
	 *
	 * @return id
	 **/
	@Schema(description = "")
	public UUID getId() {
		return id;
	}

	public void setId(UUID id) {
		this.id = id;
	}

	public SocialSummaryStrategy logoUrl(String logoUrl) {
		this.logoUrl = logoUrl;
		return this;
	}

	/**
	 * Get logoUrl
	 *
	 * @return logoUrl
	 **/
	@Schema(description = "")
	public String getLogoUrl() {
		return logoUrl;
	}

	public void setLogoUrl(String logoUrl) {
		this.logoUrl = logoUrl;
	}

	public SocialSummaryStrategy color(String color) {
		this.color = color;
		return this;
	}

	/**
	 * Get color
	 *
	 * @return color
	 **/
	@Schema(description = "")
	public String getColor() {
		return color;
	}

	public void setColor(String color) {
		this.color = color;
	}

	public SocialSummaryStrategy title(String title) {
		this.title = title;
		return this;
	}

	/**
	 * Get title
	 *
	 * @return title
	 **/
	@Schema(description = "")
	public String getTitle() {
		return title;
	}

	public void setTitle(String title) {
		this.title = title;
	}

	public SocialSummaryStrategy url(String url) {
		this.url = url;
		return this;
	}

	/**
	 * Get url
	 *
	 * @return url
	 **/
	@Schema(description = "")
	public String getUrl() {
		return url;
	}

	public void setUrl(String url) {
		this.url = url;
	}

	public SocialSummaryStrategy assetType(AssetType assetType) {
		this.assetType = assetType;
		return this;
	}

	/**
	 * Get assetType
	 *
	 * @return assetType
	 **/
	@Schema(description = "")
	public AssetType getAssetType() {
		return assetType;
	}

	public void setAssetType(AssetType assetType) {
		this.assetType = assetType;
	}

	public SocialSummaryStrategy programDetails(ProgramAssetDetails programDetails) {
		this.programDetails = programDetails;
		return this;
	}

	/**
	 * Get programDetails
	 *
	 * @return programDetails
	 **/
	@Schema(description = "")
	public ProgramAssetDetails getProgramDetails() {
		return programDetails;
	}

	public void setProgramDetails(ProgramAssetDetails programDetails) {
		this.programDetails = programDetails;
	}

	public SocialSummaryStrategy investorsCount(Integer investorsCount) {
		this.investorsCount = investorsCount;
		return this;
	}

	/**
	 * Get investorsCount
	 *
	 * @return investorsCount
	 **/
	@Schema(description = "")
	public Integer getInvestorsCount() {
		return investorsCount;
	}

	public void setInvestorsCount(Integer investorsCount) {
		this.investorsCount = investorsCount;
	}

	public SocialSummaryStrategy subscribersCount(Integer subscribersCount) {
		this.subscribersCount = subscribersCount;
		return this;
	}

	/**
	 * Get subscribersCount
	 *
	 * @return subscribersCount
	 **/
	@Schema(description = "")
	public Integer getSubscribersCount() {
		return subscribersCount;
	}

	public void setSubscribersCount(Integer subscribersCount) {
		this.subscribersCount = subscribersCount;
	}

	public SocialSummaryStrategy profitPercent(Double profitPercent) {
		this.profitPercent = profitPercent;
		return this;
	}

	/**
	 * Get profitPercent
	 *
	 * @return profitPercent
	 **/
	@Schema(description = "")
	public Double getProfitPercent() {
		return profitPercent;
	}

	public void setProfitPercent(Double profitPercent) {
		this.profitPercent = profitPercent;
	}


	@Override
	public boolean equals(java.lang.Object o) {
		if (this == o) {
			return true;
		}
		if (o == null || getClass() != o.getClass()) {
			return false;
		}
		SocialSummaryStrategy socialSummaryStrategy = (SocialSummaryStrategy) o;
		return Objects.equals(this.id, socialSummaryStrategy.id) &&
				Objects.equals(this.logoUrl, socialSummaryStrategy.logoUrl) &&
				Objects.equals(this.color, socialSummaryStrategy.color) &&
				Objects.equals(this.title, socialSummaryStrategy.title) &&
				Objects.equals(this.url, socialSummaryStrategy.url) &&
				Objects.equals(this.assetType, socialSummaryStrategy.assetType) &&
				Objects.equals(this.programDetails, socialSummaryStrategy.programDetails) &&
				Objects.equals(this.investorsCount, socialSummaryStrategy.investorsCount) &&
				Objects.equals(this.subscribersCount, socialSummaryStrategy.subscribersCount) &&
				Objects.equals(this.profitPercent, socialSummaryStrategy.profitPercent);
	}

	@Override
	public int hashCode() {
		return Objects.hash(id, logoUrl, color, title, url, assetType, programDetails, investorsCount, subscribersCount, profitPercent);
	}


	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class SocialSummaryStrategy {\n");

		sb.append("    id: ").append(toIndentedString(id)).append("\n");
		sb.append("    logoUrl: ").append(toIndentedString(logoUrl)).append("\n");
		sb.append("    color: ").append(toIndentedString(color)).append("\n");
		sb.append("    title: ").append(toIndentedString(title)).append("\n");
		sb.append("    url: ").append(toIndentedString(url)).append("\n");
		sb.append("    assetType: ").append(toIndentedString(assetType)).append("\n");
		sb.append("    programDetails: ").append(toIndentedString(programDetails)).append("\n");
		sb.append("    investorsCount: ").append(toIndentedString(investorsCount)).append("\n");
		sb.append("    subscribersCount: ").append(toIndentedString(subscribersCount)).append("\n");
		sb.append("    profitPercent: ").append(toIndentedString(profitPercent)).append("\n");
		sb.append("}");
		return sb.toString();
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private String toIndentedString(java.lang.Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n    ");
	}


	public void writeToParcel(Parcel out, int flags) {
		out.writeValue(id);
		out.writeValue(logoUrl);
		out.writeValue(color);
		out.writeValue(title);
		out.writeValue(url);
		out.writeValue(assetType);
		out.writeValue(programDetails);
		out.writeValue(investorsCount);
		out.writeValue(subscribersCount);
		out.writeValue(profitPercent);
	}

	public static final Parcelable.Creator<SocialSummaryStrategy> CREATOR = new Parcelable.Creator<SocialSummaryStrategy>()
	{
		public SocialSummaryStrategy createFromParcel(Parcel in) {
			return new SocialSummaryStrategy(in);
		}

		public SocialSummaryStrategy[] newArray(int size) {
			return new SocialSummaryStrategy[size];
		}
	};

	public int describeContents() {
		return 0;
	}

	SocialSummaryStrategy(Parcel in) {
		id = (UUID) in.readValue(UUID.class.getClassLoader());
		logoUrl = (String) in.readValue(null);
		color = (String) in.readValue(null);
		title = (String) in.readValue(null);
		url = (String) in.readValue(null);
		assetType = (AssetType) in.readValue(AssetType.class.getClassLoader());
		programDetails = (ProgramAssetDetails) in.readValue(ProgramAssetDetails.class.getClassLoader());
		investorsCount = (Integer) in.readValue(null);
		subscribersCount = (Integer) in.readValue(null);
		profitPercent = (Double) in.readValue(null);
	}
}
